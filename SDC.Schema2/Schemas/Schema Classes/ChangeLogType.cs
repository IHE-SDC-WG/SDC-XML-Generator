// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Inforamtion about changes to file or part of a
/// file.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChangeLogType : ExtensionBaseType
{
    
    #region Private fields
    private ChangedFieldType _changedField;
    
    private DataTypes_SType _changedTo;
    
    private DataTypes_SType _changedFrom;
    
    private List<string_Stype> _changeType;
    
    private ReplacedIDsType _replaces;
    
    private dateTime_Stype _changeDate;
    
    private string_Stype _changeDescription;
    
    private ContactsType _editors;
    
    private ChangeTrackingType _changeTracking;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ChangedFieldType ChangedField
    {
        get
        {
            return this._changedField;
        }
        set
        {
            if ((this._changedField == value))
            {
                return;
            }
            if (((this._changedField == null) 
                        || (_changedField.Equals(value) != true)))
            {
                this._changedField = value;
                this.OnPropertyChanged("ChangedField", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual DataTypes_SType ChangedTo
    {
        get
        {
            return this._changedTo;
        }
        set
        {
            if ((this._changedTo == value))
            {
                return;
            }
            if (((this._changedTo == null) 
                        || (_changedTo.Equals(value) != true)))
            {
                this._changedTo = value;
                this.OnPropertyChanged("ChangedTo", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual DataTypes_SType ChangedFrom
    {
        get
        {
            return this._changedFrom;
        }
        set
        {
            if ((this._changedFrom == value))
            {
                return;
            }
            if (((this._changedFrom == null) 
                        || (_changedFrom.Equals(value) != true)))
            {
                this._changedFrom = value;
                this.OnPropertyChanged("ChangedFrom", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ChangeType", Order=3)]
    public virtual List<string_Stype> ChangeType
    {
        get
        {
            return this._changeType;
        }
        set
        {
            if ((this._changeType == value))
            {
                return;
            }
            if (((this._changeType == null) 
                        || (_changeType.Equals(value) != true)))
            {
                this._changeType = value;
                this.OnPropertyChanged("ChangeType", value);
            }
        }
    }
    
    /// <summary>
    /// The retired/deprecated item that is being replaced.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual ReplacedIDsType Replaces
    {
        get
        {
            return this._replaces;
        }
        set
        {
            if ((this._replaces == value))
            {
                return;
            }
            if (((this._replaces == null) 
                        || (_replaces.Equals(value) != true)))
            {
                this._replaces = value;
                this.OnPropertyChanged("Replaces", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual dateTime_Stype ChangeDate
    {
        get
        {
            return this._changeDate;
        }
        set
        {
            if ((this._changeDate == value))
            {
                return;
            }
            if (((this._changeDate == null) 
                        || (_changeDate.Equals(value) != true)))
            {
                this._changeDate = value;
                this.OnPropertyChanged("ChangeDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual string_Stype ChangeDescription
    {
        get
        {
            return this._changeDescription;
        }
        set
        {
            if ((this._changeDescription == value))
            {
                return;
            }
            if (((this._changeDescription == null) 
                        || (_changeDescription.Equals(value) != true)))
            {
                this._changeDescription = value;
                this.OnPropertyChanged("ChangeDescription", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual ContactsType Editors
    {
        get
        {
            return this._editors;
        }
        set
        {
            if ((this._editors == value))
            {
                return;
            }
            if (((this._editors == null) 
                        || (_editors.Equals(value) != true)))
            {
                this._editors = value;
                this.OnPropertyChanged("Editors", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual ChangeTrackingType ChangeTracking
    {
        get
        {
            return this._changeTracking;
        }
        set
        {
            if ((this._changeTracking == value))
            {
                return;
            }
            if (((this._changeTracking == null) 
                        || (_changeTracking.Equals(value) != true)))
            {
                this._changeTracking = value;
                this.OnPropertyChanged("ChangeTracking", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether ChangeType should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeType()
    {
        return ChangeType != null && ChangeType.Count > 0;
    }
    
    /// <summary>
    /// Test whether ChangedField should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedField()
    {
        return (_changedField != null);
    }
    
    /// <summary>
    /// Test whether ChangedTo should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedTo()
    {
        return (_changedTo != null);
    }
    
    /// <summary>
    /// Test whether ChangedFrom should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedFrom()
    {
        return (_changedFrom != null);
    }
    
    /// <summary>
    /// Test whether Replaces should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReplaces()
    {
        return (_replaces != null);
    }
    
    /// <summary>
    /// Test whether ChangeDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeDate()
    {
        return (_changeDate != null);
    }
    
    /// <summary>
    /// Test whether ChangeDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeDescription()
    {
        return (_changeDescription != null);
    }
    
    /// <summary>
    /// Test whether Editors should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEditors()
    {
        return (_editors != null);
    }
    
    /// <summary>
    /// Test whether ChangeTracking should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeTracking()
    {
        return (_changeTracking != null);
    }
}
}
#pragma warning restore
