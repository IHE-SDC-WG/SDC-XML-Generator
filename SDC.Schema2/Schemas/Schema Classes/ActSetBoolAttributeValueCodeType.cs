// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Sets the value of any named attribute. However, it is primarily
/// designed for Response element(s) on a Question or ListItem. The value may be
/// determined by a literal value with a defined data type, the value at another named
/// Response item, an expression written in a specified scripting or programming
/// language, or the value of a named code listed in the same
/// template.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSetBoolAttributeValueCodeType : ScriptCodeBoolType
{
    
    #region Private fields
    private string _elementName;
    
    private string _attributeName;
    
    private string _x_targetNames;
    #endregion
    
    ///// <summary>
    ///// ActSetBoolAttributeValueCode class constructor
    ///// </summary>
    //public ActSetBoolAttributeValueCode()
    //{
    //    this._attributeName = "val";
    //}
    
    /// <summary>
    /// The @name attribute of the referenced
    /// element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string elementName
    {
        get
        {
            return this._elementName;
        }
        set
        {
            if ((this._elementName == value))
            {
                return;
            }
            if (((this._elementName == null) 
                        || (_elementName.Equals(value) != true)))
            {
                this._elementName = value;
                this.OnPropertyChanged("elementName", value);
            }
        }
    }
    
    /// <summary>
    /// The name of any attribute on a named
    /// element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    [System.ComponentModel.DefaultValueAttribute("val")]
    public virtual string attributeName
    {
        get
        {
            return this._attributeName;
        }
        set
        {
            if ((this._attributeName == value))
            {
                return;
            }
            if (((this._attributeName == null) 
                        || (_attributeName.Equals(value) != true)))
            {
                this._attributeName = value;
                this.OnPropertyChanged("attributeName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string X_targetNames
    {
        get
        {
            return this._x_targetNames;
        }
        set
        {
            if ((this._x_targetNames == value))
            {
                return;
            }
            if (((this._x_targetNames == null) 
                        || (_x_targetNames.Equals(value) != true)))
            {
                this._x_targetNames = value;
                this.OnPropertyChanged("X_targetNames", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether elementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeelementName()
    {
        return !string.IsNullOrEmpty(elementName);
    }
    
    /// <summary>
    /// Test whether attributeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeattributeName()
    {
        return !string.IsNullOrEmpty(attributeName);
    }
    
    /// <summary>
    /// Test whether X_targetNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_targetNames()
    {
        return !string.IsNullOrEmpty(X_targetNames);
    }
}
}
#pragma warning restore
