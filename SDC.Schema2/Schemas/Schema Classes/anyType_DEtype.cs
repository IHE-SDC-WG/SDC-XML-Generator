// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class anyType_DEtype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private List<System.Xml.XmlElement> _any;
    
    private long _minLength;
    
    private long _maxLength;
    
    private string _schema;
    
    private string _namespace;
    
    private List<System.Xml.XmlAttribute> _anyAttr;
    #endregion
    
    [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
    public virtual List<System.Xml.XmlElement> Any
    {
        get
        {
            return this._any;
        }
        set
        {
            if ((this._any == value))
            {
                return;
            }
            if (((this._any == null) 
                        || (_any.Equals(value) != true)))
            {
                this._any = value;
                this.OnPropertyChanged("Any", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string schema
    {
        get
        {
            return this._schema;
        }
        set
        {
            if ((this._schema == value))
            {
                return;
            }
            if (((this._schema == null) 
                        || (_schema.Equals(value) != true)))
            {
                this._schema = value;
                this.OnPropertyChanged("schema", value);
            }
        }
    }
    
    /// <summary>
    /// Namespace used in an XML Schema file, if any, used to constrain and validate the the content of this field.  This is similar to the use of namespaces with the xs:any element in XML Schemas.
    /// 
    /// See: http://www.w3.org/TR/xmlschema-0/#any
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string @namespace
    {
        get
        {
            return this._namespace;
        }
        set
        {
            if ((this._namespace == value))
            {
                return;
            }
            if (((this._namespace == null) 
                        || (_namespace.Equals(value) != true)))
            {
                this._namespace = value;
                this.OnPropertyChanged("namespace", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public virtual List<System.Xml.XmlAttribute> AnyAttr
    {
        get
        {
            return this._anyAttr;
        }
        set
        {
            if ((this._anyAttr == value))
            {
                return;
            }
            if (((this._anyAttr == null) 
                        || (_anyAttr.Equals(value) != true)))
            {
                this._anyAttr = value;
                this.OnPropertyChanged("AnyAttr", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Any should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAny()
    {
        return Any != null && Any.Count > 0;
    }
    
    /// <summary>
    /// Test whether AnyAttr should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAnyAttr()
    {
        return AnyAttr != null && AnyAttr.Count > 0;
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether schema should be serialized
    /// </summary>
    public virtual bool ShouldSerializeschema()
    {
        return !string.IsNullOrEmpty(schema);
    }
    
    /// <summary>
    /// Test whether namespace should be serialized
    /// </summary>
    public virtual bool ShouldSerializenamespace()
    {
        return !string.IsNullOrEmpty(@namespace);
    }
}
}
#pragma warning restore
