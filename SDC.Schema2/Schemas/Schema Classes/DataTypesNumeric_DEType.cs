// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// NEW:
/// SDC datatypes for Data Entry (DE), based mostly on W3C specifications. Uses baseAttributes  and Extension capability to enhance the list of Data Types. Includes additonal metadata to specify data input restrictions for data entry forms, and to aid in validation of IHE RFD SubmitForm responses in XML instance documents.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypesNumeric_DEType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType _item;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("byte", typeof(byte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("decimal", typeof(decimal_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("double", typeof(double_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(float_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("hexBinary", typeof(hexBinary_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("int", typeof(int_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(integer_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("long", typeof(long_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("negativeInteger", typeof(negativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonNegativeInteger", typeof(nonNegativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonPositiveInteger", typeof(nonPositiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("positiveInteger", typeof(positiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("short", typeof(short_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedByte", typeof(unsignedByte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedInt", typeof(unsignedInt_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedLong", typeof(unsignedLong_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedShort", typeof(unsignedShort_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_DEtype), IsNullable=true, Order=0)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
#pragma warning restore
