// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// General information about how information in a particular form package must be handled. This may include, e.g., security, completeness, transmission, and validation criteria.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ComplianceRuleType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _description;
    
    private List<OrganizationType> _complianceOrganization;
    
    private string _ruleID;
    
    private string _formID;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ComplianceOrganization", Order=1)]
    public virtual List<OrganizationType> ComplianceOrganization
    {
        get
        {
            return this._complianceOrganization;
        }
        set
        {
            if ((this._complianceOrganization == value))
            {
                return;
            }
            if (((this._complianceOrganization == null) 
                        || (_complianceOrganization.Equals(value) != true)))
            {
                this._complianceOrganization = value;
                this.OnPropertyChanged("ComplianceOrganization", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string ruleID
    {
        get
        {
            return this._ruleID;
        }
        set
        {
            if ((this._ruleID == value))
            {
                return;
            }
            if (((this._ruleID == null) 
                        || (_ruleID.Equals(value) != true)))
            {
                this._ruleID = value;
                this.OnPropertyChanged("ruleID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formID
    {
        get
        {
            return this._formID;
        }
        set
        {
            if ((this._formID == value))
            {
                return;
            }
            if (((this._formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                this._formID = value;
                this.OnPropertyChanged("formID", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether ComplianceOrganization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeComplianceOrganization()
    {
        return ComplianceOrganization != null && ComplianceOrganization.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (_description != null);
    }
    
    /// <summary>
    /// Test whether ruleID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeruleID()
    {
        return !string.IsNullOrEmpty(ruleID);
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
}
}
#pragma warning restore
