// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// information about where to submit a completed form
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SubmissionRuleType : ExtensionBaseType
{
    
    #region Private fields
    private List<DestinationType> _destination;
    
    private string_Stype _ruleDescription;
    
    private string _formID;
    
    private string _ruleID;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Destination", Order=0)]
    public virtual List<DestinationType> Destination
    {
        get
        {
            return this._destination;
        }
        set
        {
            if ((this._destination == value))
            {
                return;
            }
            if (((this._destination == null) 
                        || (_destination.Equals(value) != true)))
            {
                this._destination = value;
                this.OnPropertyChanged("Destination", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype RuleDescription
    {
        get
        {
            return this._ruleDescription;
        }
        set
        {
            if ((this._ruleDescription == value))
            {
                return;
            }
            if (((this._ruleDescription == null) 
                        || (_ruleDescription.Equals(value) != true)))
            {
                this._ruleDescription = value;
                this.OnPropertyChanged("RuleDescription", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formID
    {
        get
        {
            return this._formID;
        }
        set
        {
            if ((this._formID == value))
            {
                return;
            }
            if (((this._formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                this._formID = value;
                this.OnPropertyChanged("formID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string ruleID
    {
        get
        {
            return this._ruleID;
        }
        set
        {
            if ((this._ruleID == value))
            {
                return;
            }
            if (((this._ruleID == null) 
                        || (_ruleID.Equals(value) != true)))
            {
                this._ruleID = value;
                this.OnPropertyChanged("ruleID", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Destination should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDestination()
    {
        return Destination != null && Destination.Count > 0;
    }
    
    /// <summary>
    /// Test whether RuleDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRuleDescription()
    {
        return (_ruleDescription != null);
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
    
    /// <summary>
    /// Test whether ruleID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeruleID()
    {
        return !string.IsNullOrEmpty(ruleID);
    }
}
}
#pragma warning restore
