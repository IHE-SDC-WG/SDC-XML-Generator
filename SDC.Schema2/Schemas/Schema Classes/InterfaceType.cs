// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// This type provides information about an Applications Programming Interface (API)
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InterfaceType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _identifer;
    
    private string_Stype _interfaceName;
    
    private string_Stype _description;
    
    private string_Stype _uRL;
    
    private string_Stype _version;
    
    private InterfaceTypeFields _fields;
    
    private InterfaceTypeDocumentation _documentation;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Identifer
    {
        get
        {
            return this._identifer;
        }
        set
        {
            if ((this._identifer == value))
            {
                return;
            }
            if (((this._identifer == null) 
                        || (_identifer.Equals(value) != true)))
            {
                this._identifer = value;
                this.OnPropertyChanged("Identifer", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype InterfaceName
    {
        get
        {
            return this._interfaceName;
        }
        set
        {
            if ((this._interfaceName == value))
            {
                return;
            }
            if (((this._interfaceName == null) 
                        || (_interfaceName.Equals(value) != true)))
            {
                this._interfaceName = value;
                this.OnPropertyChanged("InterfaceName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype URL
    {
        get
        {
            return this._uRL;
        }
        set
        {
            if ((this._uRL == value))
            {
                return;
            }
            if (((this._uRL == null) 
                        || (_uRL.Equals(value) != true)))
            {
                this._uRL = value;
                this.OnPropertyChanged("URL", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype Version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("Version", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual InterfaceTypeFields Fields
    {
        get
        {
            return this._fields;
        }
        set
        {
            if ((this._fields == value))
            {
                return;
            }
            if (((this._fields == null) 
                        || (_fields.Equals(value) != true)))
            {
                this._fields = value;
                this.OnPropertyChanged("Fields", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual InterfaceTypeDocumentation Documentation
    {
        get
        {
            return this._documentation;
        }
        set
        {
            if ((this._documentation == value))
            {
                return;
            }
            if (((this._documentation == null) 
                        || (_documentation.Equals(value) != true)))
            {
                this._documentation = value;
                this.OnPropertyChanged("Documentation", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Identifer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIdentifer()
    {
        return (_identifer != null);
    }
    
    /// <summary>
    /// Test whether InterfaceName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeInterfaceName()
    {
        return (_interfaceName != null);
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (_description != null);
    }
    
    /// <summary>
    /// Test whether URL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeURL()
    {
        return (_uRL != null);
    }
    
    /// <summary>
    /// Test whether Version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersion()
    {
        return (_version != null);
    }
    
    /// <summary>
    /// Test whether Fields should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFields()
    {
        return (_fields != null);
    }
    
    /// <summary>
    /// Test whether Documentation should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDocumentation()
    {
        return (_documentation != null);
    }
}
}
#pragma warning restore
