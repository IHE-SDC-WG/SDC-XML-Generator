// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Display a message to the form user, triggered by activity within the
/// form.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActShowMessageType : ExtensionBaseType
{
    
    #region Private fields
    private List<RichTextType> _message;
    
    private string _alertLevel;
    
    private string _alertType;
    
    private string _messageType;
    
    private string _messageCode;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Message", Order=0)]
    public virtual List<RichTextType> Message
    {
        get
        {
            return this._message;
        }
        set
        {
            if ((this._message == value))
            {
                return;
            }
            if (((this._message == null) 
                        || (_message.Equals(value) != true)))
            {
                this._message = value;
                this.OnPropertyChanged("Message", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string alertLevel
    {
        get
        {
            return this._alertLevel;
        }
        set
        {
            if ((this._alertLevel == value))
            {
                return;
            }
            if (((this._alertLevel == null) 
                        || (_alertLevel.Equals(value) != true)))
            {
                this._alertLevel = value;
                this.OnPropertyChanged("alertLevel", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string alertType
    {
        get
        {
            return this._alertType;
        }
        set
        {
            if ((this._alertType == value))
            {
                return;
            }
            if (((this._alertType == null) 
                        || (_alertType.Equals(value) != true)))
            {
                this._alertType = value;
                this.OnPropertyChanged("alertType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string messageType
    {
        get
        {
            return this._messageType;
        }
        set
        {
            if ((this._messageType == value))
            {
                return;
            }
            if (((this._messageType == null) 
                        || (_messageType.Equals(value) != true)))
            {
                this._messageType = value;
                this.OnPropertyChanged("messageType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string messageCode
    {
        get
        {
            return this._messageCode;
        }
        set
        {
            if ((this._messageCode == value))
            {
                return;
            }
            if (((this._messageCode == null) 
                        || (_messageCode.Equals(value) != true)))
            {
                this._messageCode = value;
                this.OnPropertyChanged("messageCode", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Message should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMessage()
    {
        return Message != null && Message.Count > 0;
    }
    
    /// <summary>
    /// Test whether alertLevel should be serialized
    /// </summary>
    public virtual bool ShouldSerializealertLevel()
    {
        return !string.IsNullOrEmpty(alertLevel);
    }
    
    /// <summary>
    /// Test whether alertType should be serialized
    /// </summary>
    public virtual bool ShouldSerializealertType()
    {
        return !string.IsNullOrEmpty(alertType);
    }
    
    /// <summary>
    /// Test whether messageType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemessageType()
    {
        return !string.IsNullOrEmpty(messageType);
    }
    
    /// <summary>
    /// Test whether messageCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializemessageCode()
    {
        return !string.IsNullOrEmpty(messageCode);
    }
}
}
#pragma warning restore
