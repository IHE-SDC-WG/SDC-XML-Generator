namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region Base entity class
public partial class EntityBase<T> : System.ComponentModel.INotifyPropertyChanged

{
    
    private ObjectChangeTracker changeTrackerField;
    
    private static XmlSerializer serializer;
    
    [XmlIgnore()]
    public ObjectChangeTracker ChangeTracker
    {
        get
        {
            if ((this.changeTrackerField == null))
            {
                this.changeTrackerField = new ObjectChangeTracker(this);
            }
            return changeTrackerField;
        }
    }
    
    private static XmlSerializer Serializer
    {
        get
        {
            if ((serializer == null))
            {
                serializer = new XmlSerializerFactory().CreateSerializer(typeof(T));
            }
            return serializer;
        }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    public virtual void OnPropertyChanged(string propertyName, object value)
    {
        this.ChangeTracker.RecordCurrentValue(propertyName, value);
        System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
        if ((handler != null))
        {
            handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    
    #region Serialize/Deserialize
    /// <summary>
    /// Serializes current EntityBase object into an XML string
    /// </summary>
    /// <returns>string XML value</returns>
    public virtual string Serialize(System.Text.Encoding encoding)
    {
        System.IO.StreamReader streamReader = null;
        System.IO.MemoryStream memoryStream = null;
        try
        {
            memoryStream = new System.IO.MemoryStream();
            System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
            xmlWriterSettings.Encoding = encoding;
            xmlWriterSettings.Indent = true;
            xmlWriterSettings.IndentChars = "  ";
            System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
            Serializer.Serialize(xmlWriter, this);
            memoryStream.Seek(0, SeekOrigin.Begin);
            streamReader = new System.IO.StreamReader(memoryStream, encoding);
            return streamReader.ReadToEnd();
        }
        finally
        {
            if ((streamReader != null))
            {
                streamReader.Dispose();
            }
            if ((memoryStream != null))
            {
                memoryStream.Dispose();
            }
        }
    }
    
    public virtual string Serialize()
    {
        return Serialize(System.Text.Encoding.UTF8);
    }
    
    /// <summary>
    /// Deserializes workflow markup into an EntityBase object
    /// </summary>
    /// <param name="input">string workflow markup to deserialize</param>
    /// <param name="obj">Output EntityBase object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
    public static bool Deserialize(string input, out T obj, out System.Exception exception)
    {
        exception = null;
        obj = default(T);
        try
        {
            obj = Deserialize(input);
            return true;
        }
        catch (System.Exception ex)
        {
            exception = ex;
            return false;
        }
    }
    
    public static bool Deserialize(string input, out T obj)
    {
        System.Exception exception = null;
        return Deserialize(input, out obj, out exception);
    }
    
    public new static T Deserialize(string input)
    {
        System.IO.StringReader stringReader = null;
        try
        {
            stringReader = new System.IO.StringReader(input);
            return ((T)(Serializer.Deserialize(XmlReader.Create(stringReader))));
        }
        finally
        {
            if ((stringReader != null))
            {
                stringReader.Dispose();
            }
        }
    }
    
    public static T Deserialize(System.IO.Stream s)
    {
        return ((T)(Serializer.Deserialize(s)));
    }
    #endregion
    
    /// <summary>
    /// Serializes current EntityBase object into file
    /// </summary>
    /// <param name="fileName">full path of outupt xml file</param>
    /// <param name="exception">output Exception value if failed</param>
    /// <returns>true if can serialize and save into file; otherwise, false</returns>
    public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
    {
        exception = null;
        try
        {
            SaveToFile(fileName, encoding);
            return true;
        }
        catch (System.Exception e)
        {
            exception = e;
            return false;
        }
    }
    
    public virtual bool SaveToFile(string fileName, out System.Exception exception)
    {
        return SaveToFile(fileName, System.Text.Encoding.UTF8, out exception);
    }
    
    public virtual void SaveToFile(string fileName)
    {
        SaveToFile(fileName, System.Text.Encoding.UTF8);
    }
    
    public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
    {
        System.IO.StreamWriter streamWriter = null;
        try
        {
            string xmlString = Serialize(encoding);
            streamWriter = new System.IO.StreamWriter(fileName, false, encoding);
            streamWriter.WriteLine(xmlString);
            streamWriter.Close();
        }
        finally
        {
            if ((streamWriter != null))
            {
                streamWriter.Dispose();
            }
        }
    }
    
    /// <summary>
    /// Deserializes xml markup from file into an EntityBase object
    /// </summary>
    /// <param name="fileName">string xml file to load and deserialize</param>
    /// <param name="obj">Output EntityBase object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
    public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out T obj, out System.Exception exception)
    {
        exception = null;
        obj = default(T);
        try
        {
            obj = LoadFromFile(fileName, encoding);
            return true;
        }
        catch (System.Exception ex)
        {
            exception = ex;
            return false;
        }
    }
    
    public static bool LoadFromFile(string fileName, out T obj, out System.Exception exception)
    {
        return LoadFromFile(fileName, System.Text.Encoding.UTF8, out obj, out exception);
    }
    
    public static bool LoadFromFile(string fileName, out T obj)
    {
        System.Exception exception = null;
        return LoadFromFile(fileName, out obj, out exception);
    }
    
    public static T LoadFromFile(string fileName)
    {
        return LoadFromFile(fileName, System.Text.Encoding.UTF8);
    }
    
    public new static T LoadFromFile(string fileName, System.Text.Encoding encoding)
    {
        System.IO.FileStream file = null;
        System.IO.StreamReader sr = null;
        try
        {
            file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
            sr = new System.IO.StreamReader(file, encoding);
            string xmlString = sr.ReadToEnd();
            sr.Close();
            file.Close();
            return Deserialize(xmlString);
        }
        finally
        {
            if ((file != null))
            {
                file.Dispose();
            }
            if ((sr != null))
            {
                sr.Dispose();
            }
        }
    }
    
    #region Clone method
    /// <summary>
    /// Create a clone of this T object
    /// </summary>
    public virtual T Clone()
    {
        return ((T)(this.MemberwiseClone()));
    }
    #endregion
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region PropertyValueState class
public class PropertyValueState
{
    
        public string PropertyName { get; set; }
        public object OriginalValue { get; set; }
        public object CurrentValue { get; set; }
        public ObjectState State { get; set; }
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectStateChangingEventArgs class
public class ObjectStateChangingEventArgs : EventArgs
{
    
        public ObjectState NewState { get; set; }
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectList class
public class ObjectList : List<object>
{
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectState enum
public enum ObjectState
{
    
    Unchanged,
    
    Added,
    
    Modified,
    
    Deleted,
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region NotifyTrackableCollectionChangedEventHandler class
public delegate void NotifyTrackableCollectionChangedEventHandler(object sender, NotifyCollectionChangedEventArgs e, string propertyName);
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region Tracking changes class
public class ObjectChangeTracker : System.ComponentModel.INotifyPropertyChanged
{
    
       #region  Fields
        private bool isDeserializingField;
        private ObjectState originalobjectStateField = ObjectState.Added;
        private bool isInitilizedField = false;
        private readonly ObservableCollection<PropertyValueState> changeSetsField = new ObservableCollection<PropertyValueState>();
        private Delegate collectionChangedDelegateField = null;

        private bool objectTrackingEnabledField;
        private readonly object trackedObjectField;

        private PropertyValueStatesDictionary propertyValueStatesFields;
        //private ValueStatesDictionary valueStatesField;

        private ObjectsAddedToCollectionProperties objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties();
        private ObjectsRemovedFromCollectionProperties objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties();
        private ObjectsOriginalFromCollectionProperties objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties();
        #endregion

        public ObjectChangeTracker(object trackedObject)
        {
            trackedObjectField = trackedObject;
        }

        #region Events

        public event EventHandler<ObjectStateChangingEventArgs> ObjectStateChanging;

        #endregion

        protected virtual void OnObjectStateChanging(ObjectState newState)
        {
            if (ObjectStateChanging != null)
            {
                ObjectStateChanging(this, new ObjectStateChangingEventArgs() { NewState = newState });
            }
        }

        /// <summary>
        /// indicate current state
        /// </summary>
        private ObjectState stateField;

        /// <summary>
        /// Gets the state.
        /// </summary>
        /// <value>The state.</value>
        public ObjectState State
        {
            get
            {
                return stateField; 
            }
        }

        /// <summary>
        /// Updates the state of the change.
        /// </summary>
        private void UpdateChangeState()
        {
            ObjectState resultState = ObjectState.Added;
            this.changeSetsField.Clear();
            if (this.originalobjectStateField == ObjectState.Added)
            {
                if (stateField != ObjectState.Added)
                {
                    stateField = ObjectState.Added;
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            foreach (var propertyValuestate in PropertyValueStates)
            {
                if (propertyValuestate.Value.State == ObjectState.Modified)
                {
                    changeSetsField.Add(propertyValuestate.Value);
                    resultState = ObjectState.Modified;
                }
            }

            if (ObjectsRemovedFromCollectionProperties.Count > 0)
            {
                foreach (var objectsRemovedFromCollectionProperty in ObjectsRemovedFromCollectionProperties)
                {
                    foreach (var objectsRemoved in objectsRemovedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsRemovedFromCollectionProperty.Key, State = ObjectState.Deleted, CurrentValue = objectsRemoved.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (ObjectsAddedToCollectionProperties.Count > 0)
            {
                foreach (var objectsAddedFromCollectionProperty in ObjectsAddedToCollectionProperties)
                {
                    foreach (var objectsAdded in objectsAddedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsAddedFromCollectionProperty.Key, State = ObjectState.Added, CurrentValue = objectsAdded.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (resultState == ObjectState.Modified)
            {
                if (stateField != ObjectState.Modified)
                {
                    stateField = ObjectState.Modified;                    
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            if (stateField != this.originalobjectStateField)
            {
                stateField = this.originalobjectStateField;                
                OnPropertyChanged("State");
                OnObjectStateChanging(stateField);
            }
            return;
        }

        public ObservableCollection<PropertyValueState> ChangeSets 
        {
            get
            {
                return this.changeSetsField;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether [change tracking enabled].
        /// </summary>
        /// <value>
        /// 	<c>true</c> if [change tracking enabled]; otherwise, <c>false</c>.
        /// </value>
        public bool ObjectTrackingEnabled
        {
            get { return objectTrackingEnabledField; }
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking()
        {
            objectTrackingEnabledField = true;
            ResetTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking(bool keepLastRecords)
        {
            objectTrackingEnabledField = true;
            if (!keepLastRecords)
                StartTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StopTracking()
        {
            objectTrackingEnabledField = false;
        }

        // Resets the ObjectChangeTracker to the Unchanged state and
        // clears the original values as well as the record of changes
        // to collection properties
        public void ResetTracking()
        {
            if (this.objectTrackingEnabledField)
            {
                this.originalobjectStateField = ObjectState.Unchanged;
                ResetOriginalValue();
                ObjectsAddedToCollectionProperties.Clear();
                ObjectsRemovedFromCollectionProperties.Clear();
                ObjectsOriginalFromCollectionProperties.Clear();
                InitOriginalValue();
                UpdateChangeState();
            }
        }
        /// <summary>
        /// Inits the original value.
        /// </summary>
        private void InitOriginalValue()
        {
            var type = trackedObjectField.GetType();
            var propertyies = type.GetProperties();

            if (!isInitilizedField)
            {
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField == null)
                                        collectionChangedDelegateField = Delegate.CreateDelegate(tDelegate, this, "TrackableCollectionChanged");

                                    // Get the "add" accessor of the event and invoke it late bound, passing in the delegate instance. This is equivalent
                                    // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                    MethodInfo addHandler = eventInfo.GetAddMethod();
                                    Object[] addHandlerArgs = { collectionChangedDelegateField };
                                    addHandler.Invoke(o, addHandlerArgs);
                                }
                            }

                            var collection = o as IEnumerable;
                            if (collection != null)
                            {
                                foreach (var item in collection)
                                {
                                    RecordOriginalToCollectionProperties(propertyInfo.Name, item);
                                }
                            }
                        }
                        else
                        {
                            RecordCurrentValue(propertyInfo.Name, o);
                        }
                    }
                }
                isInitilizedField = true;
            }
        }

        /// <summary>
        /// Resets the original value.
        /// </summary>
        private void ResetOriginalValue()
        {
            PropertyValueStates.Clear();
            //ValueStates.Clear();

            if (isInitilizedField)
            {
                var type = trackedObjectField.GetType();
                var propertyies = type.GetProperties();
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField != null)
                                    {
                                        // Get the "remove" accessor of the event and invoke it latebound, passing in the delegate instance. This is equivalent
                                        // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                        MethodInfo removeHandler = eventInfo.GetRemoveMethod();
                                        Object[] addHandlerArgs = { collectionChangedDelegateField };
                                        removeHandler.Invoke(o, addHandlerArgs);
                                    }
                                }
                            }
                        }
                    }
                }
                isInitilizedField = false;
            }
        }

        /// <summary>
        /// Trackables the collection changed.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The <see cref="NotifyTrackableCollectionChangedEventArgs"/> instance containing the event data.</param>
        /// <param name="propertyName">Name of the property.</param>
        private void TrackableCollectionChanged(object sender, NotifyCollectionChangedEventArgs e, string propertyName)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (var newItem in e.NewItems)
                    {
                        //todo:implémenter la récursivité sur l'ajout des élements dans la collection
                        //var project = newItem as IObjectWithChangeTracker;
                        //if (project != null)
                        //{
                        //    if (this.ChangeTrackingEnabled)
                        //    {
                        //        project.ChangeTracker.Start();
                        //    }
                        //}
                        RecordAdditionToCollectionProperties(propertyName, newItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (var odlItem in e.OldItems)
                    {
                        RecordRemovalFromCollectionProperties(propertyName, odlItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Reset:
                    {
                        // Cas d'un Clear sur la collection.
                        // Vide le cache des modifications pour la collection.
                        if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                        }

                        if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsAddedToCollectionProperties.Remove(propertyName);
                        }

                        // Tranfère les données de départ dans les élements supprimés.
                        if (ObjectsOriginalFromCollectionProperties.Count > 0)
                        {
                            foreach (var item in ObjectsOriginalFromCollectionProperties[propertyName])
                            {
                                RecordRemovalFromCollectionProperties(propertyName, item);
                            }
                        }
                    }
                    break;
                case NotifyCollectionChangedAction.Replace:
                    {
                        // Comment gérer le cas d'un changement d'instance dans la liste ?
                    }
                    break;
            }
            UpdateChangeState();
        }

        #region public properties
        // Returns the removed objects to collection valued properties that were changed.
        public ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties
        {
            get { return objectsRemovedFromCollectionsField ?? (objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties()); }
        }

        // Returns the original values for properties that were changed.
        public PropertyValueStatesDictionary PropertyValueStates
        {
            get { return propertyValueStatesFields ?? (propertyValueStatesFields = new PropertyValueStatesDictionary()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        public ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties
        {
            get { return objectsAddedToCollectionsField ?? (objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        public ObjectsOriginalFromCollectionProperties ObjectsOriginalFromCollectionProperties
        {
            get { return objectsOriginalFromCollectionsField ?? (objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties()); }
        }

        #region MethodsForChangeTrackingOnClient

        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            isDeserializingField = true;
        }

        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            isDeserializingField = false;
        }
        #endregion

        /// <summary>
        /// Captures the original value for a property that is changing.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        public void RecordCurrentValue(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!PropertyValueStates.ContainsKey(propertyName))
                {
                    PropertyValueStates[propertyName] = new PropertyValueState() { PropertyName = propertyName, OriginalValue = value, CurrentValue = value, State = ObjectState.Unchanged };
                }
                // Compare original value new 
                else
                {
                    PropertyValueStates[propertyName].CurrentValue = value;
                    var originalValue = PropertyValueStates[propertyName].OriginalValue;
                    if (originalValue != null)
                    {
                        PropertyValueStates[propertyName].State = originalValue.Equals(value) ? ObjectState.Unchanged : ObjectState.Modified;
                    }
                    else
                    {
                        if (value == null)
                        {
                            PropertyValueStates[propertyName].State = ObjectState.Unchanged;
                        }
                        else
                        {
                            PropertyValueStates[propertyName].State = string.IsNullOrEmpty(value.ToString()) ? ObjectState.Unchanged : ObjectState.Modified;
                        }
                    }
                }
                UpdateChangeState();
            }
        }

        /// <summary>
        /// Records original items value of collection to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordOriginalToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!ObjectsOriginalFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsOriginalFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
            }
        }


        /// <summary>
        /// Records an addition to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordAdditionToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Add the entity back after deleting it, we should do nothing here then
                if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName)
                    && ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName].Remove(value);
                    if (ObjectsRemovedFromCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsAddedToCollectionProperties[propertyName] = new ObjectList();
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
            }
        }

        /// <summary>
        /// Records a removal to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The object value.</param>
        internal void RecordRemovalFromCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Delete the entity back after adding it, we should do nothing here then
                if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName)
                    && ObjectsAddedToCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsAddedToCollectionProperties[propertyName].Remove(value);
                    if (ObjectsAddedToCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsAddedToCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    if (!ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                    {
                        ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                    }
                }
            }
        }
        #endregion

        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Called when [property changed].
        /// </summary>
        /// <param name="info">The info.</param>
        public virtual void OnPropertyChanged(string info)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if (handler != null)
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(info));
            }
        }
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region TrackableCollection class
public class TrackableCollection<T> : ObservableCollection<T>

{
    
        /// <summary>
        /// Name of property
        /// </summary>
        private string propertyNameField;

        /// <summary>
        /// Occurs when [trackable collection changed].
        /// </summary>
        public virtual event NotifyTrackableCollectionChangedEventHandler TrackableCollectionChanged;

        /// <summary>
        /// Initializes a new instance of the <see cref="TrackableCollection&lt;T&gt;"/> class.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        public TrackableCollection(string propertyName)
        {
            propertyNameField = propertyName;
            base.CollectionChanged += TrackableCollection_CollectionChanged;
        }

        /// <summary>
        /// Handles the CollectionChanged event of the TrackableCollection control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        void TrackableCollection_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (this.TrackableCollectionChanged != null)
            {
                this.TrackableCollectionChanged(sender, e, this.propertyNameField);
            }
        }


}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region PropertyValueStatesDictionary
public class PropertyValueStatesDictionary : Dictionary<string, PropertyValueState>
{
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectsRemovedFromCollectionProperties
public class ObjectsRemovedFromCollectionProperties : Dictionary<string, ObjectList>
{
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectsAddedToCollectionProperties
public class ObjectsAddedToCollectionProperties : Dictionary<string, ObjectList>
{
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

#region ObjectsOriginalFromCollectionProperties
public class ObjectsOriginalFromCollectionProperties : Dictionary<string, ObjectList>
{
}
#endregion
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A dummy "data type" (dt) element to compensate for a code generator bug.  Do not use this type for anything.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class dt : EntityBase<dt>
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private dtQuantEnum _quantEnum;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _quantEnumSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// dt class constructor
    /// </summary>
    public dt()
    {
        this._quantEnum = dtQuantEnum.EQ;
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum dtQuantEnum
{
    
    EQ,
    
    GT,
    
    GTE,
    
    LT,
    
    LTE,
    
    APPROX,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Contains information about a registered package, including a description of the package contents and purpose (PackageDescription), information about the registry that contains the package XML (RegistryData), and information about the package file characteristics (TemplateFile).
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("TemplateAdmin", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class TemplateAdminType : ExtensionBaseType
{
    
    #region Private fields
    private List<RichTextType> _packageDescription;
    
    private RegistryType _registryData;
    
    private FileType _templateFile;
    
    private List<TemplateAdminTypeDigitalSignature> _digitalSignature;
    
    private bool _packageDescriptionSpecified;
    
    private bool _registryDataSpecified;
    
    private bool _templateFileSpecified;
    
    private bool _digitalSignatureSpecified;
    #endregion
    
    /// <summary>
    /// Description of the XML package contents and the purpose for the contained XML templates.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("PackageDescription", Order=0)]
    public virtual List<RichTextType> PackageDescription
    {
        get
        {
            return this._packageDescription;
        }
        set
        {
            if ((this._packageDescription == value))
            {
                return;
            }
            if (((this._packageDescription == null) 
                        || (_packageDescription.Equals(value) != true)))
            {
                this._packageDescription = value;
                this.OnPropertyChanged("PackageDescription", value);
            }
        }
    }
    
    /// <summary>
    /// Information about the registry that contains the XML template, and registration status of the XML template. (The XML template may contain a package of sub-templates.  In this case, the the RegistryData refers primarily to the package, not the sub-templates.)
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RegistryType RegistryData
    {
        get
        {
            return this._registryData;
        }
        set
        {
            if ((this._registryData == value))
            {
                return;
            }
            if (((this._registryData == null) 
                        || (_registryData.Equals(value) != true)))
            {
                this._registryData = value;
                this.OnPropertyChanged("RegistryData", value);
            }
        }
    }
    
    /// <summary>
    /// Information about the  XML template's file characteristics (The XML template may contain a package of sub-templates.  In this case, the the RegistryData refers primarily to the entire package, not the sub-templates.)
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual FileType TemplateFile
    {
        get
        {
            return this._templateFile;
        }
        set
        {
            if ((this._templateFile == value))
            {
                return;
            }
            if (((this._templateFile == null) 
                        || (_templateFile.Equals(value) != true)))
            {
                this._templateFile = value;
                this.OnPropertyChanged("TemplateFile", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("DigitalSignature", Order=3)]
    public virtual List<TemplateAdminTypeDigitalSignature> DigitalSignature
    {
        get
        {
            return this._digitalSignature;
        }
        set
        {
            if ((this._digitalSignature == value))
            {
                return;
            }
            if (((this._digitalSignature == null) 
                        || (_digitalSignature.Equals(value) != true)))
            {
                this._digitalSignature = value;
                this.OnPropertyChanged("DigitalSignature", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PackageDescriptionSpecified
    {
        get
        {
            return this._packageDescriptionSpecified;
        }
        set
        {
            this._packageDescriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RegistryDataSpecified
    {
        get
        {
            return this._registryDataSpecified;
        }
        set
        {
            this._registryDataSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TemplateFileSpecified
    {
        get
        {
            return this._templateFileSpecified;
        }
        set
        {
            this._templateFileSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DigitalSignatureSpecified
    {
        get
        {
            return this._digitalSignatureSpecified;
        }
        set
        {
            this._digitalSignatureSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PackageDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializePackageDescription()
    {
        return PackageDescription != null && PackageDescription.Count > 0;
    }
    
    /// <summary>
    /// Test whether DigitalSignature should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDigitalSignature()
    {
        return DigitalSignature != null && DigitalSignature.Count > 0;
    }
    
    /// <summary>
    /// Test whether RegistryData should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRegistryData()
    {
        return (_registryData != null);
    }
    
    /// <summary>
    /// Test whether TemplateFile should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTemplateFile()
    {
        return (_templateFile != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Representation of plain text with an option for HTML-formatting. Contains optional boilerplate metadata to aid programmatic manipulation.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSendMessageType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RichTextType : ExtensionBaseType
{
    
    #region Private fields
    private HTML_Stype _richText;
    
    private string _val;
    
    private bool _richTextSpecified;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual HTML_Stype RichText
    {
        get
        {
            return this._richText;
        }
        set
        {
            if ((this._richText == value))
            {
                return;
            }
            if (((this._richText == null) 
                        || (_richText.Equals(value) != true)))
            {
                this._richText = value;
                this.OnPropertyChanged("RichText", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool RichTextSpecified
    {
        get
        {
            return this._richTextSpecified;
        }
        set
        {
            this._richTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether RichText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRichText()
    {
        return (_richText != null);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(HTML_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class HTML_Stype : BaseType
{
    
    #region Private fields
    private List<System.Xml.XmlElement> _any;
    
    private List<System.Xml.XmlAttribute> _anyAttr;
    
    private bool _anySpecified;
    
    private bool _anyAttrSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
    public virtual List<System.Xml.XmlElement> Any
    {
        get
        {
            return this._any;
        }
        set
        {
            if ((this._any == value))
            {
                return;
            }
            if (((this._any == null) 
                        || (_any.Equals(value) != true)))
            {
                this._any = value;
                this.OnPropertyChanged("Any", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public virtual List<System.Xml.XmlAttribute> AnyAttr
    {
        get
        {
            return this._anyAttr;
        }
        set
        {
            if ((this._anyAttr == value))
            {
                return;
            }
            if (((this._anyAttr == null) 
                        || (_anyAttr.Equals(value) != true)))
            {
                this._anyAttr = value;
                this.OnPropertyChanged("AnyAttr", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AnySpecified
    {
        get
        {
            return this._anySpecified;
        }
        set
        {
            this._anySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AnyAttrSpecified
    {
        get
        {
            return this._anyAttrSpecified;
        }
        set
        {
            this._anyAttrSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Any should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAny()
    {
        return Any != null && Any.Count > 0;
    }
    
    /// <summary>
    /// Test whether AnyAttr should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAnyAttr()
    {
        return AnyAttr != null && AnyAttr.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(ExtensionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PackageListType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PackageItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HTMLPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BasePackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveFormPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataStoreType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateTargetType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemMapType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MappingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegisteredItemStateType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegisteredItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InterfaceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistrySummaryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateAdminType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesDateTime_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesDateTime_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesNumeric_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesNumeric_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ComplianceRuleType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DestinationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SubmissionRuleType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProvenanceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AssociatedFilesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ApprovalType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileDatesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileUsageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangedFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeLogType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(VersionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActValidateFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActPreviewReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowMessageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttributeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSendReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSaveResponsesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleAutoSelectType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleAutoActivateType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ValidationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RulesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChildItemsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypes_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemResponseFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeAnyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttrValueScriptType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptBoolFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetBoolAttributeValueCode))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifierType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PhoneType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EmailType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OrganizationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(JobType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(NameType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifiedExtensionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FormDesignType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InjectFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActInjectType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DisplayedType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ButtonItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RepeatingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataElementType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleListItemMatchTargetsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodeSystemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemNameType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActAddCodeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemNameAttributeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleSelectMatchingListItemsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FuncBoolBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredAlternativesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredGuardType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredMultiSelectionSetBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiSelectionsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredEvalAttribValuesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttributeEvalActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OnEventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSingleSelectionSetsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionSetsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSelectionTestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionTestActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemParameterType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupEndPointType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PhoneNumberType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EmailAddressType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RichTextType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSendMessageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BlobType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypes_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyType1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeTrackingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ReplacedIDsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodeMatchType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TargetItemNameType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryCodeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AreaCodeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(yearMonthDuration_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(yearMonthDuration_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XML_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XML_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedShort_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedShort_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedLong_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedLong_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedInt_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedInt_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedByte_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedByte_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(time_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(time_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(string_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPathType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XQueryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SQL_Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileHashType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TargetItemXPathType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageCodeISO6393_Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AcceptabilityType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(string_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(short_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(short_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(positiveInteger_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(positiveInteger_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonPositiveInteger_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonPositiveInteger_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonNegativeInteger_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonNegativeInteger_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(negativeInteger_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(negativeInteger_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(long_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(long_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(integer_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(integer_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(int_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(int_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HTML_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HTML_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(hexBinary_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(hexBinary_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYearMonth_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYearMonth_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYear_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYear_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonthDay_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonthDay_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonth_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonth_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gDay_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(gDay_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(float_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(float_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(duration_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(duration_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(double_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(double_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(decimal_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(decimal_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dayTimeDuration_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dayTimeDuration_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTimeStamp_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTimeStamp_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTime_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTime_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(date_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(date_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(byte_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(byte_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(boolean_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(boolean_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(base64Binary_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HashType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(base64Binary_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(anyURI_Stype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TargetItemIDType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(anyURI_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(anyType_DEtype))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CommentType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ExtensionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class BaseType : EntityBase<BaseType>
{
    
    #region Private fields
    private bool _shouldSerializeorder;
    
    private string _name;
    
    private string _type;
    
    private string _styleClass;
    
    private decimal _order;
    
    private bool orderFieldSpecified;
    
    private bool _nameSpecified;
    
    private bool _typeSpecified;
    
    private bool _styleClassSpecified;
    #endregion
    
    /// <summary>
    /// @name is a developer assigned unique identifier, similar to a unique control/object/variable name, used to provide the ability for programmatic manipulation of an element.  The value of name must be unique within an FDF and FDF-R, even when FDF sections are repeated in the XML.  @name values may begin with a letter or an underscore and may only contain characters that are legal for variable names.  These generally include letters, numbers and underscore.  The use of other characters may result in errors, depending on the programming language employed.  Since XML is case-sensitive, names should not be made unique solely on the basis of alphabetic case, since many programming languages are case insensitive and cannot distinguish names based only on case differences.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
    public virtual string name
    {
        get
        {
            return this._name;
        }
        set
        {
            if ((this._name == value))
            {
                return;
            }
            if (((this._name == null) 
                        || (_name.Equals(value) != true)))
            {
                this._name = value;
                this.OnPropertyChanged("name", value);
            }
        }
    }
    
    /// <summary>
    /// The @type attribute can contain custom metadata "tokens" for the element, chosen from a standardized list of terms. Tokens are short alphanumeric text strings, defined by the W3C Schema NMTOKEN specification, that are defined in an Implementation Guide. The type xsd:NMTOKEN represents a single string token. NMTOKEN values may consist of letters, digits, periods ( . ), hyphens ( - ), underscores ( _ ), and colons ( : ). They may start with any of these characters. (www.datypic.com/sc/xsd/t-xsd_NMTOKEN.html) @type tokens may be specific for one or more kinds of SDC elements. Multiple tokens in the type attribute should be separated by whitespace. Type tokens may be used to specify special handling by an application, and are usually used to define form display constraints, but may include other custom metadata as well. Style metadata should generally be handled with @styleClass rather than @type. @type token examples include: tooltip, statusLineText, alignTopLeft, align:bottom, _pageBreak-after, etc. @type metadata should generally not affect the information content of a form.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string type
    {
        get
        {
            return this._type;
        }
        set
        {
            if ((this._type == value))
            {
                return;
            }
            if (((this._type == null) 
                        || (_type.Equals(value) != true)))
            {
                this._type = value;
                this.OnPropertyChanged("type", value);
            }
        }
    }
    
    /// <summary>
    /// @styleClass is a developer assigned class name for display styling, generally for use with an external style sheet..
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string styleClass
    {
        get
        {
            return this._styleClass;
        }
        set
        {
            if ((this._styleClass == value))
            {
                return;
            }
            if (((this._styleClass == null) 
                        || (_styleClass.Equals(value) != true)))
            {
                this._styleClass = value;
                this.OnPropertyChanged("styleClass", value);
            }
        }
    }
    
    /// <summary>
    /// @order is a decimal attribute that allows the form template developer to define a sequential order for elements in a template. This serves the purpose of providing a definitive/original order to sections, questions, answer choices, etc., when required for display purposes. This is important when the original XML ordering may become disrupted due to the use of an implementation technology that does not natively support ordering (e.g., object collections), and it can also provide a check on the proper importing of the XML tree during implementation.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal order
    {
        get
        {
            return this._order;
        }
        set
        {
            if ((_order.Equals(value) != true))
            {
                this._order = value;
                this.OnPropertyChanged("order", value);
            }
            _shouldSerializeorder = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool orderSpecified
    {
        get
        {
            return this.orderFieldSpecified;
        }
        set
        {
            if ((orderFieldSpecified.Equals(value) != true))
            {
                this.orderFieldSpecified = value;
                this.OnPropertyChanged("orderSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool nameSpecified
    {
        get
        {
            return this._nameSpecified;
        }
        set
        {
            this._nameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool typeSpecified
    {
        get
        {
            return this._typeSpecified;
        }
        set
        {
            this._typeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool styleClassSpecified
    {
        get
        {
            return this._styleClassSpecified;
        }
        set
        {
            this._styleClassSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether order should be serialized
    /// </summary>
    public virtual bool ShouldSerializeorder()
    {
        if (_shouldSerializeorder)
        {
            return true;
        }
        return (_order != default(decimal));
    }
    
    /// <summary>
    /// Test whether name should be serialized
    /// </summary>
    public virtual bool ShouldSerializename()
    {
        return !string.IsNullOrEmpty(name);
    }
    
    /// <summary>
    /// Test whether type should be serialized
    /// </summary>
    public virtual bool ShouldSerializetype()
    {
        return !string.IsNullOrEmpty(type);
    }
    
    /// <summary>
    /// Test whether styleClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializestyleClass()
    {
        return !string.IsNullOrEmpty(styleClass);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(PackageListType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PackageItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(HTMLPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BasePackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveFormPackageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataStoreType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateTargetType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemMapType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MappingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegisteredItemStateType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegisteredItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InterfaceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistrySummaryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateAdminType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesDateTime_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesDateTime_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesNumeric_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypesNumeric_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ComplianceRuleType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DestinationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SubmissionRuleType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProvenanceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AssociatedFilesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ApprovalType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileDatesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileUsageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangedFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangeLogType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(VersionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActValidateFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActPreviewReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowMessageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActShowFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttributeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSendReportType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSaveResponsesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleAutoSelectType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleAutoActivateType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ValidationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RulesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ChildItemsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypes_DEType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemResponseFieldType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeAnyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttrValueScriptType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptBoolFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetBoolAttributeValueCode))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifierType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PhoneType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EmailType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OrganizationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(JobType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(NameType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(IdentifiedExtensionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FormDesignType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InjectFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActInjectType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DisplayedType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ButtonItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RepeatingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataElementType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleListItemMatchTargetsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodeSystemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CodingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemNameType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActAddCodeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemNameAttributeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RuleSelectMatchingListItemsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActionsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FuncBoolBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredAlternativesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredGuardType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredMultiSelectionSetBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiSelectionsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredEvalAttribValuesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttributeEvalActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OnEventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSingleSelectionSetsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionSetsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSelectionTestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionTestActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemParameterType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupEndPointType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PhoneNumberType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EmailAddressType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RichTextType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSendMessageType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BlobType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataTypes_SType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyType1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class ExtensionBaseType : BaseType
{
    
    #region Private fields
    private List<CommentType> _comment;
    
    private List<ExtensionType> _extension;
    
    private List<PropertyType> _property;
    
    private bool _commentSpecified;
    
    private bool _extensionSpecified;
    
    private bool _propertySpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Comment", Order=0)]
    public virtual List<CommentType> Comment
    {
        get
        {
            return this._comment;
        }
        set
        {
            if ((this._comment == value))
            {
                return;
            }
            if (((this._comment == null) 
                        || (_comment.Equals(value) != true)))
            {
                this._comment = value;
                this.OnPropertyChanged("Comment", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Extension", Order=1)]
    public virtual List<ExtensionType> Extension
    {
        get
        {
            return this._extension;
        }
        set
        {
            if ((this._extension == value))
            {
                return;
            }
            if (((this._extension == null) 
                        || (_extension.Equals(value) != true)))
            {
                this._extension = value;
                this.OnPropertyChanged("Extension", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Property", Order=2)]
    public virtual List<PropertyType> Property
    {
        get
        {
            return this._property;
        }
        set
        {
            if ((this._property == value))
            {
                return;
            }
            if (((this._property == null) 
                        || (_property.Equals(value) != true)))
            {
                this._property = value;
                this.OnPropertyChanged("Property", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool CommentSpecified
    {
        get
        {
            return this._commentSpecified;
        }
        set
        {
            this._commentSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ExtensionSpecified
    {
        get
        {
            return this._extensionSpecified;
        }
        set
        {
            this._extensionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PropertySpecified
    {
        get
        {
            return this._propertySpecified;
        }
        set
        {
            this._propertySpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Comment should be serialized
    /// </summary>
    public virtual bool ShouldSerializeComment()
    {
        return Comment != null && Comment.Count > 0;
    }
    
    /// <summary>
    /// Test whether Extension should be serialized
    /// </summary>
    public virtual bool ShouldSerializeExtension()
    {
        return Extension != null && Extension.Count > 0;
    }
    
    /// <summary>
    /// Test whether Property should be serialized
    /// </summary>
    public virtual bool ShouldSerializeProperty()
    {
        return Property != null && Property.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CommentType : BaseType
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Similar to the Schema type xs:anyType, but requires strict validation, and includes optional baseAttributes. Developer will need to declare a namespace and provide a Schema to validate the contents.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ExtensionType : BaseType
{
    
    #region Private fields
    private List<System.Xml.XmlElement> _any;
    
    private List<System.Xml.XmlAttribute> _anyAttr;
    
    private bool _anySpecified;
    
    private bool _anyAttrSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
    public virtual List<System.Xml.XmlElement> Any
    {
        get
        {
            return this._any;
        }
        set
        {
            if ((this._any == value))
            {
                return;
            }
            if (((this._any == null) 
                        || (_any.Equals(value) != true)))
            {
                this._any = value;
                this.OnPropertyChanged("Any", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public virtual List<System.Xml.XmlAttribute> AnyAttr
    {
        get
        {
            return this._anyAttr;
        }
        set
        {
            if ((this._anyAttr == value))
            {
                return;
            }
            if (((this._anyAttr == null) 
                        || (_anyAttr.Equals(value) != true)))
            {
                this._anyAttr = value;
                this.OnPropertyChanged("AnyAttr", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AnySpecified
    {
        get
        {
            return this._anySpecified;
        }
        set
        {
            this._anySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AnyAttrSpecified
    {
        get
        {
            return this._anyAttrSpecified;
        }
        set
        {
            this._anyAttrSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Any should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAny()
    {
        return Any != null && Any.Count > 0;
    }
    
    /// <summary>
    /// Test whether AnyAttr should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAnyAttr()
    {
        return AnyAttr != null && AnyAttr.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// MOVED: From SDCFormDesign
/// CHANGED:
/// Property is any type of data that is associated with any form item (e.g., section, question, list item) in any context.  The Property context is specified by the @type attribute.  Examples of @type values may include:
/// -alternate language representations, e.g., 'spanish'
/// -'instruction'
/// -'tooltip'
/// -'help' for a pop-up help box
/// -'outlining' (such as question numbering)
/// 
/// The @type enumerations must be defined and documented for the particular use case, and are currently out of scope in this schema definition.  Multiple type tokens for a single element are supported.
/// 
/// RENAMED:  'OtherText' to 'Property' 9/14/2016
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PropertyType : ExtensionBaseType
{
    
    #region Private fields
    private DataTypes_SType _typedValue;
    
    private string _propName;
    
    private string _propClass;
    
    private string _val;
    
    private bool _typedValueSpecified;
    
    private bool _propNameSpecified;
    
    private bool _propClassSpecified;
    
    private bool _valSpecified;
    #endregion
    
    /// <summary>
    /// Contains optional typed data.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual DataTypes_SType TypedValue
    {
        get
        {
            return this._typedValue;
        }
        set
        {
            if ((this._typedValue == value))
            {
                return;
            }
            if (((this._typedValue == null) 
                        || (_typedValue.Equals(value) != true)))
            {
                this._typedValue = value;
                this.OnPropertyChanged("TypedValue", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public virtual string propName
    {
        get
        {
            return this._propName;
        }
        set
        {
            if ((this._propName == value))
            {
                return;
            }
            if (((this._propName == null) 
                        || (_propName.Equals(value) != true)))
            {
                this._propName = value;
                this.OnPropertyChanged("propName", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string propClass
    {
        get
        {
            return this._propClass;
        }
        set
        {
            if ((this._propClass == value))
            {
                return;
            }
            if (((this._propClass == null) 
                        || (_propClass.Equals(value) != true)))
            {
                this._propClass = value;
                this.OnPropertyChanged("propClass", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool TypedValueSpecified
    {
        get
        {
            return this._typedValueSpecified;
        }
        set
        {
            this._typedValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool propNameSpecified
    {
        get
        {
            return this._propNameSpecified;
        }
        set
        {
            this._propNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool propClassSpecified
    {
        get
        {
            return this._propClassSpecified;
        }
        set
        {
            this._propClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether TypedValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTypedValue()
    {
        return (_typedValue != null);
    }
    
    /// <summary>
    /// Test whether propName should be serialized
    /// </summary>
    public virtual bool ShouldSerializepropName()
    {
        return !string.IsNullOrEmpty(propName);
    }
    
    /// <summary>
    /// Test whether propClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializepropClass()
    {
        return !string.IsNullOrEmpty(propClass);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// MOVED from SDCDataTypes:
/// SDC datatypes in Simple (S) format, based mostly on W3C specifications.  Uses baseAttributes and Extension capability to enhance the list of Data Types.        **CHECK for ERRORS and completeness**
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValueType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertyType1))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypes_SType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeItemElementName;
    
    private BaseType _item;
    
    private ItemChoiceType _itemElementName;
    
    private bool _itemSpecified;
    
    private bool _itemElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("HTML", typeof(HTML_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("XML", typeof(XML_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("anyType", typeof(anyType_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("anyURI", typeof(anyURI_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("base64Binary", typeof(base64Binary_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("boolean", typeof(boolean_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("byte", typeof(byte_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("date", typeof(date_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTime", typeof(dateTimeStamp_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTimeStamp", typeof(dateTimeStamp_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("decimal", typeof(decimal_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("double", typeof(double_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("duration", typeof(duration_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(float_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gDay", typeof(gDay_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonth", typeof(gMonth_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonthDay", typeof(gMonthDay_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYear", typeof(gYear_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYearMonth", typeof(gMonth_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("hexBinary", typeof(hexBinary_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("int", typeof(int_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(integer_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("long", typeof(long_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("negativeInteger", typeof(negativeInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonNegativeInteger", typeof(nonNegativeInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonPositiveInteger", typeof(nonPositiveInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("positiveInteger", typeof(positiveInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("short", typeof(short_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("string", typeof(string_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedByte", typeof(unsignedByte_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedInt", typeof(unsignedInt_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedLong", typeof(unsignedLong_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedShort", typeof(unsignedShort_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemChoiceType ItemElementName
    {
        get
        {
            return this._itemElementName;
        }
        set
        {
            if ((_itemElementName.Equals(value) != true))
            {
                this._itemElementName = value;
                this.OnPropertyChanged("ItemElementName", value);
            }
            _shouldSerializeItemElementName = true;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemElementNameSpecified
    {
        get
        {
            return this._itemElementNameSpecified;
        }
        set
        {
            this._itemElementNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ItemElementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItemElementName()
    {
        if (_shouldSerializeItemElementName)
        {
            return true;
        }
        return (_itemElementName != default(ItemChoiceType));
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(XML_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XML_Stype : BaseType
{
    
    #region Private fields
    private List<System.Xml.XmlElement> _any;
    
    private string _schema;
    
    private bool _anySpecified;
    
    private bool _schemaSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
    public virtual List<System.Xml.XmlElement> Any
    {
        get
        {
            return this._any;
        }
        set
        {
            if ((this._any == value))
            {
                return;
            }
            if (((this._any == null) 
                        || (_any.Equals(value) != true)))
            {
                this._any = value;
                this.OnPropertyChanged("Any", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string schema
    {
        get
        {
            return this._schema;
        }
        set
        {
            if ((this._schema == value))
            {
                return;
            }
            if (((this._schema == null) 
                        || (_schema.Equals(value) != true)))
            {
                this._schema = value;
                this.OnPropertyChanged("schema", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AnySpecified
    {
        get
        {
            return this._anySpecified;
        }
        set
        {
            this._anySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool schemaSpecified
    {
        get
        {
            return this._schemaSpecified;
        }
        set
        {
            this._schemaSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Any should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAny()
    {
        return Any != null && Any.Count > 0;
    }
    
    /// <summary>
    /// Test whether schema should be serialized
    /// </summary>
    public virtual bool ShouldSerializeschema()
    {
        return !string.IsNullOrEmpty(schema);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XML_DEtype : XML_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class anyType_DEtype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private List<System.Xml.XmlElement> _any;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    
    private string _schema;
    
    private string _namespace;
    
    private List<System.Xml.XmlAttribute> _anyAttr;
    
    private bool _anySpecified;
    
    private bool _schemaSpecified;
    
    private bool _namespaceSpecified;
    
    private bool _anyAttrSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
    public virtual List<System.Xml.XmlElement> Any
    {
        get
        {
            return this._any;
        }
        set
        {
            if ((this._any == value))
            {
                return;
            }
            if (((this._any == null) 
                        || (_any.Equals(value) != true)))
            {
                this._any = value;
                this.OnPropertyChanged("Any", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string schema
    {
        get
        {
            return this._schema;
        }
        set
        {
            if ((this._schema == value))
            {
                return;
            }
            if (((this._schema == null) 
                        || (_schema.Equals(value) != true)))
            {
                this._schema = value;
                this.OnPropertyChanged("schema", value);
            }
        }
    }
    
    /// <summary>
    /// Namespace used in an XML Schema file, if any, used to constrain and validate the the content of this field.  This is similar to the use of namespaces with the xs:any element in XML Schemas.
    /// 
    /// See: http://www.w3.org/TR/xmlschema-0/#any
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string @namespace
    {
        get
        {
            return this._namespace;
        }
        set
        {
            if ((this._namespace == value))
            {
                return;
            }
            if (((this._namespace == null) 
                        || (_namespace.Equals(value) != true)))
            {
                this._namespace = value;
                this.OnPropertyChanged("namespace", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public virtual List<System.Xml.XmlAttribute> AnyAttr
    {
        get
        {
            return this._anyAttr;
        }
        set
        {
            if ((this._anyAttr == value))
            {
                return;
            }
            if (((this._anyAttr == null) 
                        || (_anyAttr.Equals(value) != true)))
            {
                this._anyAttr = value;
                this.OnPropertyChanged("AnyAttr", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AnySpecified
    {
        get
        {
            return this._anySpecified;
        }
        set
        {
            this._anySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool schemaSpecified
    {
        get
        {
            return this._schemaSpecified;
        }
        set
        {
            this._schemaSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool namespaceSpecified
    {
        get
        {
            return this._namespaceSpecified;
        }
        set
        {
            this._namespaceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AnyAttrSpecified
    {
        get
        {
            return this._anyAttrSpecified;
        }
        set
        {
            this._anyAttrSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Any should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAny()
    {
        return Any != null && Any.Count > 0;
    }
    
    /// <summary>
    /// Test whether AnyAttr should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAnyAttr()
    {
        return AnyAttr != null && AnyAttr.Count > 0;
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether schema should be serialized
    /// </summary>
    public virtual bool ShouldSerializeschema()
    {
        return !string.IsNullOrEmpty(schema);
    }
    
    /// <summary>
    /// Test whether namespace should be serialized
    /// </summary>
    public virtual bool ShouldSerializenamespace()
    {
        return !string.IsNullOrEmpty(@namespace);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(TargetItemIDType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(anyURI_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class anyURI_Stype : BaseType
{
    
    #region Private fields
    private string _mediaType;
    
    private string _val;
    
    private bool _mediaTypeSpecified;
    
    private bool _valSpecified;
    #endregion
    
    /// <summary>
    /// TBD: Must be a valid Media (MIME) type
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mediaType
    {
        get
        {
            return this._mediaType;
        }
        set
        {
            if ((this._mediaType == value))
            {
                return;
            }
            if (((this._mediaType == null) 
                        || (_mediaType.Equals(value) != true)))
            {
                this._mediaType = value;
                this.OnPropertyChanged("mediaType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool mediaTypeSpecified
    {
        get
        {
            return this._mediaTypeSpecified;
        }
        set
        {
            this._mediaTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether mediaType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemediaType()
    {
        return !string.IsNullOrEmpty(mediaType);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TargetItemIDType : anyURI_Stype
{
    
    #region Private fields
    private string _targetItemText;
    
    private string _targetProperty;
    
    private bool _targetItemTextSpecified;
    
    private bool _targetPropertySpecified;
    #endregion
    
    /// <summary>
    /// Displayed text on the targetted item.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string targetItemText
    {
        get
        {
            return this._targetItemText;
        }
        set
        {
            if ((this._targetItemText == value))
            {
                return;
            }
            if (((this._targetItemText == null) 
                        || (_targetItemText.Equals(value) != true)))
            {
                this._targetItemText = value;
                this.OnPropertyChanged("targetItemText", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string targetProperty
    {
        get
        {
            return this._targetProperty;
        }
        set
        {
            if ((this._targetProperty == value))
            {
                return;
            }
            if (((this._targetProperty == null) 
                        || (_targetProperty.Equals(value) != true)))
            {
                this._targetProperty = value;
                this.OnPropertyChanged("targetProperty", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool targetItemTextSpecified
    {
        get
        {
            return this._targetItemTextSpecified;
        }
        set
        {
            this._targetItemTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetPropertySpecified
    {
        get
        {
            return this._targetPropertySpecified;
        }
        set
        {
            this._targetPropertySpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether targetItemText should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetItemText()
    {
        return !string.IsNullOrEmpty(targetItemText);
    }
    
    /// <summary>
    /// Test whether targetProperty should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetProperty()
    {
        return !string.IsNullOrEmpty(targetProperty);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class anyURI_DEtype : anyURI_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private bool _shouldSerializeX_length;
    
    private long _x_length;
    
    private bool x_lengthFieldSpecified;
    
    private string _description;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    
    private string _pattern;
    
    private bool _descriptionSpecified;
    
    private bool _patternSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long X_length
    {
        get
        {
            return this._x_length;
        }
        set
        {
            if ((_x_length.Equals(value) != true))
            {
                this._x_length = value;
                this.OnPropertyChanged("X_length", value);
            }
            _shouldSerializeX_length = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool X_lengthSpecified
    {
        get
        {
            return this.x_lengthFieldSpecified;
        }
        set
        {
            if ((x_lengthFieldSpecified.Equals(value) != true))
            {
                this.x_lengthFieldSpecified = value;
                this.OnPropertyChanged("X_lengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string pattern
    {
        get
        {
            return this._pattern;
        }
        set
        {
            if ((this._pattern == value))
            {
                return;
            }
            if (((this._pattern == null) 
                        || (_pattern.Equals(value) != true)))
            {
                this._pattern = value;
                this.OnPropertyChanged("pattern", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool descriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool patternSpecified
    {
        get
        {
            return this._patternSpecified;
        }
        set
        {
            this._patternSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether X_length should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_length()
    {
        if (_shouldSerializeX_length)
        {
            return true;
        }
        return (_x_length != default(long));
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether description should be serialized
    /// </summary>
    public virtual bool ShouldSerializedescription()
    {
        return !string.IsNullOrEmpty(description);
    }
    
    /// <summary>
    /// Test whether pattern should be serialized
    /// </summary>
    public virtual bool ShouldSerializepattern()
    {
        return !string.IsNullOrEmpty(pattern);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(HashType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(base64Binary_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class base64Binary_Stype : BaseType
{
    
    #region Private fields
    private string _mediaType;
    
    private byte[] _val;
    
    private bool _mediaTypeSpecified;
    
    private bool _valSpecified;
    #endregion
    
    /// <summary>
    /// TBD: Must be a valid Media (MIME) type
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mediaType
    {
        get
        {
            return this._mediaType;
        }
        set
        {
            if ((this._mediaType == value))
            {
                return;
            }
            if (((this._mediaType == null) 
                        || (_mediaType.Equals(value) != true)))
            {
                this._mediaType = value;
                this.OnPropertyChanged("mediaType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool mediaTypeSpecified
    {
        get
        {
            return this._mediaTypeSpecified;
        }
        set
        {
            this._mediaTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether mediaType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemediaType()
    {
        return !string.IsNullOrEmpty(mediaType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class HashType : base64Binary_Stype
{
    
    #region Private fields
    private string _hashAlgorithm;
    
    private bool _hashAlgorithmSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hashAlgorithm
    {
        get
        {
            return this._hashAlgorithm;
        }
        set
        {
            if ((this._hashAlgorithm == value))
            {
                return;
            }
            if (((this._hashAlgorithm == null) 
                        || (_hashAlgorithm.Equals(value) != true)))
            {
                this._hashAlgorithm = value;
                this.OnPropertyChanged("hashAlgorithm", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool hashAlgorithmSpecified
    {
        get
        {
            return this._hashAlgorithmSpecified;
        }
        set
        {
            this._hashAlgorithmSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether hashAlgorithm should be serialized
    /// </summary>
    public virtual bool ShouldSerializehashAlgorithm()
    {
        return !string.IsNullOrEmpty(hashAlgorithm);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class base64Binary_DEtype : base64Binary_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private string _description;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    
    private bool _descriptionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool descriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether description should be serialized
    /// </summary>
    public virtual bool ShouldSerializedescription()
    {
        return !string.IsNullOrEmpty(description);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(boolean_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class boolean_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializeval;
    
    private bool _val;
    
    private bool valFieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class boolean_DEtype : boolean_Stype
{
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(byte_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class byte_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private sbyte _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// byte_Stype class constructor
    /// </summary>
    public byte_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual sbyte val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(sbyte));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class byte_DEtype : byte_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private sbyte _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private sbyte _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private sbyte _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private sbyte _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// byte_DEtype class constructor
    /// </summary>
    public byte_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual sbyte minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual sbyte maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual sbyte minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual sbyte maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(sbyte));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(sbyte));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(sbyte));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(sbyte));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(date_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class date_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private System.DateTime _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// date_Stype class constructor
    /// </summary>
    public date_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
    public virtual System.DateTime val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class date_DEtype : date_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private System.DateTime _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private System.DateTime _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private System.DateTime _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private System.DateTime _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// date_DEtype class constructor
    /// </summary>
    public date_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
    public virtual System.DateTime minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
    public virtual System.DateTime maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
    public virtual System.DateTime minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
    public virtual System.DateTime maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTimeStamp_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dateTimeStamp_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializeval;
    
    private System.DateTime _val;
    
    private bool valFieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(System.DateTime));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dateTimeStamp_DEtype : dateTimeStamp_Stype
{
    
    #region Private fields
    private bool _shouldSerializeminInclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxExclusive;
    
    private System.DateTime _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private System.DateTime _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private System.DateTime _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private System.DateTime _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private string _mask;
    
    private bool _maskSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(decimal_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class decimal_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private decimal _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// decimal_Stype class constructor
    /// </summary>
    public decimal_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(decimal));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class decimal_DEtype : decimal_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private decimal _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private decimal _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private decimal _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private decimal _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _fractionDigits;
    
    private bool fractionDigitsFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// decimal_DEtype class constructor
    /// </summary>
    public decimal_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual decimal maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte fractionDigits
    {
        get
        {
            return this._fractionDigits;
        }
        set
        {
            if ((_fractionDigits.Equals(value) != true))
            {
                this._fractionDigits = value;
                this.OnPropertyChanged("fractionDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool fractionDigitsSpecified
    {
        get
        {
            return this.fractionDigitsFieldSpecified;
        }
        set
        {
            if ((fractionDigitsFieldSpecified.Equals(value) != true))
            {
                this.fractionDigitsFieldSpecified = value;
                this.OnPropertyChanged("fractionDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(decimal));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(decimal));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(decimal));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(decimal));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(double_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class double_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private double _val;
    
    private bool valFieldSpecified;
    
    private string _mask;
    
    private dtQuantEnum _quantEnum;
    
    private bool _maskSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// double_Stype class constructor
    /// </summary>
    public double_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual double val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(double));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class double_DEtype : double_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private double _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private double _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private double _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private double _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _fractionDigits;
    
    private bool fractionDigitsFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// double_DEtype class constructor
    /// </summary>
    public double_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual double minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual double maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual double minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual double maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte fractionDigits
    {
        get
        {
            return this._fractionDigits;
        }
        set
        {
            if ((_fractionDigits.Equals(value) != true))
            {
                this._fractionDigits = value;
                this.OnPropertyChanged("fractionDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool fractionDigitsSpecified
    {
        get
        {
            return this.fractionDigitsFieldSpecified;
        }
        set
        {
            if ((fractionDigitsFieldSpecified.Equals(value) != true))
            {
                this.fractionDigitsFieldSpecified = value;
                this.OnPropertyChanged("fractionDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(double));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(double));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(double));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(double));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(duration_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class duration_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// duration_Stype class constructor
    /// </summary>
    public duration_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class duration_DEtype : duration_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// duration_DEtype class constructor
    /// </summary>
    public duration_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(float_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class float_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private float _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// float_Stype class constructor
    /// </summary>
    public float_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual float val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(float));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class float_DEtype : float_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private float _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private float _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private float _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private float _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _fractionDigits;
    
    private bool fractionDigitsFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// float_DEtype class constructor
    /// </summary>
    public float_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual float minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual float maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual float minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual float maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte fractionDigits
    {
        get
        {
            return this._fractionDigits;
        }
        set
        {
            if ((_fractionDigits.Equals(value) != true))
            {
                this._fractionDigits = value;
                this.OnPropertyChanged("fractionDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool fractionDigitsSpecified
    {
        get
        {
            return this.fractionDigitsFieldSpecified;
        }
        set
        {
            if ((fractionDigitsFieldSpecified.Equals(value) != true))
            {
                this.fractionDigitsFieldSpecified = value;
                this.OnPropertyChanged("fractionDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(float));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(float));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(float));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(float));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(gDay_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gDay_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// gDay_Stype class constructor
    /// </summary>
    public gDay_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gDay")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gDay_DEtype : gDay_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// gDay_DEtype class constructor
    /// </summary>
    public gDay_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gDay")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gDay")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gDay")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gDay")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonth_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gMonth_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// gMonth_Stype class constructor
    /// </summary>
    public gMonth_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonth")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gMonth_DEtype : gMonth_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// gMonth_DEtype class constructor
    /// </summary>
    public gMonth_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonth")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonth")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonth")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonth")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(gMonthDay_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gMonthDay_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// gMonthDay_Stype class constructor
    /// </summary>
    public gMonthDay_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonthDay")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gMonthDay_DEtype : gMonthDay_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// gMonthDay_DEtype class constructor
    /// </summary>
    public gMonthDay_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonthDay")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonthDay")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonthDay")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gMonthDay")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYear_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gYear_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// gYear_Stype class constructor
    /// </summary>
    public gYear_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYear")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gYear_DEtype : gYear_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// gYear_DEtype class constructor
    /// </summary>
    public gYear_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYear")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYear")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYear")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYear")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(hexBinary_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class hexBinary_Stype : BaseType
{
    
    #region Private fields
    private string _mimeType;
    
    private byte[] _val;
    
    private bool _mimeTypeSpecified;
    
    private bool _valSpecified;
    #endregion
    
    /// <summary>
    /// TBD: Must be a valid MIME type - needs
    /// enumeration
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mimeType
    {
        get
        {
            return this._mimeType;
        }
        set
        {
            if ((this._mimeType == value))
            {
                return;
            }
            if (((this._mimeType == null) 
                        || (_mimeType.Equals(value) != true)))
            {
                this._mimeType = value;
                this.OnPropertyChanged("mimeType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool mimeTypeSpecified
    {
        get
        {
            return this._mimeTypeSpecified;
        }
        set
        {
            this._mimeTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether mimeType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemimeType()
    {
        return !string.IsNullOrEmpty(mimeType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class hexBinary_DEtype : hexBinary_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private string _description;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    
    private string _mask;
    
    private bool _descriptionSpecified;
    
    private bool _maskSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool descriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether description should be serialized
    /// </summary>
    public virtual bool ShouldSerializedescription()
    {
        return !string.IsNullOrEmpty(description);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(int_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class int_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private int _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// int_Stype class constructor
    /// </summary>
    public int_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual int val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(int));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class int_DEtype : int_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private int _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private int _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private int _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private int _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// int_DEtype class constructor
    /// </summary>
    public int_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual int minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual int maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual int minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual int maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(int));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(int));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(int));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(int));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(integer_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class integer_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// integer_Stype class constructor
    /// </summary>
    public integer_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class integer_DEtype : integer_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _maxExclusive;
    
    private string _minExclusive;
    
    private string _maxInclusive;
    
    private string _minInclusive;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maxExclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minInclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// integer_DEtype class constructor
    /// </summary>
    public integer_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(long_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class long_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private long _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// long_Stype class constructor
    /// </summary>
    public long_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(long));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class long_DEtype : long_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private long _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private long _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private long _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private long _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// long_DEtype class constructor
    /// </summary>
    public long_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(long));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(long));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(long));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(long));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(negativeInteger_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class negativeInteger_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// negativeInteger_Stype class constructor
    /// </summary>
    public negativeInteger_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="negativeInteger")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class negativeInteger_DEtype : negativeInteger_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// negativeInteger_DEtype class constructor
    /// </summary>
    public negativeInteger_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="negativeInteger")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="negativeInteger")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="negativeInteger")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="negativeInteger")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonNegativeInteger_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class nonNegativeInteger_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// nonNegativeInteger_Stype class constructor
    /// </summary>
    public nonNegativeInteger_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class nonNegativeInteger_DEtype : nonNegativeInteger_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// nonNegativeInteger_DEtype class constructor
    /// </summary>
    public nonNegativeInteger_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(nonPositiveInteger_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class nonPositiveInteger_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// nonPositiveInteger_Stype class constructor
    /// </summary>
    public nonPositiveInteger_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonPositiveInteger")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class nonPositiveInteger_DEtype : nonPositiveInteger_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// nonPositiveInteger_DEtype class constructor
    /// </summary>
    public nonPositiveInteger_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonPositiveInteger")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonPositiveInteger")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonPositiveInteger")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonPositiveInteger")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(positiveInteger_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class positiveInteger_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// positiveInteger_Stype class constructor
    /// </summary>
    public positiveInteger_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class positiveInteger_DEtype : positiveInteger_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// positiveInteger_DEtype class constructor
    /// </summary>
    public positiveInteger_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(short_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class short_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private short _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// short_Stype class constructor
    /// </summary>
    public short_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual short val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(short));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class short_DEtype : short_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private short _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private short _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private short _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private short _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// short_DEtype class constructor
    /// </summary>
    public short_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual short minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual short maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual short minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual short maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(short));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(short));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(short));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(short));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPathType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XQueryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SQL_Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FileHashType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TargetItemXPathType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageCodeISO6393_Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AcceptabilityType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(string_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class string_Stype : BaseType
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XPathType : string_Stype
{
    
    #region Private fields
    private string _version;
    
    private bool _versionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XQueryType : string_Stype
{
    
    #region Private fields
    private string _version;
    
    private bool _versionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SQL_Type : string_Stype
{
    
    #region Private fields
    private string _sqlDialect;
    
    private string _sqlDialectVersion;
    
    private bool _sqlDialectSpecified;
    
    private bool _sqlDialectVersionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string sqlDialect
    {
        get
        {
            return this._sqlDialect;
        }
        set
        {
            if ((this._sqlDialect == value))
            {
                return;
            }
            if (((this._sqlDialect == null) 
                        || (_sqlDialect.Equals(value) != true)))
            {
                this._sqlDialect = value;
                this.OnPropertyChanged("sqlDialect", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string sqlDialectVersion
    {
        get
        {
            return this._sqlDialectVersion;
        }
        set
        {
            if ((this._sqlDialectVersion == value))
            {
                return;
            }
            if (((this._sqlDialectVersion == null) 
                        || (_sqlDialectVersion.Equals(value) != true)))
            {
                this._sqlDialectVersion = value;
                this.OnPropertyChanged("sqlDialectVersion", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool sqlDialectSpecified
    {
        get
        {
            return this._sqlDialectSpecified;
        }
        set
        {
            this._sqlDialectSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool sqlDialectVersionSpecified
    {
        get
        {
            return this._sqlDialectVersionSpecified;
        }
        set
        {
            this._sqlDialectVersionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether sqlDialect should be serialized
    /// </summary>
    public virtual bool ShouldSerializesqlDialect()
    {
        return !string.IsNullOrEmpty(sqlDialect);
    }
    
    /// <summary>
    /// Test whether sqlDialectVersion should be serialized
    /// </summary>
    public virtual bool ShouldSerializesqlDialectVersion()
    {
        return !string.IsNullOrEmpty(sqlDialectVersion);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class FileHashType : string_Stype
{
    
    #region Private fields
    private string _hashType;
    
    private bool _hashTypeSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hashType
    {
        get
        {
            return this._hashType;
        }
        set
        {
            if ((this._hashType == value))
            {
                return;
            }
            if (((this._hashType == null) 
                        || (_hashType.Equals(value) != true)))
            {
                this._hashType = value;
                this.OnPropertyChanged("hashType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool hashTypeSpecified
    {
        get
        {
            return this._hashTypeSpecified;
        }
        set
        {
            this._hashTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether hashType should be serialized
    /// </summary>
    public virtual bool ShouldSerializehashType()
    {
        return !string.IsNullOrEmpty(hashType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TargetItemXPathType : string_Stype
{
    
    #region Private fields
    private string _targetItemText;
    
    private bool _targetItemTextSpecified;
    #endregion
    
    /// <summary>
    /// Displayed text on the targetted item.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string targetItemText
    {
        get
        {
            return this._targetItemText;
        }
        set
        {
            if ((this._targetItemText == value))
            {
                return;
            }
            if (((this._targetItemText == null) 
                        || (_targetItemText.Equals(value) != true)))
            {
                this._targetItemText = value;
                this.OnPropertyChanged("targetItemText", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool targetItemTextSpecified
    {
        get
        {
            return this._targetItemTextSpecified;
        }
        set
        {
            this._targetItemTextSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether targetItemText should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetItemText()
    {
        return !string.IsNullOrEmpty(targetItemText);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A generic structure for recording languages.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="LanguageCode.ISO.639.3_Type", Namespace="urn:ihe:qrph:sdc:2016")]
public partial class LanguageCodeISO6393_Type : string_Stype
{
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// UnitsType represents the measurement standard and its abbreviated notation for quantifiable objects, e.g., miles, km, mm, cm, etc. The default system for standard notations is UCUM.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class UnitsType : string_Stype
{
    
    #region Private fields
    private string _unitSystem;
    
    private bool _unitSystemSpecified;
    #endregion
    
    /// <summary>
    /// UnitsType class constructor
    /// </summary>
    public UnitsType()
    {
        this._unitSystem = "UCUM";
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("UCUM")]
    public virtual string unitSystem
    {
        get
        {
            return this._unitSystem;
        }
        set
        {
            if ((this._unitSystem == value))
            {
                return;
            }
            if (((this._unitSystem == null) 
                        || (_unitSystem.Equals(value) != true)))
            {
                this._unitSystem = value;
                this.OnPropertyChanged("unitSystem", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool unitSystemSpecified
    {
        get
        {
            return this._unitSystemSpecified;
        }
        set
        {
            this._unitSystemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether unitSystem should be serialized
    /// </summary>
    public virtual bool ShouldSerializeunitSystem()
    {
        return !string.IsNullOrEmpty(unitSystem);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class AcceptabilityType : string_Stype
{
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class string_DEtype : string_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    
    private string _pattern;
    
    private string _mask;
    
    private bool _patternSpecified;
    
    private bool _maskSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string pattern
    {
        get
        {
            return this._pattern;
        }
        set
        {
            if ((this._pattern == value))
            {
                return;
            }
            if (((this._pattern == null) 
                        || (_pattern.Equals(value) != true)))
            {
                this._pattern = value;
                this.OnPropertyChanged("pattern", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool patternSpecified
    {
        get
        {
            return this._patternSpecified;
        }
        set
        {
            this._patternSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
    
    /// <summary>
    /// Test whether pattern should be serialized
    /// </summary>
    public virtual bool ShouldSerializepattern()
    {
        return !string.IsNullOrEmpty(pattern);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(time_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class time_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private System.DateTime _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// time_Stype class constructor
    /// </summary>
    public time_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="time")]
    public virtual System.DateTime val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class time_DEtype : time_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private System.DateTime _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private System.DateTime _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private System.DateTime _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private System.DateTime _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// time_DEtype class constructor
    /// </summary>
    public time_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="time")]
    public virtual System.DateTime minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="time")]
    public virtual System.DateTime maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="time")]
    public virtual System.DateTime minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="time")]
    public virtual System.DateTime maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedByte_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedByte_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private byte _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// unsignedByte_Stype class constructor
    /// </summary>
    public unsignedByte_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedByte_DEtype : unsignedByte_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private byte _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private byte _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private byte _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private byte _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// unsignedByte_DEtype class constructor
    /// </summary>
    public unsignedByte_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedInt_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedInt_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private uint _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// unsignedInt_Stype class constructor
    /// </summary>
    public unsignedInt_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual uint val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(uint));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedInt_DEtype : unsignedInt_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private uint _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private uint _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private uint _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private uint _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// unsignedInt_DEtype class constructor
    /// </summary>
    public unsignedInt_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual uint minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual uint maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual uint minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual uint maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(uint));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(uint));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(uint));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(uint));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedLong_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedLong_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private ulong _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// unsignedLong_Stype class constructor
    /// </summary>
    public unsignedLong_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ulong val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(ulong));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedLong_DEtype : unsignedLong_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private ulong _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private ulong _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private ulong _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private ulong _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// unsignedLong_DEtype class constructor
    /// </summary>
    public unsignedLong_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ulong minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ulong maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ulong minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ulong maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(ulong));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(ulong));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(ulong));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(ulong));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(unsignedShort_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedShort_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private ushort _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// unsignedShort_Stype class constructor
    /// </summary>
    public unsignedShort_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(ushort));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class unsignedShort_DEtype : unsignedShort_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private ushort _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private ushort _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private ushort _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private ushort _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private byte _totalDigits;
    
    private bool totalDigitsFieldSpecified;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// unsignedShort_DEtype class constructor
    /// </summary>
    public unsignedShort_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte totalDigits
    {
        get
        {
            return this._totalDigits;
        }
        set
        {
            if ((_totalDigits.Equals(value) != true))
            {
                this._totalDigits = value;
                this.OnPropertyChanged("totalDigits", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool totalDigitsSpecified
    {
        get
        {
            return this.totalDigitsFieldSpecified;
        }
        set
        {
            if ((totalDigitsFieldSpecified.Equals(value) != true))
            {
                this.totalDigitsFieldSpecified = value;
                this.OnPropertyChanged("totalDigitsSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(ushort));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(ushort));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(ushort));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(ushort));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(yearMonthDuration_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class yearMonthDuration_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// yearMonthDuration_Stype class constructor
    /// </summary>
    public yearMonthDuration_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class yearMonthDuration_DEtype : yearMonthDuration_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// yearMonthDuration_DEtype class constructor
    /// </summary>
    public yearMonthDuration_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemChoiceType
{
    
    HTML,
    
    XML,
    
    anyType,
    
    anyURI,
    
    base64Binary,
    
    boolean,
    
    @byte,
    
    date,
    
    dateTime,
    
    dateTimeStamp,
    
    @decimal,
    
    @double,
    
    duration,
    
    @float,
    
    gDay,
    
    gMonth,
    
    gMonthDay,
    
    gYear,
    
    gYearMonth,
    
    hexBinary,
    
    @int,
    
    integer,
    
    @long,
    
    negativeInteger,
    
    nonNegativeInteger,
    
    nonPositiveInteger,
    
    positiveInteger,
    
    @short,
    
    @string,
    
    time,
    
    unsignedByte,
    
    unsignedInt,
    
    unsignedLong,
    
    unsignedShort,
    
    yearMonthDuration,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type describes strongly-typed parameters used in functions and web services.  Values are hard-coded as constants in the XML instance document.  They are not user-entered values.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ParameterValueType : DataTypes_SType
{
    
    #region Private fields
    private string _paramName;
    
    private bool _paramNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string paramName
    {
        get
        {
            return this._paramName;
        }
        set
        {
            if ((this._paramName == value))
            {
                return;
            }
            if (((this._paramName == null) 
                        || (_paramName.Equals(value) != true)))
            {
                this._paramName = value;
                this.OnPropertyChanged("paramName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool paramNameSpecified
    {
        get
        {
            return this._paramNameSpecified;
        }
        set
        {
            this._paramNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether paramName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparamName()
    {
        return !string.IsNullOrEmpty(paramName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// MOVED: From SDCFormDesign
/// CHANGED:
/// Property is any type of data that is associated with any form item (e.g., section, question, list item) in any context.  The Property context is specified by the @type attribute.  Examples of @type values may include:
/// -alternate language representations, e.g., 'spanish'
/// -'instruction'
/// -'tooltip'
/// -'help' for a pop-up help box
/// -'outlining' (such as question numbering)
/// 
/// The @type enumerations must be defined and documented for the particular use case, and are currently out of scope in this schema definition.  Multiple type tokens for a single element are supported.
/// 
/// RENAMED:  'OtherText' to 'Property' 9/14/2016
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PropertyType1 : DataTypes_SType
{
    
    #region Private fields
    private string _propName;
    
    private string _propClass;
    
    private string _val;
    
    private bool _propNameSpecified;
    
    private bool _propClassSpecified;
    
    private bool _valSpecified;
    #endregion
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public virtual string propName
    {
        get
        {
            return this._propName;
        }
        set
        {
            if ((this._propName == value))
            {
                return;
            }
            if (((this._propName == null) 
                        || (_propName.Equals(value) != true)))
            {
                this._propName = value;
                this.OnPropertyChanged("propName", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string propClass
    {
        get
        {
            return this._propClass;
        }
        set
        {
            if ((this._propClass == value))
            {
                return;
            }
            if (((this._propClass == null) 
                        || (_propClass.Equals(value) != true)))
            {
                this._propClass = value;
                this.OnPropertyChanged("propClass", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool propNameSpecified
    {
        get
        {
            return this._propNameSpecified;
        }
        set
        {
            this._propNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool propClassSpecified
    {
        get
        {
            return this._propClassSpecified;
        }
        set
        {
            this._propClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether propName should be serialized
    /// </summary>
    public virtual bool ShouldSerializepropName()
    {
        return !string.IsNullOrEmpty(propName);
    }
    
    /// <summary>
    /// Test whether propClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializepropClass()
    {
        return !string.IsNullOrEmpty(propClass);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("SDCPackageList", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class PackageListType : ExtensionBaseType
{
    
    #region Private fields
    private List<PackageItemType> _packageItem;
    
    private HTMLPackageType _hTML;
    
    private bool _packageItemSpecified;
    
    private bool _hTMLSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("PackageItem", Order=0)]
    public virtual List<PackageItemType> PackageItem
    {
        get
        {
            return this._packageItem;
        }
        set
        {
            if ((this._packageItem == value))
            {
                return;
            }
            if (((this._packageItem == null) 
                        || (_packageItem.Equals(value) != true)))
            {
                this._packageItem = value;
                this.OnPropertyChanged("PackageItem", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual HTMLPackageType HTML
    {
        get
        {
            return this._hTML;
        }
        set
        {
            if ((this._hTML == value))
            {
                return;
            }
            if (((this._hTML == null) 
                        || (_hTML.Equals(value) != true)))
            {
                this._hTML = value;
                this.OnPropertyChanged("HTML", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PackageItemSpecified
    {
        get
        {
            return this._packageItemSpecified;
        }
        set
        {
            this._packageItemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool HTMLSpecified
    {
        get
        {
            return this._hTMLSpecified;
        }
        set
        {
            this._hTMLSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PackageItem should be serialized
    /// </summary>
    public virtual bool ShouldSerializePackageItem()
    {
        return PackageItem != null && PackageItem.Count > 0;
    }
    
    /// <summary>
    /// Test whether HTML should be serialized
    /// </summary>
    public virtual bool ShouldSerializeHTML()
    {
        return (_hTML != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PackageItemType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeformat;
    
    private bool _shouldSerializenewData;
    
    private bool _shouldSerializechangedData;
    
    private string _formManagerURI;
    
    private PackageItemTypeFormat _format;
    
    private bool formatFieldSpecified;
    
    private string _packageID;
    
    private string _title;
    
    private string _baseURI;
    
    private string _filename;
    
    private string _basedOnURI;
    
    private string _lineage;
    
    private string _version;
    
    private string _fullURI;
    
    private string _prevVersionURI;
    
    private string _formInstanceURI;
    
    private string _formInstanceVersionURI;
    
    private string _formPreviousInstanceVersionURI;
    
    private bool _changedData;
    
    private bool changedDataFieldSpecified;
    
    private bool _newData;
    
    private bool newDataFieldSpecified;
    
    private bool _formManagerURISpecified;
    
    private bool _packageIDSpecified;
    
    private bool _titleSpecified;
    
    private bool _baseURISpecified;
    
    private bool _filenameSpecified;
    
    private bool _basedOnURISpecified;
    
    private bool _lineageSpecified;
    
    private bool _versionSpecified;
    
    private bool _fullURISpecified;
    
    private bool _prevVersionURISpecified;
    
    private bool _formInstanceURISpecified;
    
    private bool _formInstanceVersionURISpecified;
    
    private bool _formPreviousInstanceVersionURISpecified;
    #endregion
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formManagerURI
    {
        get
        {
            return this._formManagerURI;
        }
        set
        {
            if ((this._formManagerURI == value))
            {
                return;
            }
            if (((this._formManagerURI == null) 
                        || (_formManagerURI.Equals(value) != true)))
            {
                this._formManagerURI = value;
                this.OnPropertyChanged("formManagerURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// enumeration
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual PackageItemTypeFormat format
    {
        get
        {
            return this._format;
        }
        set
        {
            if ((_format.Equals(value) != true))
            {
                this._format = value;
                this.OnPropertyChanged("format", value);
            }
            _shouldSerializeformat = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool formatSpecified
    {
        get
        {
            return this.formatFieldSpecified;
        }
        set
        {
            if ((formatFieldSpecified.Equals(value) != true))
            {
                this.formatFieldSpecified = value;
                this.OnPropertyChanged("formatSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string packageID
    {
        get
        {
            return this._packageID;
        }
        set
        {
            if ((this._packageID == value))
            {
                return;
            }
            if (((this._packageID == null) 
                        || (_packageID.Equals(value) != true)))
            {
                this._packageID = value;
                this.OnPropertyChanged("packageID", value);
            }
        }
    }
    
    /// <summary>
    /// NEW
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string title
    {
        get
        {
            return this._title;
        }
        set
        {
            if ((this._title == value))
            {
                return;
            }
            if (((this._title == null) 
                        || (_title.Equals(value) != true)))
            {
                this._title = value;
                this.OnPropertyChanged("title", value);
            }
        }
    }
    
    /// <summary>
    /// If the ID does not use the default base URI (namespace), then the local baseURI goes here. Note that all IDs must be unique within a form, even if they do not have the same baseURI.
    /// 
    /// Ideally, the baseURI + ID should combine to form a *globally* unique identifier, that uniquely identifies an item in a particular form.  The same baseURI and ID may be reused in derived or versioned forms, as long as the context stays the same, and any affected data elements remain unchanged in context and semantics.  Following this approach is likely to simplify analytics based on form content.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string baseURI
    {
        get
        {
            return this._baseURI;
        }
        set
        {
            if ((this._baseURI == value))
            {
                return;
            }
            if (((this._baseURI == null) 
                        || (_baseURI.Equals(value) != true)))
            {
                this._baseURI = value;
                this.OnPropertyChanged("baseURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: filename to use when the current FormDesign instance is saved as a file.
    /// For forms containing responses, the filename may include the formInstanceVersionURI,
    /// but the naming convention may be use-case-specific.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string filename
    {
        get
        {
            return this._filename;
        }
        set
        {
            if ((this._filename == value))
            {
                return;
            }
            if (((this._filename == null) 
                        || (_filename.Equals(value) != true)))
            {
                this._filename = value;
                this.OnPropertyChanged("filename", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: URI used to identify the form that that this FormDesign is based upon.  In most cases, this should be a standard form that is modified and/or extended by the current FormDesign.
    /// 
    /// The current template reuses the basedOn IDs whenever the question/answer/semantic context is identical to the original.
    /// 
    /// 5/11/17:  Relying on data element mapping may be a better and more flexible approach than @basedOnURI. In this way, forms could compare data elements to determine if they contain semantic matches, and this is supported better with a more robust code map section.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string basedOnURI
    {
        get
        {
            return this._basedOnURI;
        }
        set
        {
            if ((this._basedOnURI == value))
            {
                return;
            }
            if (((this._basedOnURI == null) 
                        || (_basedOnURI.Equals(value) != true)))
            {
                this._basedOnURI = value;
                this.OnPropertyChanged("basedOnURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: A text identifier that is used to group multiple versions of a single form.  The lineage is constant for all versions of a single kind of form.
    /// 
    /// When appended to @baseURI, it can be used to retrieve all versions of one particular form.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string lineage
    {
        get
        {
            return this._lineage;
        }
        set
        {
            if ((this._lineage == value))
            {
                return;
            }
            if (((this._lineage == null) 
                        || (_lineage.Equals(value) != true)))
            {
                this._lineage = value;
                this.OnPropertyChanged("lineage", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: @version contains the version text for the current form.  It is designed to be used in conjuction with @baseURI and @lineage.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: The full URI that uniquely identifies the current form.   It is created by concatenating @baseURI + lineage + version.  Each of the componenets is separated by a single forward slash.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string fullURI
    {
        get
        {
            return this._fullURI;
        }
        set
        {
            if ((this._fullURI == value))
            {
                return;
            }
            if (((this._fullURI == null) 
                        || (_fullURI.Equals(value) != true)))
            {
                this._fullURI = value;
                this.OnPropertyChanged("fullURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: The full URI used to identify the form that is the immediate previous version of the current FormDesign
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string prevVersionURI
    {
        get
        {
            return this._prevVersionURI;
        }
        set
        {
            if ((this._prevVersionURI == value))
            {
                return;
            }
            if (((this._prevVersionURI == null) 
                        || (_prevVersionURI.Equals(value) != true)))
            {
                this._prevVersionURI = value;
                this.OnPropertyChanged("prevVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a form.  Used for tracking form responses across time and across multiple episodes of editing by end-users.  This URI does not change for each edit session of a form instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formInstanceURI
    {
        get
        {
            return this._formInstanceURI;
        }
        set
        {
            if ((this._formInstanceURI == value))
            {
                return;
            }
            if (((this._formInstanceURI == null) 
                        || (_formInstanceURI.Equals(value) != true)))
            {
                this._formInstanceURI = value;
                this.OnPropertyChanged("formInstanceURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a form's saved responses.  It is used for tracking form responses across time and across multiple episodes of editing by end-users.  This URI must change for each edit/save session of a form instance.  It may be e.g., a new GUID, or a repeat of the formInstanceID followed by a version number.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formInstanceVersionURI
    {
        get
        {
            return this._formInstanceVersionURI;
        }
        set
        {
            if ((this._formInstanceVersionURI == value))
            {
                return;
            }
            if (((this._formInstanceVersionURI == null) 
                        || (_formInstanceVersionURI.Equals(value) != true)))
            {
                this._formInstanceVersionURI = value;
                this.OnPropertyChanged("formInstanceVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify the immediate previous instance of a form containing responses.  This is the @formInstanceVersionURI that represents the instance of the form that the user opened up before beginning a new cycle of edit/save.  This attribute is used for tracking form responses across time and across multiple episodes of editing by end-users.  This URI must change for each edit session of a form instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formPreviousInstanceVersionURI
    {
        get
        {
            return this._formPreviousInstanceVersionURI;
        }
        set
        {
            if ((this._formPreviousInstanceVersionURI == value))
            {
                return;
            }
            if (((this._formPreviousInstanceVersionURI == null) 
                        || (_formPreviousInstanceVersionURI.Equals(value) != true)))
            {
                this._formPreviousInstanceVersionURI = value;
                this.OnPropertyChanged("formPreviousInstanceVersionURI", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool changedData
    {
        get
        {
            return this._changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                this._changedData = value;
                this.OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool changedDataSpecified
    {
        get
        {
            return this.changedDataFieldSpecified;
        }
        set
        {
            if ((changedDataFieldSpecified.Equals(value) != true))
            {
                this.changedDataFieldSpecified = value;
                this.OnPropertyChanged("changedDataSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool newData
    {
        get
        {
            return this._newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                this._newData = value;
                this.OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool newDataSpecified
    {
        get
        {
            return this.newDataFieldSpecified;
        }
        set
        {
            if ((newDataFieldSpecified.Equals(value) != true))
            {
                this.newDataFieldSpecified = value;
                this.OnPropertyChanged("newDataSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool formManagerURISpecified
    {
        get
        {
            return this._formManagerURISpecified;
        }
        set
        {
            this._formManagerURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool packageIDSpecified
    {
        get
        {
            return this._packageIDSpecified;
        }
        set
        {
            this._packageIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool titleSpecified
    {
        get
        {
            return this._titleSpecified;
        }
        set
        {
            this._titleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool baseURISpecified
    {
        get
        {
            return this._baseURISpecified;
        }
        set
        {
            this._baseURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool filenameSpecified
    {
        get
        {
            return this._filenameSpecified;
        }
        set
        {
            this._filenameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool basedOnURISpecified
    {
        get
        {
            return this._basedOnURISpecified;
        }
        set
        {
            this._basedOnURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool lineageSpecified
    {
        get
        {
            return this._lineageSpecified;
        }
        set
        {
            this._lineageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fullURISpecified
    {
        get
        {
            return this._fullURISpecified;
        }
        set
        {
            this._fullURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool prevVersionURISpecified
    {
        get
        {
            return this._prevVersionURISpecified;
        }
        set
        {
            this._prevVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formInstanceURISpecified
    {
        get
        {
            return this._formInstanceURISpecified;
        }
        set
        {
            this._formInstanceURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formInstanceVersionURISpecified
    {
        get
        {
            return this._formInstanceVersionURISpecified;
        }
        set
        {
            this._formInstanceVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formPreviousInstanceVersionURISpecified
    {
        get
        {
            return this._formPreviousInstanceVersionURISpecified;
        }
        set
        {
            this._formPreviousInstanceVersionURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
    
    /// <summary>
    /// Test whether format should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformat()
    {
        if (_shouldSerializeformat)
        {
            return true;
        }
        return (_format != default(PackageItemTypeFormat));
    }
    
    /// <summary>
    /// Test whether formManagerURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformManagerURI()
    {
        return !string.IsNullOrEmpty(formManagerURI);
    }
    
    /// <summary>
    /// Test whether packageID should be serialized
    /// </summary>
    public virtual bool ShouldSerializepackageID()
    {
        return !string.IsNullOrEmpty(packageID);
    }
    
    /// <summary>
    /// Test whether title should be serialized
    /// </summary>
    public virtual bool ShouldSerializetitle()
    {
        return !string.IsNullOrEmpty(title);
    }
    
    /// <summary>
    /// Test whether baseURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebaseURI()
    {
        return !string.IsNullOrEmpty(baseURI);
    }
    
    /// <summary>
    /// Test whether filename should be serialized
    /// </summary>
    public virtual bool ShouldSerializefilename()
    {
        return !string.IsNullOrEmpty(filename);
    }
    
    /// <summary>
    /// Test whether basedOnURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebasedOnURI()
    {
        return !string.IsNullOrEmpty(basedOnURI);
    }
    
    /// <summary>
    /// Test whether lineage should be serialized
    /// </summary>
    public virtual bool ShouldSerializelineage()
    {
        return !string.IsNullOrEmpty(lineage);
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether fullURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializefullURI()
    {
        return !string.IsNullOrEmpty(fullURI);
    }
    
    /// <summary>
    /// Test whether prevVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeprevVersionURI()
    {
        return !string.IsNullOrEmpty(prevVersionURI);
    }
    
    /// <summary>
    /// Test whether formInstanceURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformInstanceURI()
    {
        return !string.IsNullOrEmpty(formInstanceURI);
    }
    
    /// <summary>
    /// Test whether formInstanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformInstanceVersionURI()
    {
        return !string.IsNullOrEmpty(formInstanceVersionURI);
    }
    
    /// <summary>
    /// Test whether formPreviousInstanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformPreviousInstanceVersionURI()
    {
        return !string.IsNullOrEmpty(formPreviousInstanceVersionURI);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum PackageItemTypeFormat
{
    
    XML,
    
    JSON,
    
    HTML,
    
    URI,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class HTMLPackageType : ExtensionBaseType
{
    
    #region Private fields
    private base64Binary_Stype _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("HTMLbase64", Order=0)]
    public virtual base64Binary_Stype Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XMLPackageType : ExtensionBaseType
{
    
    #region Private fields
    private ExtensionBaseType _item;
    
    private List<FormDesignType> _formDesign;
    
    private List<LinkType> _formDesignPkgLink;
    
    private List<DataElementType> _dataElement;
    
    private List<MappingType> _mapTemplate;
    
    private List<XMLPackageTypeReportDesignTemplate> _reportDesignTemplate;
    
    private List<XMLPackageTypeHelperFile> _helperFile;
    
    private bool _itemSpecified;
    
    private bool _formDesignSpecified;
    
    private bool _formDesignPkgLinkSpecified;
    
    private bool _dataElementSpecified;
    
    private bool _mapTemplateSpecified;
    
    private bool _reportDesignTemplateSpecified;
    
    private bool _helperFileSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("DemogFormDesign", typeof(FormDesignType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("DemogFormPkgLink", typeof(LinkType), Order=0)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("FormDesign", Order=1)]
    public virtual List<FormDesignType> FormDesign
    {
        get
        {
            return this._formDesign;
        }
        set
        {
            if ((this._formDesign == value))
            {
                return;
            }
            if (((this._formDesign == null) 
                        || (_formDesign.Equals(value) != true)))
            {
                this._formDesign = value;
                this.OnPropertyChanged("FormDesign", value);
            }
        }
    }
    
    /// <summary>
    /// Retrieve raw FormDesign XML from link
    /// (Previously, retrieve a Pkg that wraps FormDesign XML)
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("FormDesignPkgLink", Order=2)]
    public virtual List<LinkType> FormDesignPkgLink
    {
        get
        {
            return this._formDesignPkgLink;
        }
        set
        {
            if ((this._formDesignPkgLink == value))
            {
                return;
            }
            if (((this._formDesignPkgLink == null) 
                        || (_formDesignPkgLink.Equals(value) != true)))
            {
                this._formDesignPkgLink = value;
                this.OnPropertyChanged("FormDesignPkgLink", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("DataElement", Order=3)]
    public virtual List<DataElementType> DataElement
    {
        get
        {
            return this._dataElement;
        }
        set
        {
            if ((this._dataElement == value))
            {
                return;
            }
            if (((this._dataElement == null) 
                        || (_dataElement.Equals(value) != true)))
            {
                this._dataElement = value;
                this.OnPropertyChanged("DataElement", value);
            }
        }
    }
    
    /// <summary>
    /// Describes mappings between FormDesignTemplate items and data elements, terminologies, databases, XML files, local values, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("MapTemplate", Order=4)]
    public virtual List<MappingType> MapTemplate
    {
        get
        {
            return this._mapTemplate;
        }
        set
        {
            if ((this._mapTemplate == value))
            {
                return;
            }
            if (((this._mapTemplate == null) 
                        || (_mapTemplate.Equals(value) != true)))
            {
                this._mapTemplate = value;
                this.OnPropertyChanged("MapTemplate", value);
            }
        }
    }
    
    /// <summary>
    /// ReportDesignTemplate describes the information content of a report (e.g., sections, questions etc).  This enables control of the presentation view of the user responses derived from a designated FormDesignTemplate.  It allows the report presentation to look substantially different from the data-entry form view defined by the FormDesignTemplate.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("ReportDesignTemplate", Order=5)]
    public virtual List<XMLPackageTypeReportDesignTemplate> ReportDesignTemplate
    {
        get
        {
            return this._reportDesignTemplate;
        }
        set
        {
            if ((this._reportDesignTemplate == value))
            {
                return;
            }
            if (((this._reportDesignTemplate == null) 
                        || (_reportDesignTemplate.Equals(value) != true)))
            {
                this._reportDesignTemplate = value;
                this.OnPropertyChanged("ReportDesignTemplate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("HelperFile", Order=6)]
    public virtual List<XMLPackageTypeHelperFile> HelperFile
    {
        get
        {
            return this._helperFile;
        }
        set
        {
            if ((this._helperFile == value))
            {
                return;
            }
            if (((this._helperFile == null) 
                        || (_helperFile.Equals(value) != true)))
            {
                this._helperFile = value;
                this.OnPropertyChanged("HelperFile", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FormDesignSpecified
    {
        get
        {
            return this._formDesignSpecified;
        }
        set
        {
            this._formDesignSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FormDesignPkgLinkSpecified
    {
        get
        {
            return this._formDesignPkgLinkSpecified;
        }
        set
        {
            this._formDesignPkgLinkSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DataElementSpecified
    {
        get
        {
            return this._dataElementSpecified;
        }
        set
        {
            this._dataElementSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool MapTemplateSpecified
    {
        get
        {
            return this._mapTemplateSpecified;
        }
        set
        {
            this._mapTemplateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ReportDesignTemplateSpecified
    {
        get
        {
            return this._reportDesignTemplateSpecified;
        }
        set
        {
            this._reportDesignTemplateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool HelperFileSpecified
    {
        get
        {
            return this._helperFileSpecified;
        }
        set
        {
            this._helperFileSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether FormDesign should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFormDesign()
    {
        return FormDesign != null && FormDesign.Count > 0;
    }
    
    /// <summary>
    /// Test whether FormDesignPkgLink should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFormDesignPkgLink()
    {
        return FormDesignPkgLink != null && FormDesignPkgLink.Count > 0;
    }
    
    /// <summary>
    /// Test whether DataElement should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDataElement()
    {
        return DataElement != null && DataElement.Count > 0;
    }
    
    /// <summary>
    /// Test whether MapTemplate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMapTemplate()
    {
        return MapTemplate != null && MapTemplate.Count > 0;
    }
    
    /// <summary>
    /// Test whether ReportDesignTemplate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReportDesignTemplate()
    {
        return ReportDesignTemplate != null && ReportDesignTemplate.Count > 0;
    }
    
    /// <summary>
    /// Test whether HelperFile should be serialized
    /// </summary>
    public virtual bool ShouldSerializeHelperFile()
    {
        return HelperFile != null && HelperFile.Count > 0;
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Start here. This is the top level of the SDCFormDesign object model.
/// It represents the definition for the information content of a single data-entry
/// form.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("FormDesign", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class FormDesignType : IdentifiedExtensionType
{
    
    #region Private fields
    private bool _shouldSerializecompletionStatus;
    
    private bool _shouldSerializeapprovalStatus;
    
    private bool _shouldSerializenewData;
    
    private bool _shouldSerializechangedData;
    
    private bool _shouldSerializeinstanceVersionPrev;
    
    private bool _shouldSerializeinstanceVersion;
    
    private EventType _beforeLoadForm;
    
    private EventType _beforeLoadData;
    
    private EventType _beforeShowForm;
    
    private EventType _beforeDataSubmit;
    
    private EventType _beforeCloseForm;
    
    private List<OnEventType> _onEvent;
    
    private SectionItemType _header;
    
    private SectionItemType _body;
    
    private SectionItemType _footer;
    
    private RulesType _rules;
    
    private string _lineage;
    
    private string _version;
    
    private string _versionPrev;
    
    private string _fullURI;
    
    private string _filename;
    
    private string _formTitle;
    
    private string _basedOnURI;
    
    private string _instanceID;
    
    private System.DateTime _instanceVersion;
    
    private bool instanceVersionFieldSpecified;
    
    private string _instanceVersionURI;
    
    private System.DateTime _instanceVersionPrev;
    
    private bool instanceVersionPrevFieldSpecified;
    
    private FormDesignTypeApprovalStatus _approvalStatus;
    
    private bool approvalStatusFieldSpecified;
    
    private FormDesignTypeCompletionStatus _completionStatus;
    
    private bool completionStatusFieldSpecified;
    
    private bool _changedData;
    
    private bool changedDataFieldSpecified;
    
    private bool _newData;
    
    private bool newDataFieldSpecified;
    
    private bool _beforeLoadFormSpecified;
    
    private bool _beforeLoadDataSpecified;
    
    private bool _beforeShowFormSpecified;
    
    private bool _beforeDataSubmitSpecified;
    
    private bool _beforeCloseFormSpecified;
    
    private bool _onEventSpecified;
    
    private bool _headerSpecified;
    
    private bool _bodySpecified;
    
    private bool _footerSpecified;
    
    private bool _rulesSpecified;
    
    private bool _lineageSpecified;
    
    private bool _versionSpecified;
    
    private bool _versionPrevSpecified;
    
    private bool _fullURISpecified;
    
    private bool _filenameSpecified;
    
    private bool _formTitleSpecified;
    
    private bool _basedOnURISpecified;
    
    private bool _instanceIDSpecified;
    
    private bool _instanceVersionURISpecified;
    #endregion
    
    /// <summary>
    /// NEW: This event is fired before the page is loaded
    /// into memory, and before stored form data is loaded. It may be used,
    /// e.g., for authentication, to retrieve/prepare stored data, and/or to
    /// control form rendering according to user
    /// preferences.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual EventType BeforeLoadForm
    {
        get
        {
            return this._beforeLoadForm;
        }
        set
        {
            if ((this._beforeLoadForm == value))
            {
                return;
            }
            if (((this._beforeLoadForm == null) 
                        || (_beforeLoadForm.Equals(value) != true)))
            {
                this._beforeLoadForm = value;
                this.OnPropertyChanged("BeforeLoadForm", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: This event is fired after the page is loaded into
    /// memory, before stored form data is loaded, and before the form is
    /// visible. For example, It may be used to determine the data to be
    /// loaded and to perform the data loading.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual EventType BeforeLoadData
    {
        get
        {
            return this._beforeLoadData;
        }
        set
        {
            if ((this._beforeLoadData == value))
            {
                return;
            }
            if (((this._beforeLoadData == null) 
                        || (_beforeLoadData.Equals(value) != true)))
            {
                this._beforeLoadData = value;
                this.OnPropertyChanged("BeforeLoadData", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: This event is fired after the page is loaded is
    /// memory, after the data is loaded into the form, but before the form
    /// is displayed. It may be used to perform form activities that are
    /// controlled by the loaded data.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual EventType BeforeShowForm
    {
        get
        {
            return this._beforeShowForm;
        }
        set
        {
            if ((this._beforeShowForm == value))
            {
                return;
            }
            if (((this._beforeShowForm == null) 
                        || (_beforeShowForm.Equals(value) != true)))
            {
                this._beforeShowForm = value;
                this.OnPropertyChanged("BeforeShowForm", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual EventType BeforeDataSubmit
    {
        get
        {
            return this._beforeDataSubmit;
        }
        set
        {
            if ((this._beforeDataSubmit == value))
            {
                return;
            }
            if (((this._beforeDataSubmit == null) 
                        || (_beforeDataSubmit.Equals(value) != true)))
            {
                this._beforeDataSubmit = value;
                this.OnPropertyChanged("BeforeDataSubmit", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual EventType BeforeCloseForm
    {
        get
        {
            return this._beforeCloseForm;
        }
        set
        {
            if ((this._beforeCloseForm == value))
            {
                return;
            }
            if (((this._beforeCloseForm == null) 
                        || (_beforeCloseForm.Equals(value) != true)))
            {
                this._beforeCloseForm = value;
                this.OnPropertyChanged("BeforeCloseForm", value);
            }
        }
    }
    
    /// <summary>
    /// Generic event handler - eventName must be
    /// specified.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("OnEvent", Order=5)]
    public virtual List<OnEventType> OnEvent
    {
        get
        {
            return this._onEvent;
        }
        set
        {
            if ((this._onEvent == value))
            {
                return;
            }
            if (((this._onEvent == null) 
                        || (_onEvent.Equals(value) != true)))
            {
                this._onEvent = value;
                this.OnPropertyChanged("OnEvent", value);
            }
        }
    }
    
    /// <summary>
    /// Optional Section that stays at the top of a
    /// form.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual SectionItemType Header
    {
        get
        {
            return this._header;
        }
        set
        {
            if ((this._header == value))
            {
                return;
            }
            if (((this._header == null) 
                        || (_header.Equals(value) != true)))
            {
                this._header = value;
                this.OnPropertyChanged("Header", value);
            }
        }
    }
    
    /// <summary>
    /// Main Section of form
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual SectionItemType Body
    {
        get
        {
            return this._body;
        }
        set
        {
            if ((this._body == value))
            {
                return;
            }
            if (((this._body == null) 
                        || (_body.Equals(value) != true)))
            {
                this._body = value;
                this.OnPropertyChanged("Body", value);
            }
        }
    }
    
    /// <summary>
    /// Optional Section that stays at the bottom of a
    /// form.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual SectionItemType Footer
    {
        get
        {
            return this._footer;
        }
        set
        {
            if ((this._footer == value))
            {
                return;
            }
            if (((this._footer == null) 
                        || (_footer.Equals(value) != true)))
            {
                this._footer = value;
                this.OnPropertyChanged("Footer", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=9)]
    public virtual RulesType Rules
    {
        get
        {
            return this._rules;
        }
        set
        {
            if ((this._rules == value))
            {
                return;
            }
            if (((this._rules == null) 
                        || (_rules.Equals(value) != true)))
            {
                this._rules = value;
                this.OnPropertyChanged("Rules", value);
            }
        }
    }
    
    /// <summary>
    /// A string identifier that is used to group multiple
    /// versions of a single form. The lineage is constant for all versions of a
    /// single kind of form. When appended to baseURI, it can be used to
    /// retrieve all versions of one particular form. Example:
    /// @lineage="Lung.Bmk.227"
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string lineage
    {
        get
        {
            return this._lineage;
        }
        set
        {
            if ((this._lineage == value))
            {
                return;
            }
            if (((this._lineage == null) 
                        || (_lineage.Equals(value) != true)))
            {
                this._lineage = value;
                this.OnPropertyChanged("lineage", value);
            }
        }
    }
    
    /// <summary>
    /// @version contains the version text for the current form.
    /// It is designed to be used in conjunction with @baseURI and @lineage.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    /// <summary>
    /// @versionPrev identifies the immediate previous version of
    /// the current FDF. The format is the same as version. The primary role of
    /// this optional attribute is to allow automated comparisons between a
    /// current FDF and the immediate previous FDF version. This is often
    /// helpful when deciding whether to adopt a newer version of an FDF.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string versionPrev
    {
        get
        {
            return this._versionPrev;
        }
        set
        {
            if ((this._versionPrev == value))
            {
                return;
            }
            if (((this._versionPrev == null) 
                        || (_versionPrev.Equals(value) != true)))
            {
                this._versionPrev = value;
                this.OnPropertyChanged("versionPrev", value);
            }
        }
    }
    
    /// <summary>
    /// The full URI that uniquely identifies the current form. It
    /// is created by concatenating @baseURI + lineage + version. Each of the
    /// components is separated by a single forward slash.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string fullURI
    {
        get
        {
            return this._fullURI;
        }
        set
        {
            if ((this._fullURI == value))
            {
                return;
            }
            if (((this._fullURI == null) 
                        || (_fullURI.Equals(value) != true)))
            {
                this._fullURI = value;
                this.OnPropertyChanged("fullURI", value);
            }
        }
    }
    
    /// <summary>
    /// @filename is the filename of the FDF when is saved to a
    /// file storage device (e.g., a disk or USB drive). The filename appears
    /// inside the FDF XML to help ensure the identity of the FDF content in
    /// case the saved filename (on a disk drive, etc.) has been changed for any
    /// reason.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string filename
    {
        get
        {
            return this._filename;
        }
        set
        {
            if ((this._filename == value))
            {
                return;
            }
            if (((this._filename == null) 
                        || (_filename.Equals(value) != true)))
            {
                this._filename = value;
                this.OnPropertyChanged("filename", value);
            }
        }
    }
    
    /// <summary>
    /// @formTitle is a human readable title for display when
    /// choosing forms. Added 4/27/16
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string formTitle
    {
        get
        {
            return this._formTitle;
        }
        set
        {
            if ((this._formTitle == value))
            {
                return;
            }
            if (((this._formTitle == null) 
                        || (_formTitle.Equals(value) != true)))
            {
                this._formTitle = value;
                this.OnPropertyChanged("formTitle", value);
            }
        }
    }
    
    /// <summary>
    /// @basedOnURI is a URI that identifies the SDC form that
    /// that the current FDF is based upon. In most cases, this should be a
    /// standard SDC form that is modified and/or extended by the current FDF.
    /// It’s best to avoid using prefixes like "http://" or "https://" because
    /// these can occasionally cause XML validation errors when used in a
    /// URI-typed field. The URI format should be the same format used in
    /// fullURI, which is patterned after the SDC web service API.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string basedOnURI
    {
        get
        {
            return this._basedOnURI;
        }
        set
        {
            if ((this._basedOnURI == value))
            {
                return;
            }
            if (((this._basedOnURI == null) 
                        || (_basedOnURI.Equals(value) != true)))
            {
                this._basedOnURI = value;
                this.OnPropertyChanged("basedOnURI", value);
            }
        }
    }
    
    /// <summary>
    /// @instanceID is unique string (e.g., a GUID) used to
    /// identify a unique instance of a form, such as a form used during a
    /// single patient encounter. The @instanceID is used to track saved form
    /// responses across time and across multiple episodes of editing by
    /// end-users. This string does not change for each edit session of a form
    /// or package instance. The @instanceID is required in an FDF-R; It is not
    /// allowed in an FDF.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string instanceID
    {
        get
        {
            return this._instanceID;
        }
        set
        {
            if ((this._instanceID == value))
            {
                return;
            }
            if (((this._instanceID == null) 
                        || (_instanceID.Equals(value) != true)))
            {
                this._instanceID = value;
                this.OnPropertyChanged("instanceID", value);
            }
        }
    }
    
    /// <summary>
    /// @instanceVersion Timestamp is used to identify a unique instance of a form.
    /// Used for tracking form responses across time and across multiple
    /// episodes of editing by end-users. This field must change for each edit
    /// session of a form instance. The instanceVersion is required in an FDF-R;
    /// It is not allowed in an FDF.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime instanceVersion
    {
        get
        {
            return this._instanceVersion;
        }
        set
        {
            if ((_instanceVersion.Equals(value) != true))
            {
                this._instanceVersion = value;
                this.OnPropertyChanged("instanceVersion", value);
            }
            _shouldSerializeinstanceVersion = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool instanceVersionSpecified
    {
        get
        {
            return this.instanceVersionFieldSpecified;
        }
        set
        {
            if ((instanceVersionFieldSpecified.Equals(value) != true))
            {
                this.instanceVersionFieldSpecified = value;
                this.OnPropertyChanged("instanceVersionSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Globally-unique URI used to identify a unique
    /// instance of a form's saved responses. It is used for tracking form
    /// responses across time and across multiple episodes of editing by
    /// end-users. The instanceVersionURI must change for each edit/save session
    /// of a form instance (defined by instanceVersion). The instanceVersionURI
    /// should be formatted similarly to the fullURI but must include values for
    /// instanceID and instanceVersion. The instanceVersion value is the release
    /// date/time for the new version, in W3C datetime format. An example
    /// instanceVersionURI is:
    /// instanceVersionURI="_baseURI=cap.org&_lineage=Lung.Bmk.227&_version=1.001.011.RC1
    /// &_instanceID=Abc1dee2fg987&_instanceVersion=2019-07-16T19:20:30+01:00&_docType=sdcFDFR
    /// " It is possible to create a shorter URI without the _baseURI, _lineage
    /// and _version parameters, as long as the URI is able to globally and
    /// uniquely identify and retrieve the instance and version of the FDF-R
    /// that was transmitted:
    /// instanceVersionURI="_instanceID=Abc1dee2fg987&_instanceVersion=2019-07-16T19:20:30+01:00&_docType=sdcFDFR"
    /// Note that the FR webservice endpoint URI is not provided in the
    /// instanceVersionURI. The FR endpoint and its security settings may be
    /// found in the SDC Package that contains the FDF-R, at
    /// SDCPackage/SubmissionRule. An FR may also be provided in a custom FDF
    /// Property if desired. The docType for instanceVersionURI is sdcFDFR. The
    /// specific order of components shown in the URI examples is not required,
    /// but the component order shown above is suggested for consistency and
    /// readability. The instanceVersionURI is not required, and is not allowed
    /// in an FDF.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string instanceVersionURI
    {
        get
        {
            return this._instanceVersionURI;
        }
        set
        {
            if ((this._instanceVersionURI == value))
            {
                return;
            }
            if (((this._instanceVersionURI == null) 
                        || (_instanceVersionURI.Equals(value) != true)))
            {
                this._instanceVersionURI = value;
                this.OnPropertyChanged("instanceVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique dateTime used to identify the immediate
    /// previous instance of an form instance. Used for tracking form responses
    /// across time and across multiple episodes of editing by end-users. This
    /// field must change for each edit session of a form instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime instanceVersionPrev
    {
        get
        {
            return this._instanceVersionPrev;
        }
        set
        {
            if ((_instanceVersionPrev.Equals(value) != true))
            {
                this._instanceVersionPrev = value;
                this.OnPropertyChanged("instanceVersionPrev", value);
            }
            _shouldSerializeinstanceVersionPrev = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool instanceVersionPrevSpecified
    {
        get
        {
            return this.instanceVersionPrevFieldSpecified;
        }
        set
        {
            if ((instanceVersionPrevFieldSpecified.Equals(value) != true))
            {
                this.instanceVersionPrevFieldSpecified = value;
                this.OnPropertyChanged("instanceVersionPrevSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Describes report fitness for clinical or other action
    /// inProcess: currently being edited, users should not rely on results
    /// preliminary: report is awaiting final review and approval approved:
    /// report is fit for clinical or other action; often synonymous with final
    /// cancelled: report/procedure has been aborted before issued retracted:
    /// report has been deemed unfit for clinical or other action
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual FormDesignTypeApprovalStatus approvalStatus
    {
        get
        {
            return this._approvalStatus;
        }
        set
        {
            if ((_approvalStatus.Equals(value) != true))
            {
                this._approvalStatus = value;
                this.OnPropertyChanged("approvalStatus", value);
            }
            _shouldSerializeapprovalStatus = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool approvalStatusSpecified
    {
        get
        {
            return this.approvalStatusFieldSpecified;
        }
        set
        {
            if ((approvalStatusFieldSpecified.Equals(value) != true))
            {
                this.approvalStatusFieldSpecified = value;
                this.OnPropertyChanged("approvalStatusSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// The extent to which a report contains all of the requested
    /// information pending: no information is yet available incomplete: some
    /// requested information is not yet available complete: all information is
    /// available in the requested report
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual FormDesignTypeCompletionStatus completionStatus
    {
        get
        {
            return this._completionStatus;
        }
        set
        {
            if ((_completionStatus.Equals(value) != true))
            {
                this._completionStatus = value;
                this.OnPropertyChanged("completionStatus", value);
            }
            _shouldSerializecompletionStatus = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool completionStatusSpecified
    {
        get
        {
            return this.completionStatusFieldSpecified;
        }
        set
        {
            if ((completionStatusFieldSpecified.Equals(value) != true))
            {
                this.completionStatusFieldSpecified = value;
                this.OnPropertyChanged("completionStatusSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool changedData
    {
        get
        {
            return this._changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                this._changedData = value;
                this.OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool changedDataSpecified
    {
        get
        {
            return this.changedDataFieldSpecified;
        }
        set
        {
            if ((changedDataFieldSpecified.Equals(value) != true))
            {
                this.changedDataFieldSpecified = value;
                this.OnPropertyChanged("changedDataSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool newData
    {
        get
        {
            return this._newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                this._newData = value;
                this.OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool newDataSpecified
    {
        get
        {
            return this.newDataFieldSpecified;
        }
        set
        {
            if ((newDataFieldSpecified.Equals(value) != true))
            {
                this.newDataFieldSpecified = value;
                this.OnPropertyChanged("newDataSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool BeforeLoadFormSpecified
    {
        get
        {
            return this._beforeLoadFormSpecified;
        }
        set
        {
            this._beforeLoadFormSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BeforeLoadDataSpecified
    {
        get
        {
            return this._beforeLoadDataSpecified;
        }
        set
        {
            this._beforeLoadDataSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BeforeShowFormSpecified
    {
        get
        {
            return this._beforeShowFormSpecified;
        }
        set
        {
            this._beforeShowFormSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BeforeDataSubmitSpecified
    {
        get
        {
            return this._beforeDataSubmitSpecified;
        }
        set
        {
            this._beforeDataSubmitSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BeforeCloseFormSpecified
    {
        get
        {
            return this._beforeCloseFormSpecified;
        }
        set
        {
            this._beforeCloseFormSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnEventSpecified
    {
        get
        {
            return this._onEventSpecified;
        }
        set
        {
            this._onEventSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool HeaderSpecified
    {
        get
        {
            return this._headerSpecified;
        }
        set
        {
            this._headerSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BodySpecified
    {
        get
        {
            return this._bodySpecified;
        }
        set
        {
            this._bodySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FooterSpecified
    {
        get
        {
            return this._footerSpecified;
        }
        set
        {
            this._footerSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RulesSpecified
    {
        get
        {
            return this._rulesSpecified;
        }
        set
        {
            this._rulesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool lineageSpecified
    {
        get
        {
            return this._lineageSpecified;
        }
        set
        {
            this._lineageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionPrevSpecified
    {
        get
        {
            return this._versionPrevSpecified;
        }
        set
        {
            this._versionPrevSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fullURISpecified
    {
        get
        {
            return this._fullURISpecified;
        }
        set
        {
            this._fullURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool filenameSpecified
    {
        get
        {
            return this._filenameSpecified;
        }
        set
        {
            this._filenameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formTitleSpecified
    {
        get
        {
            return this._formTitleSpecified;
        }
        set
        {
            this._formTitleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool basedOnURISpecified
    {
        get
        {
            return this._basedOnURISpecified;
        }
        set
        {
            this._basedOnURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceIDSpecified
    {
        get
        {
            return this._instanceIDSpecified;
        }
        set
        {
            this._instanceIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceVersionURISpecified
    {
        get
        {
            return this._instanceVersionURISpecified;
        }
        set
        {
            this._instanceVersionURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether OnEvent should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnEvent()
    {
        return OnEvent != null && OnEvent.Count > 0;
    }
    
    /// <summary>
    /// Test whether instanceVersion should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersion()
    {
        if (_shouldSerializeinstanceVersion)
        {
            return true;
        }
        return (_instanceVersion != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether instanceVersionPrev should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersionPrev()
    {
        if (_shouldSerializeinstanceVersionPrev)
        {
            return true;
        }
        return (_instanceVersionPrev != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
    
    /// <summary>
    /// Test whether approvalStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeapprovalStatus()
    {
        if (_shouldSerializeapprovalStatus)
        {
            return true;
        }
        return (_approvalStatus != default(FormDesignTypeApprovalStatus));
    }
    
    /// <summary>
    /// Test whether completionStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializecompletionStatus()
    {
        if (_shouldSerializecompletionStatus)
        {
            return true;
        }
        return (_completionStatus != default(FormDesignTypeCompletionStatus));
    }
    
    /// <summary>
    /// Test whether BeforeLoadForm should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBeforeLoadForm()
    {
        return (_beforeLoadForm != null);
    }
    
    /// <summary>
    /// Test whether BeforeLoadData should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBeforeLoadData()
    {
        return (_beforeLoadData != null);
    }
    
    /// <summary>
    /// Test whether BeforeShowForm should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBeforeShowForm()
    {
        return (_beforeShowForm != null);
    }
    
    /// <summary>
    /// Test whether BeforeDataSubmit should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBeforeDataSubmit()
    {
        return (_beforeDataSubmit != null);
    }
    
    /// <summary>
    /// Test whether BeforeCloseForm should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBeforeCloseForm()
    {
        return (_beforeCloseForm != null);
    }
    
    /// <summary>
    /// Test whether Header should be serialized
    /// </summary>
    public virtual bool ShouldSerializeHeader()
    {
        return (_header != null);
    }
    
    /// <summary>
    /// Test whether Body should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBody()
    {
        return (_body != null);
    }
    
    /// <summary>
    /// Test whether Footer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFooter()
    {
        return (_footer != null);
    }
    
    /// <summary>
    /// Test whether Rules should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRules()
    {
        return (_rules != null);
    }
    
    /// <summary>
    /// Test whether lineage should be serialized
    /// </summary>
    public virtual bool ShouldSerializelineage()
    {
        return !string.IsNullOrEmpty(lineage);
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether versionPrev should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionPrev()
    {
        return !string.IsNullOrEmpty(versionPrev);
    }
    
    /// <summary>
    /// Test whether fullURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializefullURI()
    {
        return !string.IsNullOrEmpty(fullURI);
    }
    
    /// <summary>
    /// Test whether filename should be serialized
    /// </summary>
    public virtual bool ShouldSerializefilename()
    {
        return !string.IsNullOrEmpty(filename);
    }
    
    /// <summary>
    /// Test whether formTitle should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformTitle()
    {
        return !string.IsNullOrEmpty(formTitle);
    }
    
    /// <summary>
    /// Test whether basedOnURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebasedOnURI()
    {
        return !string.IsNullOrEmpty(basedOnURI);
    }
    
    /// <summary>
    /// Test whether instanceID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceID()
    {
        return !string.IsNullOrEmpty(instanceID);
    }
    
    /// <summary>
    /// Test whether instanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersionURI()
    {
        return !string.IsNullOrEmpty(instanceVersionURI);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(OnEventType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class EventType : PredActionType
{
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(EventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OnEventType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredActionType : FuncBoolBaseType
{
    
    #region Private fields
    private bool _shouldSerializeboolOp;
    
    private bool _shouldSerializenot;
    
    private List<ExtensionBaseType> _items;
    
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _not;
    
    private PredEvalAttribValuesTypeBoolOp _boolOp;
    
    private bool _itemsSpecified;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    
    private bool _notSpecified;
    
    private bool _boolOpSpecified;
    #endregion
    
    /// <summary>
    /// PredActionType class constructor
    /// </summary>
    public PredActionType()
    {
        this._not = false;
        this._boolOp = PredEvalAttribValuesTypeBoolOp.AND;
    }
    
    [System.Xml.Serialization.XmlElementAttribute("AttributeEval", typeof(AttributeEvalActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("CallBoolFunction", typeof(CallFuncBoolActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Group", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("MultiSelections", typeof(MultiSelectionsActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ScriptBoolFunc", typeof(ScriptBoolFuncActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectMatchingListItems", typeof(RuleSelectMatchingListItemsType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionSets", typeof(SelectionSetsActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionTest", typeof(SelectionTestActionType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=2)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(PredEvalAttribValuesTypeBoolOp.AND)]
    public virtual PredEvalAttribValuesTypeBoolOp boolOp
    {
        get
        {
            return this._boolOp;
        }
        set
        {
            if ((_boolOp.Equals(value) != true))
            {
                this._boolOp = value;
                this.OnPropertyChanged("boolOp", value);
            }
            _shouldSerializeboolOp = true;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool boolOpSpecified
    {
        get
        {
            return this._boolOpSpecified;
        }
        set
        {
            this._boolOpSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether boolOp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeboolOp()
    {
        if (_shouldSerializeboolOp)
        {
            return true;
        }
        return (_boolOp != default(PredEvalAttribValuesTypeBoolOp));
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class AttributeEvalActionType : PredEvalAttribValuesType
{
    
    #region Private fields
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=1)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActionsType : ExtensionBaseType
{
    
    #region Private fields
    private ExtensionBaseType[] _items;
    
    private ItemsChoiceType1[] _itemsElementName;
    
    private bool _itemsSpecified;
    
    private bool _itemsElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Action", typeof(ActActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("AddCode", typeof(ActAddCodeType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("CallFunction", typeof(CallFuncActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ConditionalGroupAction", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Inject", typeof(ActInjectType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("PreviewReport", typeof(ActPreviewReportType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("RunCode", typeof(ScriptCodeAnyType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Save", typeof(ActSaveResponsesType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectMatchingListItems", typeof(RuleSelectMatchingListItemsType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SendMessage111", typeof(ActSendMessageType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SendReport", typeof(ActSendReportType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SetAttributeValue", typeof(ActSetAttributeType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SetAttributeValueScript", typeof(ActSetAttrValueScriptType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SetBoolAttributeValueCode", typeof(ActSetBoolAttributeValueCode), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ShowForm", typeof(ActShowFormType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ShowMessage", typeof(ActShowMessageType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ShowReport", typeof(ActShowReportType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ShowURL", typeof(CallFuncActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ValidateForm", typeof(ActValidateFormType), Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public virtual ExtensionBaseType[] Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemsChoiceType1[] ItemsElementName
    {
        get
        {
            return this._itemsElementName;
        }
        set
        {
            if ((this._itemsElementName == value))
            {
                return;
            }
            if (((this._itemsElementName == null) 
                        || (_itemsElementName.Equals(value) != true)))
            {
                this._itemsElementName = value;
                this.OnPropertyChanged("ItemsElementName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsElementNameSpecified
    {
        get
        {
            return this._itemsElementNameSpecified;
        }
        set
        {
            this._itemsElementNameSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Add a custom action, not defined in the basic SDC
/// Schemas.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActActionType : ExtensionBaseType
{
    
    #region Private fields
    private List<ExtensionBaseType> _items;
    
    private string _action;
    
    private bool _itemsSpecified;
    
    private bool _actionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ListItemParameterRef", typeof(ListItemParameterType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ParameterRef", typeof(ParameterItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ParameterValue", typeof(ParameterValueType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string action
    {
        get
        {
            return this._action;
        }
        set
        {
            if ((this._action == value))
            {
                return;
            }
            if (((this._action == null) 
                        || (_action.Equals(value) != true)))
            {
                this._action = value;
                this.OnPropertyChanged("action", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actionSpecified
    {
        get
        {
            return this._actionSpecified;
        }
        set
        {
            this._actionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether action should be serialized
    /// </summary>
    public virtual bool ShouldSerializeaction()
    {
        return !string.IsNullOrEmpty(action);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Parameters are named, uniquely identifiable, instances of form attributes (e.g., @selected).  They are fed into expressions, which are then used as part of a rule within the form.  Parameters can also be fed into URI expressions used inside a Lookup Endpoint, i.e., URIs that call web services to supply list items (e.g., a list of SNOMED-coded items) to a question.
/// 
/// Parameters using this construct are derived from other locations in the XML instance document, including user-entered Response values.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ListItemParameterType : ExtensionBaseType
{
    
    #region Private fields
    private List<string> _dataType;
    
    private string _paramName;
    
    private string _sourceQuestionName;
    
    private string _listItemAttribute;
    
    private bool _dataTypeSpecified;
    
    private bool _paramNameSpecified;
    
    private bool _sourceQuestionNameSpecified;
    
    private bool _listItemAttributeSpecified;
    #endregion
    
    /// <summary>
    /// ListItemParameterType class constructor
    /// </summary>
    public ListItemParameterType()
    {
        this._dataType = new string[] {
                "string"};
        this._listItemAttribute = "associatedValue";
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual List<string> dataType
    {
        get
        {
            return this._dataType;
        }
        set
        {
            if ((this._dataType == value))
            {
                return;
            }
            if (((this._dataType == null) 
                        || (_dataType.Equals(value) != true)))
            {
                this._dataType = value;
                this.OnPropertyChanged("dataType", value);
            }
        }
    }
    
    /// <summary>
    /// A locally useful name that describes the parameter
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string paramName
    {
        get
        {
            return this._paramName;
        }
        set
        {
            if ((this._paramName == value))
            {
                return;
            }
            if (((this._paramName == null) 
                        || (_paramName.Equals(value) != true)))
            {
                this._paramName = value;
                this.OnPropertyChanged("paramName", value);
            }
        }
    }
    
    /// <summary>
    /// The @name of a Question in the current form.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string sourceQuestionName
    {
        get
        {
            return this._sourceQuestionName;
        }
        set
        {
            if ((this._sourceQuestionName == value))
            {
                return;
            }
            if (((this._sourceQuestionName == null) 
                        || (_sourceQuestionName.Equals(value) != true)))
            {
                this._sourceQuestionName = value;
                this.OnPropertyChanged("sourceQuestionName", value);
            }
        }
    }
    
    /// <summary>
    /// The name of any XML attribute on a ListItem.  The property value is the parameter's value.  If the Question is multi-select, a list of attribute values is returned.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    [System.ComponentModel.DefaultValueAttribute("associatedValue")]
    public virtual string listItemAttribute
    {
        get
        {
            return this._listItemAttribute;
        }
        set
        {
            if ((this._listItemAttribute == value))
            {
                return;
            }
            if (((this._listItemAttribute == null) 
                        || (_listItemAttribute.Equals(value) != true)))
            {
                this._listItemAttribute = value;
                this.OnPropertyChanged("listItemAttribute", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool dataTypeSpecified
    {
        get
        {
            return this._dataTypeSpecified;
        }
        set
        {
            this._dataTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool paramNameSpecified
    {
        get
        {
            return this._paramNameSpecified;
        }
        set
        {
            this._paramNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool sourceQuestionNameSpecified
    {
        get
        {
            return this._sourceQuestionNameSpecified;
        }
        set
        {
            this._sourceQuestionNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool listItemAttributeSpecified
    {
        get
        {
            return this._listItemAttributeSpecified;
        }
        set
        {
            this._listItemAttributeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether dataType should be serialized
    /// </summary>
    public virtual bool ShouldSerializedataType()
    {
        return dataType != null && dataType.Count > 0;
    }
    
    /// <summary>
    /// Test whether paramName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparamName()
    {
        return !string.IsNullOrEmpty(paramName);
    }
    
    /// <summary>
    /// Test whether sourceQuestionName should be serialized
    /// </summary>
    public virtual bool ShouldSerializesourceQuestionName()
    {
        return !string.IsNullOrEmpty(sourceQuestionName);
    }
    
    /// <summary>
    /// Test whether listItemAttribute should be serialized
    /// </summary>
    public virtual bool ShouldSerializelistItemAttribute()
    {
        return !string.IsNullOrEmpty(listItemAttribute);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Parameters are named, uniquely identifiable, instances of form attributes (e.g., @selected).  They are fed into expressions, which are then used as part of a rule within the form.  Parameters can also be fed into URI expressions used inside a Lookup Endpoint, i.e., URIs that call web services to supply list items (e.g., a list of SNOMED-coded items) to a question.
/// 
/// Parameters using this construct are derived from other locations in the XML instance document, including user-entered Response values.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ParameterItemType : ExtensionBaseType
{
    
    #region Private fields
    private List<string> _dataType;
    
    private string _paramName;
    
    private string _sourceItemName;
    
    private string _sourceItemAttribute;
    
    private bool _dataTypeSpecified;
    
    private bool _paramNameSpecified;
    
    private bool _sourceItemNameSpecified;
    
    private bool _sourceItemAttributeSpecified;
    #endregion
    
    /// <summary>
    /// ParameterItemType class constructor
    /// </summary>
    public ParameterItemType()
    {
        this._dataType = new string[] {
                "string"};
        this._sourceItemAttribute = "val";
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual List<string> dataType
    {
        get
        {
            return this._dataType;
        }
        set
        {
            if ((this._dataType == value))
            {
                return;
            }
            if (((this._dataType == null) 
                        || (_dataType.Equals(value) != true)))
            {
                this._dataType = value;
                this.OnPropertyChanged("dataType", value);
            }
        }
    }
    
    /// <summary>
    /// A locally useful name that describes the parameter
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string paramName
    {
        get
        {
            return this._paramName;
        }
        set
        {
            if ((this._paramName == value))
            {
                return;
            }
            if (((this._paramName == null) 
                        || (_paramName.Equals(value) != true)))
            {
                this._paramName = value;
                this.OnPropertyChanged("paramName", value);
            }
        }
    }
    
    /// <summary>
    /// The @name of an item in the current form that holds the @itemAttribute value that will become the parameter value.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string sourceItemName
    {
        get
        {
            return this._sourceItemName;
        }
        set
        {
            if ((this._sourceItemName == value))
            {
                return;
            }
            if (((this._sourceItemName == null) 
                        || (_sourceItemName.Equals(value) != true)))
            {
                this._sourceItemName = value;
                this.OnPropertyChanged("sourceItemName", value);
            }
        }
    }
    
    /// <summary>
    /// The name of any XML attribute on a named element.  The property value is the parameter's value.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    [System.ComponentModel.DefaultValueAttribute("val")]
    public virtual string sourceItemAttribute
    {
        get
        {
            return this._sourceItemAttribute;
        }
        set
        {
            if ((this._sourceItemAttribute == value))
            {
                return;
            }
            if (((this._sourceItemAttribute == null) 
                        || (_sourceItemAttribute.Equals(value) != true)))
            {
                this._sourceItemAttribute = value;
                this.OnPropertyChanged("sourceItemAttribute", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool dataTypeSpecified
    {
        get
        {
            return this._dataTypeSpecified;
        }
        set
        {
            this._dataTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool paramNameSpecified
    {
        get
        {
            return this._paramNameSpecified;
        }
        set
        {
            this._paramNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool sourceItemNameSpecified
    {
        get
        {
            return this._sourceItemNameSpecified;
        }
        set
        {
            this._sourceItemNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool sourceItemAttributeSpecified
    {
        get
        {
            return this._sourceItemAttributeSpecified;
        }
        set
        {
            this._sourceItemAttributeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether dataType should be serialized
    /// </summary>
    public virtual bool ShouldSerializedataType()
    {
        return dataType != null && dataType.Count > 0;
    }
    
    /// <summary>
    /// Test whether paramName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparamName()
    {
        return !string.IsNullOrEmpty(paramName);
    }
    
    /// <summary>
    /// Test whether sourceItemName should be serialized
    /// </summary>
    public virtual bool ShouldSerializesourceItemName()
    {
        return !string.IsNullOrEmpty(sourceItemName);
    }
    
    /// <summary>
    /// Test whether sourceItemAttribute should be serialized
    /// </summary>
    public virtual bool ShouldSerializesourceItemAttribute()
    {
        return !string.IsNullOrEmpty(sourceItemAttribute);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Add all or part of a coding section to the designated target
/// site.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActAddCodeType : ItemNameType
{
    
    #region Private fields
    private CodingType _code;
    
    private bool _codeSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual CodingType Code
    {
        get
        {
            return this._code;
        }
        set
        {
            if ((this._code == value))
            {
                return;
            }
            if (((this._code == null) 
                        || (_code.Equals(value) != true)))
            {
                this._code = value;
                this.OnPropertyChanged("Code", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool CodeSpecified
    {
        get
        {
            return this._codeSpecified;
        }
        set
        {
            this._codeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Code should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCode()
    {
        return (_code != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type represents any type of coding, terminology, classification, keyword, or local value system that may be applied to any displayable item in a
/// FormDesign template.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CodingType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _code;
    
    private DataTypes_SType _typedValue;
    
    private RichTextType _codeText;
    
    private CodeMatchType _codeMatch;
    
    private CodeSystemType _codeSystem;
    
    private anyURI_Stype _codeURI;
    
    private UnitsType _units;
    
    private bool _codeSpecified;
    
    private bool _typedValueSpecified;
    
    private bool _codeTextSpecified;
    
    private bool _codeMatchSpecified;
    
    private bool _codeSystemSpecified;
    
    private bool _codeURISpecified;
    
    private bool _unitsSpecified;
    #endregion
    
    /// <summary>
    /// A standard code, or a local value from a custom coding system, that can be used to consistently identify, or provide a
    /// standard value for, the coded item.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public virtual string_Stype Code
    {
        get
        {
            return this._code;
        }
        set
        {
            if ((this._code == value))
            {
                return;
            }
            if (((this._code == null) 
                        || (_code.Equals(value) != true)))
            {
                this._code = value;
                this.OnPropertyChanged("Code", value);
            }
        }
    }
    
    /// <summary>
    /// Data type enumeration derived from W3C XML Schema. If
    /// the code is derived from a local value system (e.g., numbered answer
    /// choices such as clock positions, tumor grades, or clinical scoring
    /// systems), then the data type of the local value may be specified
    /// here. This may be important if the code value will need to be
    /// manipulated mathematically.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual DataTypes_SType TypedValue
    {
        get
        {
            return this._typedValue;
        }
        set
        {
            if ((this._typedValue == value))
            {
                return;
            }
            if (((this._typedValue == null) 
                        || (_typedValue.Equals(value) != true)))
            {
                this._typedValue = value;
                this.OnPropertyChanged("TypedValue", value);
            }
        }
    }
    
    /// <summary>
    /// The human readable text that accompanies the assigned code and represents the code's precise meaning (semantics) or
    /// usage.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual RichTextType CodeText
    {
        get
        {
            return this._codeText;
        }
        set
        {
            if ((this._codeText == value))
            {
                return;
            }
            if (((this._codeText == null) 
                        || (_codeText.Equals(value) != true)))
            {
                this._codeText = value;
                this.OnPropertyChanged("CodeText", value);
            }
        }
    }
    
    /// <summary>
    /// Degree of match between the mapped item and the assigned code - @codeMatchType holds an entry from an enumerated
    /// list of match types.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual CodeMatchType CodeMatch
    {
        get
        {
            return this._codeMatch;
        }
        set
        {
            if ((this._codeMatch == value))
            {
                return;
            }
            if (((this._codeMatch == null) 
                        || (_codeMatch.Equals(value) != true)))
            {
                this._codeMatch = value;
                this.OnPropertyChanged("CodeMatch", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual CodeSystemType CodeSystem
    {
        get
        {
            return this._codeSystem;
        }
        set
        {
            if ((this._codeSystem == value))
            {
                return;
            }
            if (((this._codeSystem == null) 
                        || (_codeSystem.Equals(value) != true)))
            {
                this._codeSystem = value;
                this.OnPropertyChanged("CodeSystem", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Web resource that provides information about the code
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual anyURI_Stype CodeURI
    {
        get
        {
            return this._codeURI;
        }
        set
        {
            if ((this._codeURI == value))
            {
                return;
            }
            if (((this._codeURI == null) 
                        || (_codeURI.Equals(value) != true)))
            {
                this._codeURI = value;
                this.OnPropertyChanged("CodeURI", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual UnitsType Units
    {
        get
        {
            return this._units;
        }
        set
        {
            if ((this._units == value))
            {
                return;
            }
            if (((this._units == null) 
                        || (_units.Equals(value) != true)))
            {
                this._units = value;
                this.OnPropertyChanged("Units", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool CodeSpecified
    {
        get
        {
            return this._codeSpecified;
        }
        set
        {
            this._codeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TypedValueSpecified
    {
        get
        {
            return this._typedValueSpecified;
        }
        set
        {
            this._typedValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodeTextSpecified
    {
        get
        {
            return this._codeTextSpecified;
        }
        set
        {
            this._codeTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodeMatchSpecified
    {
        get
        {
            return this._codeMatchSpecified;
        }
        set
        {
            this._codeMatchSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodeSystemSpecified
    {
        get
        {
            return this._codeSystemSpecified;
        }
        set
        {
            this._codeSystemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodeURISpecified
    {
        get
        {
            return this._codeURISpecified;
        }
        set
        {
            this._codeURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UnitsSpecified
    {
        get
        {
            return this._unitsSpecified;
        }
        set
        {
            this._unitsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Code should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCode()
    {
        return (_code != null);
    }
    
    /// <summary>
    /// Test whether TypedValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTypedValue()
    {
        return (_typedValue != null);
    }
    
    /// <summary>
    /// Test whether CodeText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeText()
    {
        return (_codeText != null);
    }
    
    /// <summary>
    /// Test whether CodeMatch should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeMatch()
    {
        return (_codeMatch != null);
    }
    
    /// <summary>
    /// Test whether CodeSystem should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeSystem()
    {
        return (_codeSystem != null);
    }
    
    /// <summary>
    /// Test whether CodeURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeURI()
    {
        return (_codeURI != null);
    }
    
    /// <summary>
    /// Test whether Units should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUnits()
    {
        return (_units != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CodeMatchType : BaseType
{
    
    #region Private fields
    private bool _shouldSerializecodeMatchEnum;
    
    private string_Stype _codingMatchComment;
    
    private CodeMatchTypeCodeMatchEnum _codeMatchEnum;
    
    private bool _codingMatchCommentSpecified;
    
    private bool _codeMatchEnumSpecified;
    #endregion
    
    /// <summary>
    /// CodeMatchType class constructor
    /// </summary>
    public CodeMatchType()
    {
        this._codeMatchEnum = CodeMatchTypeCodeMatchEnum.ExactCodeMatch;
    }
    
    /// <summary>
    /// Comment about the degree of match between the mapped item and the assigned
    /// code.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype CodingMatchComment
    {
        get
        {
            return this._codingMatchComment;
        }
        set
        {
            if ((this._codingMatchComment == value))
            {
                return;
            }
            if (((this._codingMatchComment == null) 
                        || (_codingMatchComment.Equals(value) != true)))
            {
                this._codingMatchComment = value;
                this.OnPropertyChanged("CodingMatchComment", value);
            }
        }
    }
    
    /// <summary>
    /// The degree of match between the coded item and the assigned code.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(CodeMatchTypeCodeMatchEnum.ExactCodeMatch)]
    public virtual CodeMatchTypeCodeMatchEnum codeMatchEnum
    {
        get
        {
            return this._codeMatchEnum;
        }
        set
        {
            if ((_codeMatchEnum.Equals(value) != true))
            {
                this._codeMatchEnum = value;
                this.OnPropertyChanged("codeMatchEnum", value);
            }
            _shouldSerializecodeMatchEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool CodingMatchCommentSpecified
    {
        get
        {
            return this._codingMatchCommentSpecified;
        }
        set
        {
            this._codingMatchCommentSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool codeMatchEnumSpecified
    {
        get
        {
            return this._codeMatchEnumSpecified;
        }
        set
        {
            this._codeMatchEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether codeMatchEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializecodeMatchEnum()
    {
        if (_shouldSerializecodeMatchEnum)
        {
            return true;
        }
        return (_codeMatchEnum != default(CodeMatchTypeCodeMatchEnum));
    }
    
    /// <summary>
    /// Test whether CodingMatchComment should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodingMatchComment()
    {
        return (_codingMatchComment != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum CodeMatchTypeCodeMatchEnum
{
    
    [System.Xml.Serialization.XmlEnumAttribute("Exact Code Match")]
    ExactCodeMatch,
    
    [System.Xml.Serialization.XmlEnumAttribute("Close Code Match")]
    CloseCodeMatch,
    
    [System.Xml.Serialization.XmlEnumAttribute("Code Broader Than Item")]
    CodeBroaderThanItem,
    
    [System.Xml.Serialization.XmlEnumAttribute("Code Narrower Than Item")]
    CodeNarrowerThanItem,
    
    [System.Xml.Serialization.XmlEnumAttribute("Item Implements Data Element Exactly")]
    ItemImplementsDataElementExactly,
    
    [System.Xml.Serialization.XmlEnumAttribute("Item Derived From Data Element")]
    ItemDerivedFromDataElement,
    
    [System.Xml.Serialization.XmlEnumAttribute("Item Related To Data Element")]
    ItemRelatedToDataElement,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type represents information about the coding system used in CodingType. It may refer to any type of coding, terminology, classification, keyword, or local value system.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CodeSystemType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _codeSystemName;
    
    private dateTime_Stype _releaseDate;
    
    private string_Stype _version;
    
    private string_Stype _oID;
    
    private anyURI_Stype _codeSystemURI;
    
    private bool _codeSystemNameSpecified;
    
    private bool _releaseDateSpecified;
    
    private bool _versionSpecified;
    
    private bool _oIDSpecified;
    
    private bool _codeSystemURISpecified;
    #endregion
    
    /// <summary>
    /// The name of the coding system, as recommended by the
    /// coding system curators, or as recommended by the agency that creates
    /// standards for the code map in use.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype CodeSystemName
    {
        get
        {
            return this._codeSystemName;
        }
        set
        {
            if ((this._codeSystemName == value))
            {
                return;
            }
            if (((this._codeSystemName == null) 
                        || (_codeSystemName.Equals(value) != true)))
            {
                this._codeSystemName = value;
                this.OnPropertyChanged("CodeSystemName", value);
            }
        }
    }
    
    /// <summary>
    /// The day that the selected version of the coding system was released for general use by the coding system curators.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual dateTime_Stype ReleaseDate
    {
        get
        {
            return this._releaseDate;
        }
        set
        {
            if ((this._releaseDate == value))
            {
                return;
            }
            if (((this._releaseDate == null) 
                        || (_releaseDate.Equals(value) != true)))
            {
                this._releaseDate = value;
                this.OnPropertyChanged("ReleaseDate", value);
            }
        }
    }
    
    /// <summary>
    /// Version of the coding system, using the version format defined by the coding system
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype Version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("Version", value);
            }
        }
    }
    
    /// <summary>
    /// The ISO object identifier (OID) for the coding system, as found at the HL7 OID Registry: https://www.hl7.org/oid/index.cfm
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype OID
    {
        get
        {
            return this._oID;
        }
        set
        {
            if ((this._oID == value))
            {
                return;
            }
            if (((this._oID == null) 
                        || (_oID.Equals(value) != true)))
            {
                this._oID = value;
                this.OnPropertyChanged("OID", value);
            }
        }
    }
    
    /// <summary>
    /// Web resource that uniquely identifies the coding system
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual anyURI_Stype CodeSystemURI
    {
        get
        {
            return this._codeSystemURI;
        }
        set
        {
            if ((this._codeSystemURI == value))
            {
                return;
            }
            if (((this._codeSystemURI == null) 
                        || (_codeSystemURI.Equals(value) != true)))
            {
                this._codeSystemURI = value;
                this.OnPropertyChanged("CodeSystemURI", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool CodeSystemNameSpecified
    {
        get
        {
            return this._codeSystemNameSpecified;
        }
        set
        {
            this._codeSystemNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ReleaseDateSpecified
    {
        get
        {
            return this._releaseDateSpecified;
        }
        set
        {
            this._releaseDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool VersionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OIDSpecified
    {
        get
        {
            return this._oIDSpecified;
        }
        set
        {
            this._oIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodeSystemURISpecified
    {
        get
        {
            return this._codeSystemURISpecified;
        }
        set
        {
            this._codeSystemURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether CodeSystemName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeSystemName()
    {
        return (_codeSystemName != null);
    }
    
    /// <summary>
    /// Test whether ReleaseDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReleaseDate()
    {
        return (_releaseDate != null);
    }
    
    /// <summary>
    /// Test whether Version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersion()
    {
        return (_version != null);
    }
    
    /// <summary>
    /// Test whether OID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOID()
    {
        return (_oID != null);
    }
    
    /// <summary>
    /// Test whether CodeSystemURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodeSystemURI()
    {
        return (_codeSystemURI != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(dateTime_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dateTime_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private bool _shouldSerializeval;
    
    private System.DateTime _val;
    
    private bool valFieldSpecified;
    
    private dtQuantEnum _quantEnum;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// dateTime_Stype class constructor
    /// </summary>
    public dateTime_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dateTime_DEtype : dateTime_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private bool _shouldSerializemaxExclusive;
    
    private bool _shouldSerializeminExclusive;
    
    private bool _shouldSerializemaxInclusive;
    
    private bool _shouldSerializeminInclusive;
    
    private System.DateTime _minInclusive;
    
    private bool minInclusiveFieldSpecified;
    
    private System.DateTime _maxInclusive;
    
    private bool maxInclusiveFieldSpecified;
    
    private System.DateTime _minExclusive;
    
    private bool minExclusiveFieldSpecified;
    
    private System.DateTime _maxExclusive;
    
    private bool maxExclusiveFieldSpecified;
    
    private string _pattern;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _patternSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// dateTime_DEtype class constructor
    /// </summary>
    public dateTime_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((_minInclusive.Equals(value) != true))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
            _shouldSerializeminInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minInclusiveSpecified
    {
        get
        {
            return this.minInclusiveFieldSpecified;
        }
        set
        {
            if ((minInclusiveFieldSpecified.Equals(value) != true))
            {
                this.minInclusiveFieldSpecified = value;
                this.OnPropertyChanged("minInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((_maxInclusive.Equals(value) != true))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
            _shouldSerializemaxInclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxInclusiveSpecified
    {
        get
        {
            return this.maxInclusiveFieldSpecified;
        }
        set
        {
            if ((maxInclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxInclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxInclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((_minExclusive.Equals(value) != true))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
            _shouldSerializeminExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minExclusiveSpecified
    {
        get
        {
            return this.minExclusiveFieldSpecified;
        }
        set
        {
            if ((minExclusiveFieldSpecified.Equals(value) != true))
            {
                this.minExclusiveFieldSpecified = value;
                this.OnPropertyChanged("minExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((_maxExclusive.Equals(value) != true))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
            _shouldSerializemaxExclusive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxExclusiveSpecified
    {
        get
        {
            return this.maxExclusiveFieldSpecified;
        }
        set
        {
            if ((maxExclusiveFieldSpecified.Equals(value) != true))
            {
                this.maxExclusiveFieldSpecified = value;
                this.OnPropertyChanged("maxExclusiveSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string pattern
    {
        get
        {
            return this._pattern;
        }
        set
        {
            if ((this._pattern == value))
            {
                return;
            }
            if (((this._pattern == null) 
                        || (_pattern.Equals(value) != true)))
            {
                this._pattern = value;
                this.OnPropertyChanged("pattern", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool patternSpecified
    {
        get
        {
            return this._patternSpecified;
        }
        set
        {
            this._patternSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        if (_shouldSerializeminInclusive)
        {
            return true;
        }
        return (_minInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        if (_shouldSerializemaxInclusive)
        {
            return true;
        }
        return (_maxInclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        if (_shouldSerializeminExclusive)
        {
            return true;
        }
        return (_minExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        if (_shouldSerializemaxExclusive)
        {
            return true;
        }
        return (_maxExclusive != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether pattern should be serialized
    /// </summary>
    public virtual bool ShouldSerializepattern()
    {
        return !string.IsNullOrEmpty(pattern);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Moved from SDCFormDesign
/// The type is a standard way to point to a named item anywhere in a FormDesign template.  A named item is any element that has the @name attribute set to a unique value.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActAddCodeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ItemNameAttributeType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ItemNameType : ExtensionBaseType
{
    
    #region Private fields
    private string _itemName;
    
    private bool _itemNameSpecified;
    #endregion
    
    /// <summary>
    /// The @name attribute of the referenced element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string itemName
    {
        get
        {
            return this._itemName;
        }
        set
        {
            if ((this._itemName == value))
            {
                return;
            }
            if (((this._itemName == null) 
                        || (_itemName.Equals(value) != true)))
            {
                this._itemName = value;
                this.OnPropertyChanged("itemName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool itemNameSpecified
    {
        get
        {
            return this._itemNameSpecified;
        }
        set
        {
            this._itemNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether itemName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeitemName()
    {
        return !string.IsNullOrEmpty(itemName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Moved from SDCFormDesign
/// The type is a standard way to point to a named item anywhere in a FormDesign template.  A named item is any element that has the @name attribute set to a unique value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ItemNameAttributeType : ItemNameType
{
    
    #region Private fields
    private string _attributeName;
    
    private bool _attributeNameSpecified;
    #endregion
    
    /// <summary>
    /// ItemNameAttributeType class constructor
    /// </summary>
    public ItemNameAttributeType()
    {
        this._attributeName = "val";
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    [System.ComponentModel.DefaultValueAttribute("val")]
    public virtual string attributeName
    {
        get
        {
            return this._attributeName;
        }
        set
        {
            if ((this._attributeName == value))
            {
                return;
            }
            if (((this._attributeName == null) 
                        || (_attributeName.Equals(value) != true)))
            {
                this._attributeName = value;
                this.OnPropertyChanged("attributeName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool attributeNameSpecified
    {
        get
        {
            return this._attributeNameSpecified;
        }
        set
        {
            this._attributeNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether attributeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeattributeName()
    {
        return !string.IsNullOrEmpty(attributeName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string
/// value.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupEndPointType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CallFuncActionType : CallFuncType
{
    
    #region Private fields
    private PredActionType _conditionalActions;
    
    private bool _conditionalActionsSpecified;
    #endregion
    
    /// <summary>
    /// Actions to take, usually based on the return @val
    /// value of the function. Condiitons may be specified for each action.
    /// Conditions may be combined by Boolean operators and nested to any
    /// level.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual PredActionType ConditionalActions
    {
        get
        {
            return this._conditionalActions;
        }
        set
        {
            if ((this._conditionalActions == value))
            {
                return;
            }
            if (((this._conditionalActions == null) 
                        || (_conditionalActions.Equals(value) != true)))
            {
                this._conditionalActions = value;
                this.OnPropertyChanged("ConditionalActions", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ConditionalActionsSpecified
    {
        get
        {
            return this._conditionalActionsSpecified;
        }
        set
        {
            this._conditionalActionsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ConditionalActions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeConditionalActions()
    {
        return (_conditionalActions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string value.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupEndPointType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class CallFuncType : CallFuncBaseType
{
    
    #region Private fields
    private List<string> _dataType;
    
    private bool _dataTypeSpecified;
    #endregion
    
    /// <summary>
    /// CallFuncType class constructor
    /// </summary>
    public CallFuncType()
    {
        this._dataType = new string[] {
                "string"};
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual List<string> dataType
    {
        get
        {
            return this._dataType;
        }
        set
        {
            if ((this._dataType == value))
            {
                return;
            }
            if (((this._dataType == null) 
                        || (_dataType.Equals(value) != true)))
            {
                this._dataType = value;
                this.OnPropertyChanged("dataType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool dataTypeSpecified
    {
        get
        {
            return this._dataTypeSpecified;
        }
        set
        {
            this._dataTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether dataType should be serialized
    /// </summary>
    public virtual bool ShouldSerializedataType()
    {
        return dataType != null && dataType.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string value.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(LookupEndPointType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class CallFuncBaseType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeItemElementName;
    
    private bool _shouldSerializeallowNull;
    
    private bool _shouldSerializereturnList;
    
    private anyURI_Stype _item;
    
    private ItemChoiceType1 _itemElementName;
    
    private RichTextType _security;
    
    private List<ExtensionBaseType> _items;
    
    private bool _returnList;
    
    private string _listDelimiter;
    
    private string _objectTypeName;
    
    private string _objectFormat;
    
    private bool _allowNull;
    
    private string _returnVal;
    
    private bool _itemSpecified;
    
    private bool _itemElementNameSpecified;
    
    private bool _securitySpecified;
    
    private bool _itemsSpecified;
    
    private bool _returnListSpecified;
    
    private bool _listDelimiterSpecified;
    
    private bool _objectTypeNameSpecified;
    
    private bool _objectFormatSpecified;
    
    private bool _allowNullSpecified;
    
    private bool _returnValSpecified;
    #endregion
    
    /// <summary>
    /// CallFuncBaseType class constructor
    /// </summary>
    public CallFuncBaseType()
    {
        this._returnList = false;
        this._listDelimiter = "|";
        this._allowNull = true;
    }
    
    [System.Xml.Serialization.XmlElementAttribute("FunctionURI", typeof(anyURI_Stype), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("LocalFunctionName", typeof(anyURI_Stype), Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public virtual anyURI_Stype Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemChoiceType1 ItemElementName
    {
        get
        {
            return this._itemElementName;
        }
        set
        {
            if ((_itemElementName.Equals(value) != true))
            {
                this._itemElementName = value;
                this.OnPropertyChanged("ItemElementName", value);
            }
            _shouldSerializeItemElementName = true;
        }
    }
    
    /// <summary>
    /// Information about securly accessing the web service.  More detailed service patterns may be required.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual RichTextType Security
    {
        get
        {
            return this._security;
        }
        set
        {
            if ((this._security == value))
            {
                return;
            }
            if (((this._security == null) 
                        || (_security.Equals(value) != true)))
            {
                this._security = value;
                this.OnPropertyChanged("Security", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ListItemParameterRef", typeof(ListItemParameterType), Order=3)]
    [System.Xml.Serialization.XmlElementAttribute("ParameterRef", typeof(ParameterItemType), Order=3)]
    [System.Xml.Serialization.XmlElementAttribute("ParameterValue", typeof(ParameterValueType), Order=3)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool returnList
    {
        get
        {
            return this._returnList;
        }
        set
        {
            if ((_returnList.Equals(value) != true))
            {
                this._returnList = value;
                this.OnPropertyChanged("returnList", value);
            }
            _shouldSerializereturnList = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("|")]
    public virtual string listDelimiter
    {
        get
        {
            return this._listDelimiter;
        }
        set
        {
            if ((this._listDelimiter == value))
            {
                return;
            }
            if (((this._listDelimiter == null) 
                        || (_listDelimiter.Equals(value) != true)))
            {
                this._listDelimiter = value;
                this.OnPropertyChanged("listDelimiter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectTypeName
    {
        get
        {
            return this._objectTypeName;
        }
        set
        {
            if ((this._objectTypeName == value))
            {
                return;
            }
            if (((this._objectTypeName == null) 
                        || (_objectTypeName.Equals(value) != true)))
            {
                this._objectTypeName = value;
                this.OnPropertyChanged("objectTypeName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectFormat
    {
        get
        {
            return this._objectFormat;
        }
        set
        {
            if ((this._objectFormat == value))
            {
                return;
            }
            if (((this._objectFormat == null) 
                        || (_objectFormat.Equals(value) != true)))
            {
                this._objectFormat = value;
                this.OnPropertyChanged("objectFormat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool allowNull
    {
        get
        {
            return this._allowNull;
        }
        set
        {
            if ((_allowNull.Equals(value) != true))
            {
                this._allowNull = value;
                this.OnPropertyChanged("allowNull", value);
            }
            _shouldSerializeallowNull = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string returnVal
    {
        get
        {
            return this._returnVal;
        }
        set
        {
            if ((this._returnVal == value))
            {
                return;
            }
            if (((this._returnVal == null) 
                        || (_returnVal.Equals(value) != true)))
            {
                this._returnVal = value;
                this.OnPropertyChanged("returnVal", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemElementNameSpecified
    {
        get
        {
            return this._itemElementNameSpecified;
        }
        set
        {
            this._itemElementNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SecuritySpecified
    {
        get
        {
            return this._securitySpecified;
        }
        set
        {
            this._securitySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool returnListSpecified
    {
        get
        {
            return this._returnListSpecified;
        }
        set
        {
            this._returnListSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool listDelimiterSpecified
    {
        get
        {
            return this._listDelimiterSpecified;
        }
        set
        {
            this._listDelimiterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool objectTypeNameSpecified
    {
        get
        {
            return this._objectTypeNameSpecified;
        }
        set
        {
            this._objectTypeNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool objectFormatSpecified
    {
        get
        {
            return this._objectFormatSpecified;
        }
        set
        {
            this._objectFormatSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowNullSpecified
    {
        get
        {
            return this._allowNullSpecified;
        }
        set
        {
            this._allowNullSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool returnValSpecified
    {
        get
        {
            return this._returnValSpecified;
        }
        set
        {
            this._returnValSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether returnList should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnList()
    {
        if (_shouldSerializereturnList)
        {
            return true;
        }
        return (_returnList != default(bool));
    }
    
    /// <summary>
    /// Test whether allowNull should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowNull()
    {
        if (_shouldSerializeallowNull)
        {
            return true;
        }
        return (_allowNull != default(bool));
    }
    
    /// <summary>
    /// Test whether ItemElementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItemElementName()
    {
        if (_shouldSerializeItemElementName)
        {
            return true;
        }
        return (_itemElementName != default(ItemChoiceType1));
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
    
    /// <summary>
    /// Test whether Security should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSecurity()
    {
        return (_security != null);
    }
    
    /// <summary>
    /// Test whether listDelimiter should be serialized
    /// </summary>
    public virtual bool ShouldSerializelistDelimiter()
    {
        return !string.IsNullOrEmpty(listDelimiter);
    }
    
    /// <summary>
    /// Test whether objectTypeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectTypeName()
    {
        return !string.IsNullOrEmpty(objectTypeName);
    }
    
    /// <summary>
    /// Test whether objectFormat should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectFormat()
    {
        return !string.IsNullOrEmpty(objectFormat);
    }
    
    /// <summary>
    /// Test whether returnVal should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnVal()
    {
        return !string.IsNullOrEmpty(returnVal);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemChoiceType1
{
    
    FunctionURI,
    
    LocalFunctionName,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string value.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CallFuncBoolActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CallFuncBoolType : CallFuncBaseType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private string _validationMessage;
    
    private bool _notSpecified;
    
    private bool _validationMessageSpecified;
    #endregion
    
    /// <summary>
    /// CallFuncBoolType class constructor
    /// </summary>
    public CallFuncBoolType()
    {
        this._not = false;
    }
    
    /// <summary>
    /// If @not="true" then the logical value of the conditions of the parent element is negated; true becomes false and false becomes true.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    /// <summary>
    /// Optional message that appears when the rule evaluates to true
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string validationMessage
    {
        get
        {
            return this._validationMessage;
        }
        set
        {
            if ((this._validationMessage == value))
            {
                return;
            }
            if (((this._validationMessage == null) 
                        || (_validationMessage.Equals(value) != true)))
            {
                this._validationMessage = value;
                this.OnPropertyChanged("validationMessage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validationMessageSpecified
    {
        get
        {
            return this._validationMessageSpecified;
        }
        set
        {
            this._validationMessageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether validationMessage should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidationMessage()
    {
        return !string.IsNullOrEmpty(validationMessage);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string
/// value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CallFuncBoolActionType : CallFuncBoolType
{
    
    #region Private fields
    private ExtensionBaseType[] _items1;
    
    private Items1ChoiceType[] _items1ElementName;
    
    private bool _items1Specified;
    
    private bool _items1ElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Actions", typeof(ActionsType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ConditionalActions", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Else", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
    public virtual ExtensionBaseType[] Items1
    {
        get
        {
            return this._items1;
        }
        set
        {
            if ((this._items1 == value))
            {
                return;
            }
            if (((this._items1 == null) 
                        || (_items1.Equals(value) != true)))
            {
                this._items1 = value;
                this.OnPropertyChanged("Items1", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Items1ElementName", Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual Items1ChoiceType[] Items1ElementName
    {
        get
        {
            return this._items1ElementName;
        }
        set
        {
            if ((this._items1ElementName == value))
            {
                return;
            }
            if (((this._items1ElementName == null) 
                        || (_items1ElementName.Equals(value) != true)))
            {
                this._items1ElementName = value;
                this.OnPropertyChanged("Items1ElementName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool Items1Specified
    {
        get
        {
            return this._items1Specified;
        }
        set
        {
            this._items1Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool Items1ElementNameSpecified
    {
        get
        {
            return this._items1ElementNameSpecified;
        }
        set
        {
            this._items1ElementNameSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum Items1ChoiceType
{
    
    Actions,
    
    ConditionalActions,
    
    Else,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// LookupEndPointType represents list items that are derived from a web
/// service call of some type, instead of an explicit set of ListItem nodes specified in
/// the FormDesign XML. The endpoint must return a list separated into individual list
/// items by the @colTextDelimiter value specified in the parent
/// ListFieldType.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class LookupEndPointType : CallFuncActionType
{
    
    #region Private fields
    private bool _shouldSerializeincludesHeaderRow;
    
    private List<CodingType> _responseValue;
    
    private bool _includesHeaderRow;
    
    private bool _responseValueSpecified;
    
    private bool _includesHeaderRowSpecified;
    #endregion
    
    /// <summary>
    /// LookupEndPointType class constructor
    /// </summary>
    public LookupEndPointType()
    {
        this._includesHeaderRow = false;
    }
    
    /// <summary>
    /// The user's response to the lookup list. The response
    /// is recorded as a coding, terminology, classification, keyword, or
    /// local value. Multiple selections from the lookup list may be
    /// allowed.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("ResponseValue", Order=0)]
    public virtual List<CodingType> ResponseValue
    {
        get
        {
            return this._responseValue;
        }
        set
        {
            if ((this._responseValue == value))
            {
                return;
            }
            if (((this._responseValue == null) 
                        || (_responseValue.Equals(value) != true)))
            {
                this._responseValue = value;
                this.OnPropertyChanged("ResponseValue", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool includesHeaderRow
    {
        get
        {
            return this._includesHeaderRow;
        }
        set
        {
            if ((_includesHeaderRow.Equals(value) != true))
            {
                this._includesHeaderRow = value;
                this.OnPropertyChanged("includesHeaderRow", value);
            }
            _shouldSerializeincludesHeaderRow = true;
        }
    }
    
    [XmlIgnore()]
    public bool ResponseValueSpecified
    {
        get
        {
            return this._responseValueSpecified;
        }
        set
        {
            this._responseValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool includesHeaderRowSpecified
    {
        get
        {
            return this._includesHeaderRowSpecified;
        }
        set
        {
            this._includesHeaderRowSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ResponseValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeResponseValue()
    {
        return ResponseValue != null && ResponseValue.Count > 0;
    }
    
    /// <summary>
    /// Test whether includesHeaderRow should be serialized
    /// </summary>
    public virtual bool ShouldSerializeincludesHeaderRow()
    {
        if (_shouldSerializeincludesHeaderRow)
        {
            return true;
        }
        return (_includesHeaderRow != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Inject a form or part of a form at the specified location. The
/// injected section may come from the current form.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActInjectType : InjectFormType
{
    
    #region Private fields
    private string _targetNames;
    
    private bool _targetNamesSpecified;
    #endregion
    
    /// <summary>
    /// The names of the parent items that will have the form (or
    /// form section) injected as child node(s).
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string targetNames
    {
        get
        {
            return this._targetNames;
        }
        set
        {
            if ((this._targetNames == value))
            {
                return;
            }
            if (((this._targetNames == null) 
                        || (_targetNames.Equals(value) != true)))
            {
                this._targetNames = value;
                this.OnPropertyChanged("targetNames", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool targetNamesSpecified
    {
        get
        {
            return this._targetNamesSpecified;
        }
        set
        {
            this._targetNamesSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether targetNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetNames()
    {
        return !string.IsNullOrEmpty(targetNames);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// CHANGED: This type represents a form or portion of a form that is
/// imported into the current form at a specific location. It allows the composition of
/// forms from other forms or parts of other forms. In practice, using an injected
/// section will requiresome or all of the injected FormDesignXML to be injected under
/// this the InjectForm element. For that reason, the schema supports those elements to
/// appear inline. However, in a "raw" form (not yet filled out), the FormDesign element
/// would generally be empty; only the top-level InjectFormType attributes would be used
/// to point to the parts to be later injected. Form parts to be injected are specified
/// by packageID, not FormID. This allows an injected form to be assocaited with helper
/// files, or to return previosuly completed form parts containing responses.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActInjectType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InjectFormType : IdentifiedExtensionType
{
    
    #region Private fields
    private IdentifiedExtensionType _item;
    
    private string _pkgFullURI;
    
    private string _rootItemID;
    
    private string _pkgManagerURI;
    
    private string _x_pkgID;
    
    private string _x_pkgInstanceURI;
    
    private string _x_pkgInstanceVersionURI;
    
    private string _pkgBaseURI;
    
    private string _x_injectionID;
    
    private string _repeat;
    
    private string _instanceGUID;
    
    private string _parentGUID;
    
    private bool _itemSpecified;
    
    private bool _pkgFullURISpecified;
    
    private bool _rootItemIDSpecified;
    
    private bool _pkgManagerURISpecified;
    
    private bool _x_pkgIDSpecified;
    
    private bool _x_pkgInstanceURISpecified;
    
    private bool _x_pkgInstanceVersionURISpecified;
    
    private bool _pkgBaseURISpecified;
    
    private bool _x_injectionIDSpecified;
    
    private bool _repeatSpecified;
    
    private bool _instanceGUIDSpecified;
    
    private bool _parentGUIDSpecified;
    #endregion
    
    /// <summary>
    /// InjectFormType class constructor
    /// </summary>
    public InjectFormType()
    {
        this._repeat = "0";
    }
    
    [System.Xml.Serialization.XmlElementAttribute("FormDesign", typeof(FormDesignType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Question", typeof(QuestionItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Section", typeof(SectionItemType), Order=0)]
    public virtual IdentifiedExtensionType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// The injected package is retrieved form pkgManagerURI + "/"
    /// + pkgFullURI. If pkgFullURI is null, then then current form is used
    /// injection.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string pkgFullURI
    {
        get
        {
            return this._pkgFullURI;
        }
        set
        {
            if ((this._pkgFullURI == value))
            {
                return;
            }
            if (((this._pkgFullURI == null) 
                        || (_pkgFullURI.Equals(value) != true)))
            {
                this._pkgFullURI = value;
                this.OnPropertyChanged("pkgFullURI", value);
            }
        }
    }
    
    /// <summary>
    /// The rootItemID is the ID of the form or form part that
    /// will be injected. It must point to a valid FormDesign, Section or
    /// Question element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string rootItemID
    {
        get
        {
            return this._rootItemID;
        }
        set
        {
            if ((this._rootItemID == value))
            {
                return;
            }
            if (((this._rootItemID == null) 
                        || (_rootItemID.Equals(value) != true)))
            {
                this._rootItemID = value;
                this.OnPropertyChanged("rootItemID", value);
            }
        }
    }
    
    /// <summary>
    /// The server from which the injected package will be
    /// retrieved.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string pkgManagerURI
    {
        get
        {
            return this._pkgManagerURI;
        }
        set
        {
            if ((this._pkgManagerURI == value))
            {
                return;
            }
            if (((this._pkgManagerURI == null) 
                        || (_pkgManagerURI.Equals(value) != true)))
            {
                this._pkgManagerURI = value;
                this.OnPropertyChanged("pkgManagerURI", value);
            }
        }
    }
    
    /// <summary>
    /// This ID represents the Package that contains the form to
    /// be injected. The package may contain an empty form or a form containing
    /// responses.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgID
    {
        get
        {
            return this._x_pkgID;
        }
        set
        {
            if ((this._x_pkgID == value))
            {
                return;
            }
            if (((this._x_pkgID == null) 
                        || (_x_pkgID.Equals(value) != true)))
            {
                this._x_pkgID = value;
                this.OnPropertyChanged("X_pkgID", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a
    /// package. Used for tracking form responses across time and across
    /// multiple episodes of editing by end-users. This URI does not change for
    /// each edit session of a package instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgInstanceURI
    {
        get
        {
            return this._x_pkgInstanceURI;
        }
        set
        {
            if ((this._x_pkgInstanceURI == value))
            {
                return;
            }
            if (((this._x_pkgInstanceURI == null) 
                        || (_x_pkgInstanceURI.Equals(value) != true)))
            {
                this._x_pkgInstanceURI = value;
                this.OnPropertyChanged("X_pkgInstanceURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a
    /// package's saved responses. It is used for tracking package responses
    /// across time and across multiple episodes of editing by end-users. This
    /// URI must change for each edit/save session of a package instance. It may
    /// be e.g., a new GUID, or a repeat of the pkgInstanceID followed by a
    /// version number.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgInstanceVersionURI
    {
        get
        {
            return this._x_pkgInstanceVersionURI;
        }
        set
        {
            if ((this._x_pkgInstanceVersionURI == value))
            {
                return;
            }
            if (((this._x_pkgInstanceVersionURI == null) 
                        || (_x_pkgInstanceVersionURI.Equals(value) != true)))
            {
                this._x_pkgInstanceVersionURI = value;
                this.OnPropertyChanged("X_pkgInstanceVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// DRAFT: The baseURI of the package, which indicates the
    /// home source of the package. The formManagerURP + pkgBaseURI + pkgID are
    /// concatenated to retrieve an empty form. formManagerURP + pkgBaseURI +
    /// pkgInstanceVersionURI are concatenated to retrieve a specific version of
    /// a populated form. formManagerURP + pkgBaseURI + pkgInstanceURI are
    /// concatenated to retrieve the latest instance of a populated
    /// form.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string pkgBaseURI
    {
        get
        {
            return this._pkgBaseURI;
        }
        set
        {
            if ((this._pkgBaseURI == value))
            {
                return;
            }
            if (((this._pkgBaseURI == null) 
                        || (_pkgBaseURI.Equals(value) != true)))
            {
                this._pkgBaseURI = value;
                this.OnPropertyChanged("pkgBaseURI", value);
            }
        }
    }
    
    /// <summary>
    /// Unique ID (GUID) to distinguish multiple instances of the
    /// same injected node.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string X_injectionID
    {
        get
        {
            return this._x_injectionID;
        }
        set
        {
            if ((this._x_injectionID == value))
            {
                return;
            }
            if (((this._x_injectionID == null) 
                        || (_x_injectionID.Equals(value) != true)))
            {
                this._x_injectionID = value;
                this.OnPropertyChanged("X_injectionID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public virtual string repeat
    {
        get
        {
            return this._repeat;
        }
        set
        {
            if ((this._repeat == value))
            {
                return;
            }
            if (((this._repeat == null) 
                        || (_repeat.Equals(value) != true)))
            {
                this._repeat = value;
                this.OnPropertyChanged("repeat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string instanceGUID
    {
        get
        {
            return this._instanceGUID;
        }
        set
        {
            if ((this._instanceGUID == value))
            {
                return;
            }
            if (((this._instanceGUID == null) 
                        || (_instanceGUID.Equals(value) != true)))
            {
                this._instanceGUID = value;
                this.OnPropertyChanged("instanceGUID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string parentGUID
    {
        get
        {
            return this._parentGUID;
        }
        set
        {
            if ((this._parentGUID == value))
            {
                return;
            }
            if (((this._parentGUID == null) 
                        || (_parentGUID.Equals(value) != true)))
            {
                this._parentGUID = value;
                this.OnPropertyChanged("parentGUID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool pkgFullURISpecified
    {
        get
        {
            return this._pkgFullURISpecified;
        }
        set
        {
            this._pkgFullURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool rootItemIDSpecified
    {
        get
        {
            return this._rootItemIDSpecified;
        }
        set
        {
            this._rootItemIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool pkgManagerURISpecified
    {
        get
        {
            return this._pkgManagerURISpecified;
        }
        set
        {
            this._pkgManagerURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgIDSpecified
    {
        get
        {
            return this._x_pkgIDSpecified;
        }
        set
        {
            this._x_pkgIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgInstanceURISpecified
    {
        get
        {
            return this._x_pkgInstanceURISpecified;
        }
        set
        {
            this._x_pkgInstanceURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgInstanceVersionURISpecified
    {
        get
        {
            return this._x_pkgInstanceVersionURISpecified;
        }
        set
        {
            this._x_pkgInstanceVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool pkgBaseURISpecified
    {
        get
        {
            return this._pkgBaseURISpecified;
        }
        set
        {
            this._pkgBaseURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_injectionIDSpecified
    {
        get
        {
            return this._x_injectionIDSpecified;
        }
        set
        {
            this._x_injectionIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool repeatSpecified
    {
        get
        {
            return this._repeatSpecified;
        }
        set
        {
            this._repeatSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceGUIDSpecified
    {
        get
        {
            return this._instanceGUIDSpecified;
        }
        set
        {
            this._instanceGUIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool parentGUIDSpecified
    {
        get
        {
            return this._parentGUIDSpecified;
        }
        set
        {
            this._parentGUIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
    
    /// <summary>
    /// Test whether pkgFullURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializepkgFullURI()
    {
        return !string.IsNullOrEmpty(pkgFullURI);
    }
    
    /// <summary>
    /// Test whether rootItemID should be serialized
    /// </summary>
    public virtual bool ShouldSerializerootItemID()
    {
        return !string.IsNullOrEmpty(rootItemID);
    }
    
    /// <summary>
    /// Test whether pkgManagerURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializepkgManagerURI()
    {
        return !string.IsNullOrEmpty(pkgManagerURI);
    }
    
    /// <summary>
    /// Test whether X_pkgID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgID()
    {
        return !string.IsNullOrEmpty(X_pkgID);
    }
    
    /// <summary>
    /// Test whether X_pkgInstanceURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgInstanceURI()
    {
        return !string.IsNullOrEmpty(X_pkgInstanceURI);
    }
    
    /// <summary>
    /// Test whether X_pkgInstanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgInstanceVersionURI()
    {
        return !string.IsNullOrEmpty(X_pkgInstanceVersionURI);
    }
    
    /// <summary>
    /// Test whether pkgBaseURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializepkgBaseURI()
    {
        return !string.IsNullOrEmpty(pkgBaseURI);
    }
    
    /// <summary>
    /// Test whether X_injectionID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_injectionID()
    {
        return !string.IsNullOrEmpty(X_injectionID);
    }
    
    /// <summary>
    /// Test whether repeat should be serialized
    /// </summary>
    public virtual bool ShouldSerializerepeat()
    {
        return !string.IsNullOrEmpty(repeat);
    }
    
    /// <summary>
    /// Test whether instanceGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceGUID()
    {
        return !string.IsNullOrEmpty(instanceGUID);
    }
    
    /// <summary>
    /// Test whether parentGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparentGUID()
    {
        return !string.IsNullOrEmpty(parentGUID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Represents questions. Parent items may be Section, Question, and
/// ListItem.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class QuestionItemType : QuestionItemBaseType
{
    
    #region Private fields
    private ChildItemsType _item1;
    
    private bool _item1Specified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ChildItems", Order=0)]
    public virtual ChildItemsType Item1
    {
        get
        {
            return this._item1;
        }
        set
        {
            if ((this._item1 == value))
            {
                return;
            }
            if (((this._item1 == null) 
                        || (_item1.Equals(value) != true)))
            {
                this._item1 = value;
                this.OnPropertyChanged("Item1", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool Item1Specified
    {
        get
        {
            return this._item1Specified;
        }
        set
        {
            this._item1Specified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item1 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem1()
    {
        return (_item1 != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ChildItems have descendants that are of type DisplayedType. They may
/// include primary items of type SectionType, QuestionType, InjectFormType,
/// DisplayedType and ButtonType, in any order. The ChildItem separates new child
/// primary items from elements and attributes that are sub-parts of the parent primary
/// item.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChildItemsType : ExtensionBaseType
{
    
    #region Private fields
    private List<IdentifiedExtensionType> _items;
    
    private bool _itemsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ButtonAction", typeof(ButtonItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("DisplayedItem", typeof(DisplayedType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("InjectForm", typeof(InjectFormType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Question", typeof(QuestionItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Section", typeof(SectionItemType), Order=0)]
    public virtual List<IdentifiedExtensionType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// The ButtonItem type represents a visual area for a user to click, and
/// the click triggers a piece of "Action" code to run inside the form. The ButtonAction
/// object may be represented with a visible button object, or some other type of visual
/// paradigm. Other types of actions (e.g. key presses in a text field) may be handled
/// with the form framework's event model.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ButtonItemType : DisplayedType
{
    
    #region Private fields
    private List<EventType> _items;
    
    private bool _itemsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("OnClick", Order=0)]
    public virtual List<EventType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type represents any object that is designed to have a visual
/// presence on a form, e.g., Sections, Questions, ListItems, Notes and Blobs. (Other
/// items not inheriting this type may use an optional styleClass
/// attribute.)
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ButtonItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RepeatingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DisplayedType : IdentifiedExtensionType
{
    
    #region Private fields
    private bool _shouldSerializeshowInReport;
    
    private bool _shouldSerializemustImplement;
    
    private bool _shouldSerializevisible;
    
    private bool _shouldSerializeenabled;
    
    private List<LinkType> _link;
    
    private List<BlobType> _blobContent;
    
    private List<ContactType> _contact;
    
    private List<CodingType> _codedValue;
    
    private List<EventType> _onEnter;
    
    private List<EventType> _onExit;
    
    private List<OnEventType> _onEvent;
    
    private PredGuardType _activateIf;
    
    private PredGuardType _deActivateIf;
    
    private string _title;
    
    private bool _enabled;
    
    private bool _visible;
    
    private bool _mustImplement;
    
    private DisplayedTypeShowInReport _showInReport;
    
    private bool _linkSpecified;
    
    private bool _blobContentSpecified;
    
    private bool _contactSpecified;
    
    private bool _codedValueSpecified;
    
    private bool _onEnterSpecified;
    
    private bool _onExitSpecified;
    
    private bool _onEventSpecified;
    
    private bool _activateIfSpecified;
    
    private bool _deActivateIfSpecified;
    
    private bool _titleSpecified;
    
    private bool _enabledSpecified;
    
    private bool _visibleSpecified;
    
    private bool _mustImplementSpecified;
    
    private bool _showInReportSpecified;
    #endregion
    
    /// <summary>
    /// DisplayedType class constructor
    /// </summary>
    public DisplayedType()
    {
        this._enabled = true;
        this._visible = true;
        this._mustImplement = true;
        this._showInReport = DisplayedTypeShowInReport.True;
    }
    
    /// <summary>
    /// Link to external information.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Link", Order=0)]
    public virtual List<LinkType> Link
    {
        get
        {
            return this._link;
        }
        set
        {
            if ((this._link == value))
            {
                return;
            }
            if (((this._link == null) 
                        || (_link.Equals(value) != true)))
            {
                this._link = value;
                this.OnPropertyChanged("Link", value);
            }
        }
    }
    
    /// <summary>
    /// Blob information associated with the current
    /// DisplayedType. The blob may contain any type of special media, but
    /// must be base 64 encoded.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("BlobContent", Order=1)]
    public virtual List<BlobType> BlobContent
    {
        get
        {
            return this._blobContent;
        }
        set
        {
            if ((this._blobContent == value))
            {
                return;
            }
            if (((this._blobContent == null) 
                        || (_blobContent.Equals(value) != true)))
            {
                this._blobContent = value;
                this.OnPropertyChanged("BlobContent", value);
            }
        }
    }
    
    /// <summary>
    /// Any desired contact information regarding, e.g., the
    /// form item, authoring process, certifications, code or coding
    /// processs.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Contact", Order=2)]
    public virtual List<ContactType> Contact
    {
        get
        {
            return this._contact;
        }
        set
        {
            if ((this._contact == value))
            {
                return;
            }
            if (((this._contact == null) 
                        || (_contact.Equals(value) != true)))
            {
                this._contact = value;
                this.OnPropertyChanged("Contact", value);
            }
        }
    }
    
    /// <summary>
    /// Coding, terminology, classification, keyword, or local
    /// values
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("CodedValue", Order=3)]
    public virtual List<CodingType> CodedValue
    {
        get
        {
            return this._codedValue;
        }
        set
        {
            if ((this._codedValue == value))
            {
                return;
            }
            if (((this._codedValue == null) 
                        || (_codedValue.Equals(value) != true)))
            {
                this._codedValue = value;
                this.OnPropertyChanged("CodedValue", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnEnter", Order=4)]
    public virtual List<EventType> OnEnter
    {
        get
        {
            return this._onEnter;
        }
        set
        {
            if ((this._onEnter == value))
            {
                return;
            }
            if (((this._onEnter == null) 
                        || (_onEnter.Equals(value) != true)))
            {
                this._onEnter = value;
                this.OnPropertyChanged("OnEnter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnExit", Order=5)]
    public virtual List<EventType> OnExit
    {
        get
        {
            return this._onExit;
        }
        set
        {
            if ((this._onExit == value))
            {
                return;
            }
            if (((this._onExit == null) 
                        || (_onExit.Equals(value) != true)))
            {
                this._onExit = value;
                this.OnPropertyChanged("OnExit", value);
            }
        }
    }
    
    /// <summary>
    /// Generic event handler - eventName must be
    /// specified.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("OnEvent", Order=6)]
    public virtual List<OnEventType> OnEvent
    {
        get
        {
            return this._onEvent;
        }
        set
        {
            if ((this._onEvent == value))
            {
                return;
            }
            if (((this._onEvent == null) 
                        || (_onEvent.Equals(value) != true)))
            {
                this._onEvent = value;
                this.OnPropertyChanged("OnEvent", value);
            }
        }
    }
    
    /// <summary>
    /// Activate the DisplayedType item if the guard
    /// conditions are met.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual PredGuardType ActivateIf
    {
        get
        {
            return this._activateIf;
        }
        set
        {
            if ((this._activateIf == value))
            {
                return;
            }
            if (((this._activateIf == null) 
                        || (_activateIf.Equals(value) != true)))
            {
                this._activateIf = value;
                this.OnPropertyChanged("ActivateIf", value);
            }
        }
    }
    
    /// <summary>
    /// DeActivate the DisplayedType item if the guard
    /// conditions are met.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual PredGuardType DeActivateIf
    {
        get
        {
            return this._deActivateIf;
        }
        set
        {
            if ((this._deActivateIf == value))
            {
                return;
            }
            if (((this._deActivateIf == null) 
                        || (_deActivateIf.Equals(value) != true)))
            {
                this._deActivateIf = value;
                this.OnPropertyChanged("DeActivateIf", value);
            }
        }
    }
    
    /// <summary>
    /// The primary text to show on the form. Also known as
    /// "prompt" or "label" or "visibleText" or "caption"
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string title
    {
        get
        {
            return this._title;
        }
        set
        {
            if ((this._title == value))
            {
                return;
            }
            if (((this._title == null) 
                        || (_title.Equals(value) != true)))
            {
                this._title = value;
                this.OnPropertyChanged("title", value);
            }
        }
    }
    
    /// <summary>
    /// Determines whether the user can interact with the
    /// displayed item when the form is first displayed. All disabled items are
    /// treated as read-only: they are visible but may not be edited. The
    /// attribute value is inherited by descendants.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool enabled
    {
        get
        {
            return this._enabled;
        }
        set
        {
            if ((_enabled.Equals(value) != true))
            {
                this._enabled = value;
                this.OnPropertyChanged("enabled", value);
            }
            _shouldSerializeenabled = true;
        }
    }
    
    /// <summary>
    /// Determines whether the item should be visible on a
    /// computer screen when the form is first displayed. The attribute value is
    /// inherited by descendants.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool visible
    {
        get
        {
            return this._visible;
        }
        set
        {
            if ((_visible.Equals(value) != true))
            {
                this._visible = value;
                this.OnPropertyChanged("visible", value);
            }
            _shouldSerializevisible = true;
        }
    }
    
    /// <summary>
    /// If this attribute is set to "true" (the default), then the
    /// form implementation must make this item available for use on the form.
    /// If this attribute is set to "false" on a parent or ancestor item, then
    /// all child/descendant items inherit this "false" setting, even if they
    /// have this attribute set to "true." In other words, the child/descendent
    /// items do not need to be implemented if any parent/ancestor item has this
    /// attribute set to false.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool mustImplement
    {
        get
        {
            return this._mustImplement;
        }
        set
        {
            if ((_mustImplement.Equals(value) != true))
            {
                this._mustImplement = value;
                this.OnPropertyChanged("mustImplement", value);
            }
            _shouldSerializemustImplement = true;
        }
    }
    
    /// <summary>
    /// CHANGED to T/F/Optional If @showInReport on a Question is
    /// false, then the Question and its ListItems (if any) should not be
    /// present in a typical report derived from this template. If this
    /// attribute appears on a ListItem, then the entire question and all
    /// ListItems should be omitted from the report. If this attribute appears
    /// on a Section, then the entire Section and all Section contents
    /// (descendents) should be omitted from the report. If @showInReport
    /// appears on a DisplayedItem, then the DisplayedItem should be omitted
    /// from the report. This attribute is usually set to false when a Question
    /// is used to control form behavior (e.g., skip logic), or when the
    /// Question provides unhelpful "negative" information about actions that
    /// did not occur or were not performed, or things that were not
    /// observed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(DisplayedTypeShowInReport.True)]
    public virtual DisplayedTypeShowInReport showInReport
    {
        get
        {
            return this._showInReport;
        }
        set
        {
            if ((_showInReport.Equals(value) != true))
            {
                this._showInReport = value;
                this.OnPropertyChanged("showInReport", value);
            }
            _shouldSerializeshowInReport = true;
        }
    }
    
    [XmlIgnore()]
    public bool LinkSpecified
    {
        get
        {
            return this._linkSpecified;
        }
        set
        {
            this._linkSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool BlobContentSpecified
    {
        get
        {
            return this._blobContentSpecified;
        }
        set
        {
            this._blobContentSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ContactSpecified
    {
        get
        {
            return this._contactSpecified;
        }
        set
        {
            this._contactSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CodedValueSpecified
    {
        get
        {
            return this._codedValueSpecified;
        }
        set
        {
            this._codedValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnEnterSpecified
    {
        get
        {
            return this._onEnterSpecified;
        }
        set
        {
            this._onEnterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnExitSpecified
    {
        get
        {
            return this._onExitSpecified;
        }
        set
        {
            this._onExitSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnEventSpecified
    {
        get
        {
            return this._onEventSpecified;
        }
        set
        {
            this._onEventSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ActivateIfSpecified
    {
        get
        {
            return this._activateIfSpecified;
        }
        set
        {
            this._activateIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DeActivateIfSpecified
    {
        get
        {
            return this._deActivateIfSpecified;
        }
        set
        {
            this._deActivateIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool titleSpecified
    {
        get
        {
            return this._titleSpecified;
        }
        set
        {
            this._titleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool enabledSpecified
    {
        get
        {
            return this._enabledSpecified;
        }
        set
        {
            this._enabledSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool visibleSpecified
    {
        get
        {
            return this._visibleSpecified;
        }
        set
        {
            this._visibleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool mustImplementSpecified
    {
        get
        {
            return this._mustImplementSpecified;
        }
        set
        {
            this._mustImplementSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool showInReportSpecified
    {
        get
        {
            return this._showInReportSpecified;
        }
        set
        {
            this._showInReportSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Link should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLink()
    {
        return Link != null && Link.Count > 0;
    }
    
    /// <summary>
    /// Test whether BlobContent should be serialized
    /// </summary>
    public virtual bool ShouldSerializeBlobContent()
    {
        return BlobContent != null && BlobContent.Count > 0;
    }
    
    /// <summary>
    /// Test whether Contact should be serialized
    /// </summary>
    public virtual bool ShouldSerializeContact()
    {
        return Contact != null && Contact.Count > 0;
    }
    
    /// <summary>
    /// Test whether CodedValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCodedValue()
    {
        return CodedValue != null && CodedValue.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnEnter should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnEnter()
    {
        return OnEnter != null && OnEnter.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnExit should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnExit()
    {
        return OnExit != null && OnExit.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnEvent should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnEvent()
    {
        return OnEvent != null && OnEvent.Count > 0;
    }
    
    /// <summary>
    /// Test whether enabled should be serialized
    /// </summary>
    public virtual bool ShouldSerializeenabled()
    {
        if (_shouldSerializeenabled)
        {
            return true;
        }
        return (_enabled != default(bool));
    }
    
    /// <summary>
    /// Test whether visible should be serialized
    /// </summary>
    public virtual bool ShouldSerializevisible()
    {
        if (_shouldSerializevisible)
        {
            return true;
        }
        return (_visible != default(bool));
    }
    
    /// <summary>
    /// Test whether mustImplement should be serialized
    /// </summary>
    public virtual bool ShouldSerializemustImplement()
    {
        if (_shouldSerializemustImplement)
        {
            return true;
        }
        return (_mustImplement != default(bool));
    }
    
    /// <summary>
    /// Test whether showInReport should be serialized
    /// </summary>
    public virtual bool ShouldSerializeshowInReport()
    {
        if (_shouldSerializeshowInReport)
        {
            return true;
        }
        return (_showInReport != default(DisplayedTypeShowInReport));
    }
    
    /// <summary>
    /// Test whether ActivateIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActivateIf()
    {
        return (_activateIf != null);
    }
    
    /// <summary>
    /// Test whether DeActivateIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDeActivateIf()
    {
        return (_deActivateIf != null);
    }
    
    /// <summary>
    /// Test whether title should be serialized
    /// </summary>
    public virtual bool ShouldSerializetitle()
    {
        return !string.IsNullOrEmpty(title);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A hyperlink to an Internet endpoint such as a web page or web service.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class LinkType : ExtensionBaseType
{
    
    #region Private fields
    private RichTextType _linkText;
    
    private anyURI_Stype _linkURI;
    
    private bool _linkTextSpecified;
    
    private bool _linkURISpecified;
    #endregion
    
    /// <summary>
    /// A description of the URI link, usually for display purposes.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual RichTextType LinkText
    {
        get
        {
            return this._linkText;
        }
        set
        {
            if ((this._linkText == value))
            {
                return;
            }
            if (((this._linkText == null) 
                        || (_linkText.Equals(value) != true)))
            {
                this._linkText = value;
                this.OnPropertyChanged("LinkText", value);
            }
        }
    }
    
    /// <summary>
    /// Link to external information.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual anyURI_Stype LinkURI
    {
        get
        {
            return this._linkURI;
        }
        set
        {
            if ((this._linkURI == value))
            {
                return;
            }
            if (((this._linkURI == null) 
                        || (_linkURI.Equals(value) != true)))
            {
                this._linkURI = value;
                this.OnPropertyChanged("LinkURI", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool LinkTextSpecified
    {
        get
        {
            return this._linkTextSpecified;
        }
        set
        {
            this._linkTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool LinkURISpecified
    {
        get
        {
            return this._linkURISpecified;
        }
        set
        {
            this._linkURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether LinkText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLinkText()
    {
        return (_linkText != null);
    }
    
    /// <summary>
    /// Test whether LinkURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLinkURI()
    {
        return (_linkURI != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Standard structure for including Binary Large Objects (Blobs) in XML
/// templates. Blobs can handle any type of binary media, such as images, audio, video,
/// and data streams of any specified format (such as a MIME type).
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class BlobType : ExtensionBaseType
{
    
    #region Private fields
    private List<RichTextType> _description;
    
    private HashType _hash;
    
    private BaseType _item;
    
    private string _mediaType;
    
    private string _fileExtension;
    
    private bool _descriptionSpecified;
    
    private bool _hashSpecified;
    
    private bool _itemSpecified;
    
    private bool _mediaTypeSpecified;
    
    private bool _fileExtensionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Description", Order=0)]
    public virtual List<RichTextType> Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    /// <summary>
    /// Binary hash of the blob data
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual HashType Hash
    {
        get
        {
            return this._hash;
        }
        set
        {
            if ((this._hash == value))
            {
                return;
            }
            if (((this._hash == null) 
                        || (_hash.Equals(value) != true)))
            {
                this._hash = value;
                this.OnPropertyChanged("Hash", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("BinaryMediaBase64", typeof(base64Binary_Stype), Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("BlobURI", typeof(anyURI_Stype), Order=2)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// TBD: Must be a valid MIME type - needs enumeration
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mediaType
    {
        get
        {
            return this._mediaType;
        }
        set
        {
            if ((this._mediaType == value))
            {
                return;
            }
            if (((this._mediaType == null) 
                        || (_mediaType.Equals(value) != true)))
            {
                this._mediaType = value;
                this.OnPropertyChanged("mediaType", value);
            }
        }
    }
    
    /// <summary>
    /// Use a common file extension (e.g., docx) if there is no @MIME_Type available
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string fileExtension
    {
        get
        {
            return this._fileExtension;
        }
        set
        {
            if ((this._fileExtension == value))
            {
                return;
            }
            if (((this._fileExtension == null) 
                        || (_fileExtension.Equals(value) != true)))
            {
                this._fileExtension = value;
                this.OnPropertyChanged("fileExtension", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool HashSpecified
    {
        get
        {
            return this._hashSpecified;
        }
        set
        {
            this._hashSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool mediaTypeSpecified
    {
        get
        {
            return this._mediaTypeSpecified;
        }
        set
        {
            this._mediaTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fileExtensionSpecified
    {
        get
        {
            return this._fileExtensionSpecified;
        }
        set
        {
            this._fileExtensionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return Description != null && Description.Count > 0;
    }
    
    /// <summary>
    /// Test whether Hash should be serialized
    /// </summary>
    public virtual bool ShouldSerializeHash()
    {
        return (_hash != null);
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
    
    /// <summary>
    /// Test whether mediaType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemediaType()
    {
        return !string.IsNullOrEmpty(mediaType);
    }
    
    /// <summary>
    /// Test whether fileExtension should be serialized
    /// </summary>
    public virtual bool ShouldSerializefileExtension()
    {
        return !string.IsNullOrEmpty(fileExtension);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A model structure for a Person or Organization that generally performs a particular stated role.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ContactType : ExtensionBaseType
{
    
    #region Private fields
    private PersonType _person;
    
    private OrganizationType _organization;
    
    private bool _personSpecified;
    
    private bool _organizationSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual PersonType Person
    {
        get
        {
            return this._person;
        }
        set
        {
            if ((this._person == value))
            {
                return;
            }
            if (((this._person == null) 
                        || (_person.Equals(value) != true)))
            {
                this._person = value;
                this.OnPropertyChanged("Person", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual OrganizationType Organization
    {
        get
        {
            return this._organization;
        }
        set
        {
            if ((this._organization == value))
            {
                return;
            }
            if (((this._organization == null) 
                        || (_organization.Equals(value) != true)))
            {
                this._organization = value;
                this.OnPropertyChanged("Organization", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PersonSpecified
    {
        get
        {
            return this._personSpecified;
        }
        set
        {
            this._personSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OrganizationSpecified
    {
        get
        {
            return this._organizationSpecified;
        }
        set
        {
            this._organizationSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Person should be serialized
    /// </summary>
    public virtual bool ShouldSerializePerson()
    {
        return (_person != null);
    }
    
    /// <summary>
    /// Test whether Organization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOrganization()
    {
        return (_organization != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A model structure for a Person object.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PersonType : ExtensionBaseType
{
    
    #region Private fields
    private NameType _personName;
    
    private List<NameType> _aliasName;
    
    private List<JobType> _job;
    
    private List<AddressType> _streetAddress;
    
    private List<EmailType> _email;
    
    private List<PhoneType> _phone;
    
    private List<anyURI_Stype> _webURL;
    
    private string_Stype _role;
    
    private List<IdentifierType> _identifier;
    
    private string_Stype _usage;
    
    private bool _personNameSpecified;
    
    private bool _aliasNameSpecified;
    
    private bool _jobSpecified;
    
    private bool _streetAddressSpecified;
    
    private bool _emailSpecified;
    
    private bool _phoneSpecified;
    
    private bool _webURLSpecified;
    
    private bool _roleSpecified;
    
    private bool _identifierSpecified;
    
    private bool _usageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual NameType PersonName
    {
        get
        {
            return this._personName;
        }
        set
        {
            if ((this._personName == value))
            {
                return;
            }
            if (((this._personName == null) 
                        || (_personName.Equals(value) != true)))
            {
                this._personName = value;
                this.OnPropertyChanged("PersonName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("AliasName", Order=1)]
    public virtual List<NameType> AliasName
    {
        get
        {
            return this._aliasName;
        }
        set
        {
            if ((this._aliasName == value))
            {
                return;
            }
            if (((this._aliasName == null) 
                        || (_aliasName.Equals(value) != true)))
            {
                this._aliasName = value;
                this.OnPropertyChanged("AliasName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Job", Order=2)]
    public virtual List<JobType> Job
    {
        get
        {
            return this._job;
        }
        set
        {
            if ((this._job == value))
            {
                return;
            }
            if (((this._job == null) 
                        || (_job.Equals(value) != true)))
            {
                this._job = value;
                this.OnPropertyChanged("Job", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("StreetAddress", Order=3)]
    public virtual List<AddressType> StreetAddress
    {
        get
        {
            return this._streetAddress;
        }
        set
        {
            if ((this._streetAddress == value))
            {
                return;
            }
            if (((this._streetAddress == null) 
                        || (_streetAddress.Equals(value) != true)))
            {
                this._streetAddress = value;
                this.OnPropertyChanged("StreetAddress", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Email", Order=4)]
    public virtual List<EmailType> Email
    {
        get
        {
            return this._email;
        }
        set
        {
            if ((this._email == value))
            {
                return;
            }
            if (((this._email == null) 
                        || (_email.Equals(value) != true)))
            {
                this._email = value;
                this.OnPropertyChanged("Email", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Phone", Order=5)]
    public virtual List<PhoneType> Phone
    {
        get
        {
            return this._phone;
        }
        set
        {
            if ((this._phone == value))
            {
                return;
            }
            if (((this._phone == null) 
                        || (_phone.Equals(value) != true)))
            {
                this._phone = value;
                this.OnPropertyChanged("Phone", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("WebURL", Order=6)]
    public virtual List<anyURI_Stype> WebURL
    {
        get
        {
            return this._webURL;
        }
        set
        {
            if ((this._webURL == value))
            {
                return;
            }
            if (((this._webURL == null) 
                        || (_webURL.Equals(value) != true)))
            {
                this._webURL = value;
                this.OnPropertyChanged("WebURL", value);
            }
        }
    }
    
    /// <summary>
    /// Role of the person, e.g., creator, copyright holder, accreditor, certifier, curator, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual string_Stype Role
    {
        get
        {
            return this._role;
        }
        set
        {
            if ((this._role == value))
            {
                return;
            }
            if (((this._role == null) 
                        || (_role.Equals(value) != true)))
            {
                this._role = value;
                this.OnPropertyChanged("Role", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Identifier", Order=8)]
    public virtual List<IdentifierType> Identifier
    {
        get
        {
            return this._identifier;
        }
        set
        {
            if ((this._identifier == value))
            {
                return;
            }
            if (((this._identifier == null) 
                        || (_identifier.Equals(value) != true)))
            {
                this._identifier = value;
                this.OnPropertyChanged("Identifier", value);
            }
        }
    }
    
    /// <summary>
    /// When this person should be contacted.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=9)]
    public virtual string_Stype Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PersonNameSpecified
    {
        get
        {
            return this._personNameSpecified;
        }
        set
        {
            this._personNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AliasNameSpecified
    {
        get
        {
            return this._aliasNameSpecified;
        }
        set
        {
            this._aliasNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool JobSpecified
    {
        get
        {
            return this._jobSpecified;
        }
        set
        {
            this._jobSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StreetAddressSpecified
    {
        get
        {
            return this._streetAddressSpecified;
        }
        set
        {
            this._streetAddressSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EmailSpecified
    {
        get
        {
            return this._emailSpecified;
        }
        set
        {
            this._emailSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PhoneSpecified
    {
        get
        {
            return this._phoneSpecified;
        }
        set
        {
            this._phoneSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool WebURLSpecified
    {
        get
        {
            return this._webURLSpecified;
        }
        set
        {
            this._webURLSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RoleSpecified
    {
        get
        {
            return this._roleSpecified;
        }
        set
        {
            this._roleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool IdentifierSpecified
    {
        get
        {
            return this._identifierSpecified;
        }
        set
        {
            this._identifierSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether AliasName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAliasName()
    {
        return AliasName != null && AliasName.Count > 0;
    }
    
    /// <summary>
    /// Test whether Job should be serialized
    /// </summary>
    public virtual bool ShouldSerializeJob()
    {
        return Job != null && Job.Count > 0;
    }
    
    /// <summary>
    /// Test whether StreetAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeStreetAddress()
    {
        return StreetAddress != null && StreetAddress.Count > 0;
    }
    
    /// <summary>
    /// Test whether Email should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmail()
    {
        return Email != null && Email.Count > 0;
    }
    
    /// <summary>
    /// Test whether Phone should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhone()
    {
        return Phone != null && Phone.Count > 0;
    }
    
    /// <summary>
    /// Test whether WebURL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeWebURL()
    {
        return WebURL != null && WebURL.Count > 0;
    }
    
    /// <summary>
    /// Test whether Identifier should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIdentifier()
    {
        return Identifier != null && Identifier.Count > 0;
    }
    
    /// <summary>
    /// Test whether PersonName should be serialized
    /// </summary>
    public virtual bool ShouldSerializePersonName()
    {
        return (_personName != null);
    }
    
    /// <summary>
    /// Test whether Role should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRole()
    {
        return (_role != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Structure to define a person's name, including prefixes, suffixes, and degrees.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class NameType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _namePrefix;
    
    private string_Stype _firstName;
    
    private string_Stype _middleName;
    
    private string_Stype _lastName;
    
    private string_Stype _nameSuffix;
    
    private List<string_Stype> _degreeCert;
    
    private string_Stype _title;
    
    private bool _namePrefixSpecified;
    
    private bool _firstNameSpecified;
    
    private bool _middleNameSpecified;
    
    private bool _lastNameSpecified;
    
    private bool _nameSuffixSpecified;
    
    private bool _degreeCertSpecified;
    
    private bool _titleSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype NamePrefix
    {
        get
        {
            return this._namePrefix;
        }
        set
        {
            if ((this._namePrefix == value))
            {
                return;
            }
            if (((this._namePrefix == null) 
                        || (_namePrefix.Equals(value) != true)))
            {
                this._namePrefix = value;
                this.OnPropertyChanged("NamePrefix", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
    public virtual string_Stype FirstName
    {
        get
        {
            return this._firstName;
        }
        set
        {
            if ((this._firstName == value))
            {
                return;
            }
            if (((this._firstName == null) 
                        || (_firstName.Equals(value) != true)))
            {
                this._firstName = value;
                this.OnPropertyChanged("FirstName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype MiddleName
    {
        get
        {
            return this._middleName;
        }
        set
        {
            if ((this._middleName == value))
            {
                return;
            }
            if (((this._middleName == null) 
                        || (_middleName.Equals(value) != true)))
            {
                this._middleName = value;
                this.OnPropertyChanged("MiddleName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
    public virtual string_Stype LastName
    {
        get
        {
            return this._lastName;
        }
        set
        {
            if ((this._lastName == value))
            {
                return;
            }
            if (((this._lastName == null) 
                        || (_lastName.Equals(value) != true)))
            {
                this._lastName = value;
                this.OnPropertyChanged("LastName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype NameSuffix
    {
        get
        {
            return this._nameSuffix;
        }
        set
        {
            if ((this._nameSuffix == value))
            {
                return;
            }
            if (((this._nameSuffix == null) 
                        || (_nameSuffix.Equals(value) != true)))
            {
                this._nameSuffix = value;
                this.OnPropertyChanged("NameSuffix", value);
            }
        }
    }
    
    /// <summary>
    /// Acronyms for degrees and certifications, e.g., MD, PhD, FACP (repeat element for each acronym)
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("DegreeCert", Order=5)]
    public virtual List<string_Stype> DegreeCert
    {
        get
        {
            return this._degreeCert;
        }
        set
        {
            if ((this._degreeCert == value))
            {
                return;
            }
            if (((this._degreeCert == null) 
                        || (_degreeCert.Equals(value) != true)))
            {
                this._degreeCert = value;
                this.OnPropertyChanged("DegreeCert", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual string_Stype Title
    {
        get
        {
            return this._title;
        }
        set
        {
            if ((this._title == value))
            {
                return;
            }
            if (((this._title == null) 
                        || (_title.Equals(value) != true)))
            {
                this._title = value;
                this.OnPropertyChanged("Title", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool NamePrefixSpecified
    {
        get
        {
            return this._namePrefixSpecified;
        }
        set
        {
            this._namePrefixSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FirstNameSpecified
    {
        get
        {
            return this._firstNameSpecified;
        }
        set
        {
            this._firstNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool MiddleNameSpecified
    {
        get
        {
            return this._middleNameSpecified;
        }
        set
        {
            this._middleNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool LastNameSpecified
    {
        get
        {
            return this._lastNameSpecified;
        }
        set
        {
            this._lastNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool NameSuffixSpecified
    {
        get
        {
            return this._nameSuffixSpecified;
        }
        set
        {
            this._nameSuffixSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DegreeCertSpecified
    {
        get
        {
            return this._degreeCertSpecified;
        }
        set
        {
            this._degreeCertSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TitleSpecified
    {
        get
        {
            return this._titleSpecified;
        }
        set
        {
            this._titleSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether DegreeCert should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDegreeCert()
    {
        return DegreeCert != null && DegreeCert.Count > 0;
    }
    
    /// <summary>
    /// Test whether NamePrefix should be serialized
    /// </summary>
    public virtual bool ShouldSerializeNamePrefix()
    {
        return (_namePrefix != null);
    }
    
    /// <summary>
    /// Test whether FirstName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFirstName()
    {
        return (_firstName != null);
    }
    
    /// <summary>
    /// Test whether MiddleName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMiddleName()
    {
        return (_middleName != null);
    }
    
    /// <summary>
    /// Test whether LastName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLastName()
    {
        return (_lastName != null);
    }
    
    /// <summary>
    /// Test whether NameSuffix should be serialized
    /// </summary>
    public virtual bool ShouldSerializeNameSuffix()
    {
        return (_nameSuffix != null);
    }
    
    /// <summary>
    /// Test whether Title should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTitle()
    {
        return (_title != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class JobType : ExtensionBaseType
{
    
    #region Private fields
    private List<string_Stype> _jobTitle;
    
    private OrganizationType _organization;
    
    private date_Stype _startDate;
    
    private date_Stype _stopDate;
    
    private string_Stype _description;
    
    private bool _jobTitleSpecified;
    
    private bool _organizationSpecified;
    
    private bool _startDateSpecified;
    
    private bool _stopDateSpecified;
    
    private bool _descriptionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("JobTitle", Order=0)]
    public virtual List<string_Stype> JobTitle
    {
        get
        {
            return this._jobTitle;
        }
        set
        {
            if ((this._jobTitle == value))
            {
                return;
            }
            if (((this._jobTitle == null) 
                        || (_jobTitle.Equals(value) != true)))
            {
                this._jobTitle = value;
                this.OnPropertyChanged("JobTitle", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual OrganizationType Organization
    {
        get
        {
            return this._organization;
        }
        set
        {
            if ((this._organization == value))
            {
                return;
            }
            if (((this._organization == null) 
                        || (_organization.Equals(value) != true)))
            {
                this._organization = value;
                this.OnPropertyChanged("Organization", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual date_Stype StartDate
    {
        get
        {
            return this._startDate;
        }
        set
        {
            if ((this._startDate == value))
            {
                return;
            }
            if (((this._startDate == null) 
                        || (_startDate.Equals(value) != true)))
            {
                this._startDate = value;
                this.OnPropertyChanged("StartDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual date_Stype StopDate
    {
        get
        {
            return this._stopDate;
        }
        set
        {
            if ((this._stopDate == value))
            {
                return;
            }
            if (((this._stopDate == null) 
                        || (_stopDate.Equals(value) != true)))
            {
                this._stopDate = value;
                this.OnPropertyChanged("StopDate", value);
            }
        }
    }
    
    /// <summary>
    /// Job Description
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool JobTitleSpecified
    {
        get
        {
            return this._jobTitleSpecified;
        }
        set
        {
            this._jobTitleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OrganizationSpecified
    {
        get
        {
            return this._organizationSpecified;
        }
        set
        {
            this._organizationSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StartDateSpecified
    {
        get
        {
            return this._startDateSpecified;
        }
        set
        {
            this._startDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StopDateSpecified
    {
        get
        {
            return this._stopDateSpecified;
        }
        set
        {
            this._stopDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether JobTitle should be serialized
    /// </summary>
    public virtual bool ShouldSerializeJobTitle()
    {
        return JobTitle != null && JobTitle.Count > 0;
    }
    
    /// <summary>
    /// Test whether Organization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOrganization()
    {
        return (_organization != null);
    }
    
    /// <summary>
    /// Test whether StartDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeStartDate()
    {
        return (_startDate != null);
    }
    
    /// <summary>
    /// Test whether StopDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeStopDate()
    {
        return (_stopDate != null);
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (_description != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A model structure for an Organization object.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class OrganizationType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _orgName;
    
    private string_Stype _department;
    
    private List<AddressType> _streetAddress;
    
    private List<EmailType> _email;
    
    private List<PhoneType> _phone;
    
    private List<anyURI_Stype> _webURL;
    
    private List<string_Stype> _role;
    
    private List<PersonType> _contactPerson;
    
    private List<IdentifierType> _identifier;
    
    private string_Stype _usage;
    
    private bool _orgNameSpecified;
    
    private bool _departmentSpecified;
    
    private bool _streetAddressSpecified;
    
    private bool _emailSpecified;
    
    private bool _phoneSpecified;
    
    private bool _webURLSpecified;
    
    private bool _roleSpecified;
    
    private bool _contactPersonSpecified;
    
    private bool _identifierSpecified;
    
    private bool _usageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
    public virtual string_Stype OrgName
    {
        get
        {
            return this._orgName;
        }
        set
        {
            if ((this._orgName == value))
            {
                return;
            }
            if (((this._orgName == null) 
                        || (_orgName.Equals(value) != true)))
            {
                this._orgName = value;
                this.OnPropertyChanged("OrgName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype Department
    {
        get
        {
            return this._department;
        }
        set
        {
            if ((this._department == value))
            {
                return;
            }
            if (((this._department == null) 
                        || (_department.Equals(value) != true)))
            {
                this._department = value;
                this.OnPropertyChanged("Department", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("StreetAddress", Order=2)]
    public virtual List<AddressType> StreetAddress
    {
        get
        {
            return this._streetAddress;
        }
        set
        {
            if ((this._streetAddress == value))
            {
                return;
            }
            if (((this._streetAddress == null) 
                        || (_streetAddress.Equals(value) != true)))
            {
                this._streetAddress = value;
                this.OnPropertyChanged("StreetAddress", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Email", Order=3)]
    public virtual List<EmailType> Email
    {
        get
        {
            return this._email;
        }
        set
        {
            if ((this._email == value))
            {
                return;
            }
            if (((this._email == null) 
                        || (_email.Equals(value) != true)))
            {
                this._email = value;
                this.OnPropertyChanged("Email", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Phone", Order=4)]
    public virtual List<PhoneType> Phone
    {
        get
        {
            return this._phone;
        }
        set
        {
            if ((this._phone == value))
            {
                return;
            }
            if (((this._phone == null) 
                        || (_phone.Equals(value) != true)))
            {
                this._phone = value;
                this.OnPropertyChanged("Phone", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("WebURL", Order=5)]
    public virtual List<anyURI_Stype> WebURL
    {
        get
        {
            return this._webURL;
        }
        set
        {
            if ((this._webURL == value))
            {
                return;
            }
            if (((this._webURL == null) 
                        || (_webURL.Equals(value) != true)))
            {
                this._webURL = value;
                this.OnPropertyChanged("WebURL", value);
            }
        }
    }
    
    /// <summary>
    /// Role of the organization, e.g., creator, copyright
    /// holder, accreditor, certifier, curator, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Role", Order=6)]
    public virtual List<string_Stype> Role
    {
        get
        {
            return this._role;
        }
        set
        {
            if ((this._role == value))
            {
                return;
            }
            if (((this._role == null) 
                        || (_role.Equals(value) != true)))
            {
                this._role = value;
                this.OnPropertyChanged("Role", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ContactPerson", Order=7)]
    public virtual List<PersonType> ContactPerson
    {
        get
        {
            return this._contactPerson;
        }
        set
        {
            if ((this._contactPerson == value))
            {
                return;
            }
            if (((this._contactPerson == null) 
                        || (_contactPerson.Equals(value) != true)))
            {
                this._contactPerson = value;
                this.OnPropertyChanged("ContactPerson", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Identifier", Order=8)]
    public virtual List<IdentifierType> Identifier
    {
        get
        {
            return this._identifier;
        }
        set
        {
            if ((this._identifier == value))
            {
                return;
            }
            if (((this._identifier == null) 
                        || (_identifier.Equals(value) != true)))
            {
                this._identifier = value;
                this.OnPropertyChanged("Identifier", value);
            }
        }
    }
    
    /// <summary>
    /// When this organization should be
    /// contacted.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=9)]
    public virtual string_Stype Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool OrgNameSpecified
    {
        get
        {
            return this._orgNameSpecified;
        }
        set
        {
            this._orgNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DepartmentSpecified
    {
        get
        {
            return this._departmentSpecified;
        }
        set
        {
            this._departmentSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StreetAddressSpecified
    {
        get
        {
            return this._streetAddressSpecified;
        }
        set
        {
            this._streetAddressSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EmailSpecified
    {
        get
        {
            return this._emailSpecified;
        }
        set
        {
            this._emailSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PhoneSpecified
    {
        get
        {
            return this._phoneSpecified;
        }
        set
        {
            this._phoneSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool WebURLSpecified
    {
        get
        {
            return this._webURLSpecified;
        }
        set
        {
            this._webURLSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RoleSpecified
    {
        get
        {
            return this._roleSpecified;
        }
        set
        {
            this._roleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ContactPersonSpecified
    {
        get
        {
            return this._contactPersonSpecified;
        }
        set
        {
            this._contactPersonSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool IdentifierSpecified
    {
        get
        {
            return this._identifierSpecified;
        }
        set
        {
            this._identifierSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether StreetAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeStreetAddress()
    {
        return StreetAddress != null && StreetAddress.Count > 0;
    }
    
    /// <summary>
    /// Test whether Email should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmail()
    {
        return Email != null && Email.Count > 0;
    }
    
    /// <summary>
    /// Test whether Phone should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhone()
    {
        return Phone != null && Phone.Count > 0;
    }
    
    /// <summary>
    /// Test whether WebURL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeWebURL()
    {
        return WebURL != null && WebURL.Count > 0;
    }
    
    /// <summary>
    /// Test whether Role should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRole()
    {
        return Role != null && Role.Count > 0;
    }
    
    /// <summary>
    /// Test whether ContactPerson should be serialized
    /// </summary>
    public virtual bool ShouldSerializeContactPerson()
    {
        return ContactPerson != null && ContactPerson.Count > 0;
    }
    
    /// <summary>
    /// Test whether Identifier should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIdentifier()
    {
        return Identifier != null && Identifier.Count > 0;
    }
    
    /// <summary>
    /// Test whether OrgName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOrgName()
    {
        return (_orgName != null);
    }
    
    /// <summary>
    /// Test whether Department should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDepartment()
    {
        return (_department != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A structure for recording street/mailing addresses.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class AddressType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _addressType1;
    
    private List<string_Stype> _internalAddress;
    
    private List<string_Stype> _addressLine;
    
    private string_Stype _city;
    
    private string_Stype _jurisdiction;
    
    private string_Stype _state;
    
    private string_Stype _postalCode;
    
    private string_Stype _country;
    
    private string_Stype _usage;
    
    private bool _addressType1Specified;
    
    private bool _internalAddressSpecified;
    
    private bool _addressLineSpecified;
    
    private bool _citySpecified;
    
    private bool _jurisdictionSpecified;
    
    private bool _stateSpecified;
    
    private bool _postalCodeSpecified;
    
    private bool _countrySpecified;
    
    private bool _usageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("AddressType", Order=0)]
    public virtual string_Stype AddressType1
    {
        get
        {
            return this._addressType1;
        }
        set
        {
            if ((this._addressType1 == value))
            {
                return;
            }
            if (((this._addressType1 == null) 
                        || (_addressType1.Equals(value) != true)))
            {
                this._addressType1 = value;
                this.OnPropertyChanged("AddressType1", value);
            }
        }
    }
    
    /// <summary>
    /// Address instructions for directing mail within an organizations buildings or corporate
    /// infrastructure.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("InternalAddress", Order=1)]
    public virtual List<string_Stype> InternalAddress
    {
        get
        {
            return this._internalAddress;
        }
        set
        {
            if ((this._internalAddress == value))
            {
                return;
            }
            if (((this._internalAddress == null) 
                        || (_internalAddress.Equals(value) != true)))
            {
                this._internalAddress = value;
                this.OnPropertyChanged("InternalAddress", value);
            }
        }
    }
    
    /// <summary>
    /// Address instructions for directing mail to a street address.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("AddressLine", Order=2)]
    public virtual List<string_Stype> AddressLine
    {
        get
        {
            return this._addressLine;
        }
        set
        {
            if ((this._addressLine == value))
            {
                return;
            }
            if (((this._addressLine == null) 
                        || (_addressLine.Equals(value) != true)))
            {
                this._addressLine = value;
                this.OnPropertyChanged("AddressLine", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype City
    {
        get
        {
            return this._city;
        }
        set
        {
            if ((this._city == value))
            {
                return;
            }
            if (((this._city == null) 
                        || (_city.Equals(value) != true)))
            {
                this._city = value;
                this.OnPropertyChanged("City", value);
            }
        }
    }
    
    /// <summary>
    /// Other optional locale identifier.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype Jurisdiction
    {
        get
        {
            return this._jurisdiction;
        }
        set
        {
            if ((this._jurisdiction == value))
            {
                return;
            }
            if (((this._jurisdiction == null) 
                        || (_jurisdiction.Equals(value) != true)))
            {
                this._jurisdiction = value;
                this.OnPropertyChanged("Jurisdiction", value);
            }
        }
    }
    
    /// <summary>
    /// State, Province, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual string_Stype State
    {
        get
        {
            return this._state;
        }
        set
        {
            if ((this._state == value))
            {
                return;
            }
            if (((this._state == null) 
                        || (_state.Equals(value) != true)))
            {
                this._state = value;
                this.OnPropertyChanged("State", value);
            }
        }
    }
    
    /// <summary>
    /// Local postal code, e.g., zip code.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual string_Stype PostalCode
    {
        get
        {
            return this._postalCode;
        }
        set
        {
            if ((this._postalCode == value))
            {
                return;
            }
            if (((this._postalCode == null) 
                        || (_postalCode.Equals(value) != true)))
            {
                this._postalCode = value;
                this.OnPropertyChanged("PostalCode", value);
            }
        }
    }
    
    /// <summary>
    /// **Need list of official country codes or text?
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual string_Stype Country
    {
        get
        {
            return this._country;
        }
        set
        {
            if ((this._country == value))
            {
                return;
            }
            if (((this._country == null) 
                        || (_country.Equals(value) != true)))
            {
                this._country = value;
                this.OnPropertyChanged("Country", value);
            }
        }
    }
    
    /// <summary>
    /// When this address should be used
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual string_Stype Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AddressType1Specified
    {
        get
        {
            return this._addressType1Specified;
        }
        set
        {
            this._addressType1Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool InternalAddressSpecified
    {
        get
        {
            return this._internalAddressSpecified;
        }
        set
        {
            this._internalAddressSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AddressLineSpecified
    {
        get
        {
            return this._addressLineSpecified;
        }
        set
        {
            this._addressLineSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CitySpecified
    {
        get
        {
            return this._citySpecified;
        }
        set
        {
            this._citySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool JurisdictionSpecified
    {
        get
        {
            return this._jurisdictionSpecified;
        }
        set
        {
            this._jurisdictionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StateSpecified
    {
        get
        {
            return this._stateSpecified;
        }
        set
        {
            this._stateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PostalCodeSpecified
    {
        get
        {
            return this._postalCodeSpecified;
        }
        set
        {
            this._postalCodeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CountrySpecified
    {
        get
        {
            return this._countrySpecified;
        }
        set
        {
            this._countrySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether InternalAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeInternalAddress()
    {
        return InternalAddress != null && InternalAddress.Count > 0;
    }
    
    /// <summary>
    /// Test whether AddressLine should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAddressLine()
    {
        return AddressLine != null && AddressLine.Count > 0;
    }
    
    /// <summary>
    /// Test whether AddressType1 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAddressType1()
    {
        return (_addressType1 != null);
    }
    
    /// <summary>
    /// Test whether City should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCity()
    {
        return (_city != null);
    }
    
    /// <summary>
    /// Test whether Jurisdiction should be serialized
    /// </summary>
    public virtual bool ShouldSerializeJurisdiction()
    {
        return (_jurisdiction != null);
    }
    
    /// <summary>
    /// Test whether State should be serialized
    /// </summary>
    public virtual bool ShouldSerializeState()
    {
        return (_state != null);
    }
    
    /// <summary>
    /// Test whether PostalCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializePostalCode()
    {
        return (_postalCode != null);
    }
    
    /// <summary>
    /// Test whether Country should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCountry()
    {
        return (_country != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A structure for recording email addresses.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class EmailType : ExtensionBaseType
{
    
    #region Private fields
    private EmailAddressType _emailAddress;
    
    private string_Stype _emailClass;
    
    private string_Stype _usage;
    
    private bool _emailAddressSpecified;
    
    private bool _emailClassSpecified;
    
    private bool _usageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual EmailAddressType EmailAddress
    {
        get
        {
            return this._emailAddress;
        }
        set
        {
            if ((this._emailAddress == value))
            {
                return;
            }
            if (((this._emailAddress == null) 
                        || (_emailAddress.Equals(value) != true)))
            {
                this._emailAddress = value;
                this.OnPropertyChanged("EmailAddress", value);
            }
        }
    }
    
    /// <summary>
    /// Type of email, e.g., home, office, etc
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype EmailClass
    {
        get
        {
            return this._emailClass;
        }
        set
        {
            if ((this._emailClass == value))
            {
                return;
            }
            if (((this._emailClass == null) 
                        || (_emailClass.Equals(value) != true)))
            {
                this._emailClass = value;
                this.OnPropertyChanged("EmailClass", value);
            }
        }
    }
    
    /// <summary>
    /// When this email should be used
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool EmailAddressSpecified
    {
        get
        {
            return this._emailAddressSpecified;
        }
        set
        {
            this._emailAddressSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EmailClassSpecified
    {
        get
        {
            return this._emailClassSpecified;
        }
        set
        {
            this._emailClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether EmailAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmailAddress()
    {
        return (_emailAddress != null);
    }
    
    /// <summary>
    /// Test whether EmailClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmailClass()
    {
        return (_emailClass != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ***Changed from BaseType to ExtensionBaseType
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class EmailAddressType : ExtensionBaseType
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A structure for recording telephone numbers.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PhoneType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _phoneType1;
    
    private CountryCodeType _countryCode;
    
    private AreaCodeType _areaCode;
    
    private PhoneNumberType _phoneNumber;
    
    private string_Stype _phoneExtension;
    
    private string_Stype _usage;
    
    private bool _phoneType1Specified;
    
    private bool _countryCodeSpecified;
    
    private bool _areaCodeSpecified;
    
    private bool _phoneNumberSpecified;
    
    private bool _phoneExtensionSpecified;
    
    private bool _usageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("PhoneType", Order=0)]
    public virtual string_Stype PhoneType1
    {
        get
        {
            return this._phoneType1;
        }
        set
        {
            if ((this._phoneType1 == value))
            {
                return;
            }
            if (((this._phoneType1 == null) 
                        || (_phoneType1.Equals(value) != true)))
            {
                this._phoneType1 = value;
                this.OnPropertyChanged("PhoneType1", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual CountryCodeType CountryCode
    {
        get
        {
            return this._countryCode;
        }
        set
        {
            if ((this._countryCode == value))
            {
                return;
            }
            if (((this._countryCode == null) 
                        || (_countryCode.Equals(value) != true)))
            {
                this._countryCode = value;
                this.OnPropertyChanged("CountryCode", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual AreaCodeType AreaCode
    {
        get
        {
            return this._areaCode;
        }
        set
        {
            if ((this._areaCode == value))
            {
                return;
            }
            if (((this._areaCode == null) 
                        || (_areaCode.Equals(value) != true)))
            {
                this._areaCode = value;
                this.OnPropertyChanged("AreaCode", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual PhoneNumberType PhoneNumber
    {
        get
        {
            return this._phoneNumber;
        }
        set
        {
            if ((this._phoneNumber == value))
            {
                return;
            }
            if (((this._phoneNumber == null) 
                        || (_phoneNumber.Equals(value) != true)))
            {
                this._phoneNumber = value;
                this.OnPropertyChanged("PhoneNumber", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype PhoneExtension
    {
        get
        {
            return this._phoneExtension;
        }
        set
        {
            if ((this._phoneExtension == value))
            {
                return;
            }
            if (((this._phoneExtension == null) 
                        || (_phoneExtension.Equals(value) != true)))
            {
                this._phoneExtension = value;
                this.OnPropertyChanged("PhoneExtension", value);
            }
        }
    }
    
    /// <summary>
    /// When this phone number should be used
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual string_Stype Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PhoneType1Specified
    {
        get
        {
            return this._phoneType1Specified;
        }
        set
        {
            this._phoneType1Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CountryCodeSpecified
    {
        get
        {
            return this._countryCodeSpecified;
        }
        set
        {
            this._countryCodeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AreaCodeSpecified
    {
        get
        {
            return this._areaCodeSpecified;
        }
        set
        {
            this._areaCodeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PhoneNumberSpecified
    {
        get
        {
            return this._phoneNumberSpecified;
        }
        set
        {
            this._phoneNumberSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PhoneExtensionSpecified
    {
        get
        {
            return this._phoneExtensionSpecified;
        }
        set
        {
            this._phoneExtensionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PhoneType1 should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneType1()
    {
        return (_phoneType1 != null);
    }
    
    /// <summary>
    /// Test whether CountryCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCountryCode()
    {
        return (_countryCode != null);
    }
    
    /// <summary>
    /// Test whether AreaCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAreaCode()
    {
        return (_areaCode != null);
    }
    
    /// <summary>
    /// Test whether PhoneNumber should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneNumber()
    {
        return (_phoneNumber != null);
    }
    
    /// <summary>
    /// Test whether PhoneExtension should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneExtension()
    {
        return (_phoneExtension != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class CountryCodeType : BaseType
{
    
    #region Private fields
    private byte _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual byte val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class AreaCodeType : BaseType
{
    
    #region Private fields
    private bool _shouldSerializeval;
    
    private ushort _val;
    
    private bool valFieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual ushort val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((_val.Equals(value) != true))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
            _shouldSerializeval = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool valSpecified
    {
        get
        {
            return this.valFieldSpecified;
        }
        set
        {
            if ((valFieldSpecified.Equals(value) != true))
            {
                this.valFieldSpecified = value;
                this.OnPropertyChanged("valSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        if (_shouldSerializeval)
        {
            return true;
        }
        return (_val != default(ushort));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ***Changed from BaseType to ExtensionBaseType
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PhoneNumberType : ExtensionBaseType
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A code or id that identifies a person or organization or object according to a standard system such as CLIA or NPI. The system should be specified in the @system attribute.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class IdentifierType : ExtensionBaseType
{
    
    #region Private fields
    private string _system;
    
    private string _val;
    
    private bool _systemSpecified;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string system
    {
        get
        {
            return this._system;
        }
        set
        {
            if ((this._system == value))
            {
                return;
            }
            if (((this._system == null) 
                        || (_system.Equals(value) != true)))
            {
                this._system = value;
                this.OnPropertyChanged("system", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool systemSpecified
    {
        get
        {
            return this._systemSpecified;
        }
        set
        {
            this._systemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether system should be serialized
    /// </summary>
    public virtual bool ShouldSerializesystem()
    {
        return !string.IsNullOrEmpty(system);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Add a custom event handler to a form item such as a question, section
/// or list item.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class OnEventType : EventType
{
    
    #region Private fields
    private string _eventName;
    
    private bool _eventNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string eventName
    {
        get
        {
            return this._eventName;
        }
        set
        {
            if ((this._eventName == value))
            {
                return;
            }
            if (((this._eventName == null) 
                        || (_eventName.Equals(value) != true)))
            {
                this._eventName = value;
                this.OnPropertyChanged("eventName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool eventNameSpecified
    {
        get
        {
            return this._eventNameSpecified;
        }
        set
        {
            this._eventNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether eventName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeeventName()
    {
        return !string.IsNullOrEmpty(eventName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredGuardType : FuncBoolBaseType
{
    
    #region Private fields
    private bool _shouldSerializeboolOp;
    
    private bool _shouldSerializenot;
    
    private List<ExtensionBaseType> _items;
    
    private bool _not;
    
    private PredEvalAttribValuesTypeBoolOp _boolOp;
    
    private bool _itemsSpecified;
    
    private bool _notSpecified;
    
    private bool _boolOpSpecified;
    #endregion
    
    /// <summary>
    /// PredGuardType class constructor
    /// </summary>
    public PredGuardType()
    {
        this._not = false;
        this._boolOp = PredEvalAttribValuesTypeBoolOp.AND;
    }
    
    [System.Xml.Serialization.XmlElementAttribute("AttributeEval", typeof(PredEvalAttribValuesType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("CallBoolFunc", typeof(CallFuncBoolType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Group", typeof(PredGuardType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ItemAlternatives", typeof(PredAlternativesType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("MultiSelections", typeof(PredMultiSelectionSetBoolType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ScriptBoolFunc", typeof(ScriptCodeBoolType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionSets", typeof(PredGuardTypeSelectionSets), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionTest", typeof(PredSelectionTestType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(PredEvalAttribValuesTypeBoolOp.AND)]
    public virtual PredEvalAttribValuesTypeBoolOp boolOp
    {
        get
        {
            return this._boolOp;
        }
        set
        {
            if ((_boolOp.Equals(value) != true))
            {
                this._boolOp = value;
                this.OnPropertyChanged("boolOp", value);
            }
            _shouldSerializeboolOp = true;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool boolOpSpecified
    {
        get
        {
            return this._boolOpSpecified;
        }
        set
        {
            this._boolOpSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether boolOp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeboolOp()
    {
        if (_shouldSerializeboolOp)
        {
            return true;
        }
        return (_boolOp != default(PredEvalAttribValuesTypeBoolOp));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule evaluates an arbitrary set of attribute values from any item
/// and returns a Boolean summary value. In the PropertyValues condition, the contained
/// Boolean attributed values are ANDed together (by default) to return a derived
/// Boolean value. Default values are used if the attribute is not explicitly set to a
/// value. For attributes without default values, omitted (null) values are ignored and
/// are not used for null propagation.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttributeEvalActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredEvalAttribValuesType : FuncBoolBaseType
{
    
    #region Private fields
    private bool _shouldSerializeboolOp;
    
    private bool _shouldSerializehasValue;
    
    private bool _shouldSerializeisReadOnly;
    
    private bool _shouldSerializeisRequired;
    
    private bool _shouldSerializeisEnabled;
    
    private bool _shouldSerializeisVisible;
    
    private bool _shouldSerializehasResponse;
    
    private bool _shouldSerializeisActive;
    
    private bool _shouldSerializeisSelected;
    
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private PredEvalAttribValuesTypeBoolOp _boolOp;
    
    private string _itemNames;
    
    private bool _isSelected;
    
    private bool isSelectedFieldSpecified;
    
    private bool _isActive;
    
    private bool isActiveFieldSpecified;
    
    private string _hasSelectionsGTE;
    
    private string _hasSelectionsLTE;
    
    private string _hasSelectionsExact;
    
    private bool _hasResponse;
    
    private bool hasResponseFieldSpecified;
    
    private bool _isVisible;
    
    private bool isVisibleFieldSpecified;
    
    private bool _isEnabled;
    
    private bool isEnabledFieldSpecified;
    
    private bool _isRequired;
    
    private bool isRequiredFieldSpecified;
    
    private bool _isReadOnly;
    
    private bool isReadOnlyFieldSpecified;
    
    private string _hasType;
    
    private string _hasStyleClass;
    
    private bool _hasValue;
    
    private bool hasValueFieldSpecified;
    
    private string _supportDatesAndIntervals;
    
    private string _hasPattern;
    
    private string _hasValueEQ;
    
    private string _hasValueLT;
    
    private string _hasValueLTE;
    
    private string _hasValueGT;
    
    private string _hasValueGTE;
    
    private string _hasAssociatedValueEQ;
    
    private string _hasAssociatedValueLT;
    
    private string _hasAssociatedValueLTE;
    
    private string _hasAssociatedValueGT;
    
    private string _hasAssociatedValueGTE;
    
    private bool _notSpecified;
    
    private bool _boolOpSpecified;
    
    private bool _itemNamesSpecified;
    
    private bool _hasSelectionsGTESpecified;
    
    private bool _hasSelectionsLTESpecified;
    
    private bool _hasSelectionsExactSpecified;
    
    private bool _hasTypeSpecified;
    
    private bool _hasStyleClassSpecified;
    
    private bool _supportDatesAndIntervalsSpecified;
    
    private bool _hasPatternSpecified;
    
    private bool _hasValueEQSpecified;
    
    private bool _hasValueLTSpecified;
    
    private bool _hasValueLTESpecified;
    
    private bool _hasValueGTSpecified;
    
    private bool _hasValueGTESpecified;
    
    private bool _hasAssociatedValueEQSpecified;
    
    private bool _hasAssociatedValueLTSpecified;
    
    private bool _hasAssociatedValueLTESpecified;
    
    private bool _hasAssociatedValueGTSpecified;
    
    private bool _hasAssociatedValueGTESpecified;
    #endregion
    
    /// <summary>
    /// PredEvalAttribValuesType class constructor
    /// </summary>
    public PredEvalAttribValuesType()
    {
        this._not = false;
        this._boolOp = PredEvalAttribValuesTypeBoolOp.AND;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(PredEvalAttribValuesTypeBoolOp.AND)]
    public virtual PredEvalAttribValuesTypeBoolOp boolOp
    {
        get
        {
            return this._boolOp;
        }
        set
        {
            if ((_boolOp.Equals(value) != true))
            {
                this._boolOp = value;
                this.OnPropertyChanged("boolOp", value);
            }
            _shouldSerializeboolOp = true;
        }
    }
    
    /// <summary>
    /// Required. This attribute holds the @name attributes of the
    /// item(s) (Section, Question, List Item) to interrogate. These named items
    /// will be searched for attribute values specified in this Type. If a named
    /// item does not have a particualr attribute, then the attribute condition
    /// is ignored for that named item. It does not generate an error or a null
    /// propagation response.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string itemNames
    {
        get
        {
            return this._itemNames;
        }
        set
        {
            if ((this._itemNames == value))
            {
                return;
            }
            if (((this._itemNames == null) 
                        || (_itemNames.Equals(value) != true)))
            {
                this._itemNames = value;
                this.OnPropertyChanged("itemNames", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isSelected
    {
        get
        {
            return this._isSelected;
        }
        set
        {
            if ((_isSelected.Equals(value) != true))
            {
                this._isSelected = value;
                this.OnPropertyChanged("isSelected", value);
            }
            _shouldSerializeisSelected = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isSelectedSpecified
    {
        get
        {
            return this.isSelectedFieldSpecified;
        }
        set
        {
            if ((isSelectedFieldSpecified.Equals(value) != true))
            {
                this.isSelectedFieldSpecified = value;
                this.OnPropertyChanged("isSelectedSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// If visible and enabled are both true, then isActive is
    /// true. Otherwise, it is false.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isActive
    {
        get
        {
            return this._isActive;
        }
        set
        {
            if ((_isActive.Equals(value) != true))
            {
                this._isActive = value;
                this.OnPropertyChanged("isActive", value);
            }
            _shouldSerializeisActive = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isActiveSpecified
    {
        get
        {
            return this.isActiveFieldSpecified;
        }
        set
        {
            if ((isActiveFieldSpecified.Equals(value) != true))
            {
                this.isActiveFieldSpecified = value;
                this.OnPropertyChanged("isActiveSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Applies only to Questions that have selection lists
    /// (ListItems or LookupField). Evaluates to true if the number of selected
    /// items equals or exceeds the entered value.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string hasSelectionsGTE
    {
        get
        {
            return this._hasSelectionsGTE;
        }
        set
        {
            if ((this._hasSelectionsGTE == value))
            {
                return;
            }
            if (((this._hasSelectionsGTE == null) 
                        || (_hasSelectionsGTE.Equals(value) != true)))
            {
                this._hasSelectionsGTE = value;
                this.OnPropertyChanged("hasSelectionsGTE", value);
            }
        }
    }
    
    /// <summary>
    /// Applies only to Questions that have selection lists
    /// (ListItems or LookupField). Evaluates to true if the number of selected
    /// items is less than or equal to the entered value.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string hasSelectionsLTE
    {
        get
        {
            return this._hasSelectionsLTE;
        }
        set
        {
            if ((this._hasSelectionsLTE == value))
            {
                return;
            }
            if (((this._hasSelectionsLTE == null) 
                        || (_hasSelectionsLTE.Equals(value) != true)))
            {
                this._hasSelectionsLTE = value;
                this.OnPropertyChanged("hasSelectionsLTE", value);
            }
        }
    }
    
    /// <summary>
    /// Applies only to Questions that have selection lists
    /// (ListItems or LookupField). Evaluates to true if the number of selected
    /// items equals the entered value.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string hasSelectionsExact
    {
        get
        {
            return this._hasSelectionsExact;
        }
        set
        {
            if ((this._hasSelectionsExact == value))
            {
                return;
            }
            if (((this._hasSelectionsExact == null) 
                        || (_hasSelectionsExact.Equals(value) != true)))
            {
                this._hasSelectionsExact = value;
                this.OnPropertyChanged("hasSelectionsExact", value);
            }
        }
    }
    
    /// <summary>
    /// Applies only to items that have Response Fields (Questions
    /// and ListItems). If the ListItem or Question has a Response Field, and
    /// that field has a value in it, this property returns true. If it does not
    /// have a value, it returns false. If no Response Field is present, it
    /// retuns null and is not used for Boolean comparisons.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool hasResponse
    {
        get
        {
            return this._hasResponse;
        }
        set
        {
            if ((_hasResponse.Equals(value) != true))
            {
                this._hasResponse = value;
                this.OnPropertyChanged("hasResponse", value);
            }
            _shouldSerializehasResponse = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool hasResponseSpecified
    {
        get
        {
            return this.hasResponseFieldSpecified;
        }
        set
        {
            if ((hasResponseFieldSpecified.Equals(value) != true))
            {
                this.hasResponseFieldSpecified = value;
                this.OnPropertyChanged("hasResponseSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isVisible
    {
        get
        {
            return this._isVisible;
        }
        set
        {
            if ((_isVisible.Equals(value) != true))
            {
                this._isVisible = value;
                this.OnPropertyChanged("isVisible", value);
            }
            _shouldSerializeisVisible = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isVisibleSpecified
    {
        get
        {
            return this.isVisibleFieldSpecified;
        }
        set
        {
            if ((isVisibleFieldSpecified.Equals(value) != true))
            {
                this.isVisibleFieldSpecified = value;
                this.OnPropertyChanged("isVisibleSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isEnabled
    {
        get
        {
            return this._isEnabled;
        }
        set
        {
            if ((_isEnabled.Equals(value) != true))
            {
                this._isEnabled = value;
                this.OnPropertyChanged("isEnabled", value);
            }
            _shouldSerializeisEnabled = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isEnabledSpecified
    {
        get
        {
            return this.isEnabledFieldSpecified;
        }
        set
        {
            if ((isEnabledFieldSpecified.Equals(value) != true))
            {
                this.isEnabledFieldSpecified = value;
                this.OnPropertyChanged("isEnabledSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// If the minCard value is greater than 0, then isRequired =
    /// "true" If the minCard = "0" then isRequired = "false"
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isRequired
    {
        get
        {
            return this._isRequired;
        }
        set
        {
            if ((_isRequired.Equals(value) != true))
            {
                this._isRequired = value;
                this.OnPropertyChanged("isRequired", value);
            }
            _shouldSerializeisRequired = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isRequiredSpecified
    {
        get
        {
            return this.isRequiredFieldSpecified;
        }
        set
        {
            if ((isRequiredFieldSpecified.Equals(value) != true))
            {
                this.isRequiredFieldSpecified = value;
                this.OnPropertyChanged("isRequiredSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool isReadOnly
    {
        get
        {
            return this._isReadOnly;
        }
        set
        {
            if ((_isReadOnly.Equals(value) != true))
            {
                this._isReadOnly = value;
                this.OnPropertyChanged("isReadOnly", value);
            }
            _shouldSerializeisReadOnly = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool isReadOnlySpecified
    {
        get
        {
            return this.isReadOnlyFieldSpecified;
        }
        set
        {
            if ((isReadOnlyFieldSpecified.Equals(value) != true))
            {
                this.isReadOnlyFieldSpecified = value;
                this.OnPropertyChanged("isReadOnlySpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string hasType
    {
        get
        {
            return this._hasType;
        }
        set
        {
            if ((this._hasType == value))
            {
                return;
            }
            if (((this._hasType == null) 
                        || (_hasType.Equals(value) != true)))
            {
                this._hasType = value;
                this.OnPropertyChanged("hasType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string hasStyleClass
    {
        get
        {
            return this._hasStyleClass;
        }
        set
        {
            if ((this._hasStyleClass == value))
            {
                return;
            }
            if (((this._hasStyleClass == null) 
                        || (_hasStyleClass.Equals(value) != true)))
            {
                this._hasStyleClass = value;
                this.OnPropertyChanged("hasStyleClass", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool hasValue
    {
        get
        {
            return this._hasValue;
        }
        set
        {
            if ((_hasValue.Equals(value) != true))
            {
                this._hasValue = value;
                this.OnPropertyChanged("hasValue", value);
            }
            _shouldSerializehasValue = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool hasValueSpecified
    {
        get
        {
            return this.hasValueFieldSpecified;
        }
        set
        {
            if ((hasValueFieldSpecified.Equals(value) != true))
            {
                this.hasValueFieldSpecified = value;
                this.OnPropertyChanged("hasValueSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("supportDatesAndIntervals...")]
    public virtual string supportDatesAndIntervals
    {
        get
        {
            return this._supportDatesAndIntervals;
        }
        set
        {
            if ((this._supportDatesAndIntervals == value))
            {
                return;
            }
            if (((this._supportDatesAndIntervals == null) 
                        || (_supportDatesAndIntervals.Equals(value) != true)))
            {
                this._supportDatesAndIntervals = value;
                this.OnPropertyChanged("supportDatesAndIntervals", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasPattern
    {
        get
        {
            return this._hasPattern;
        }
        set
        {
            if ((this._hasPattern == value))
            {
                return;
            }
            if (((this._hasPattern == null) 
                        || (_hasPattern.Equals(value) != true)))
            {
                this._hasPattern = value;
                this.OnPropertyChanged("hasPattern", value);
            }
        }
    }
    
    /// <summary>
    /// If the value is peceded by a colon (:) sign, then it is a
    /// reference to the @val attribute of another element. References can refer
    /// to any element with an @val attribute or @propVal on a Property. The
    /// datatype must be cast to the appropriate target
    /// datatype.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasValueEQ
    {
        get
        {
            return this._hasValueEQ;
        }
        set
        {
            if ((this._hasValueEQ == value))
            {
                return;
            }
            if (((this._hasValueEQ == null) 
                        || (_hasValueEQ.Equals(value) != true)))
            {
                this._hasValueEQ = value;
                this.OnPropertyChanged("hasValueEQ", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasValueLT
    {
        get
        {
            return this._hasValueLT;
        }
        set
        {
            if ((this._hasValueLT == value))
            {
                return;
            }
            if (((this._hasValueLT == null) 
                        || (_hasValueLT.Equals(value) != true)))
            {
                this._hasValueLT = value;
                this.OnPropertyChanged("hasValueLT", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasValueLTE
    {
        get
        {
            return this._hasValueLTE;
        }
        set
        {
            if ((this._hasValueLTE == value))
            {
                return;
            }
            if (((this._hasValueLTE == null) 
                        || (_hasValueLTE.Equals(value) != true)))
            {
                this._hasValueLTE = value;
                this.OnPropertyChanged("hasValueLTE", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasValueGT
    {
        get
        {
            return this._hasValueGT;
        }
        set
        {
            if ((this._hasValueGT == value))
            {
                return;
            }
            if (((this._hasValueGT == null) 
                        || (_hasValueGT.Equals(value) != true)))
            {
                this._hasValueGT = value;
                this.OnPropertyChanged("hasValueGT", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasValueGTE
    {
        get
        {
            return this._hasValueGTE;
        }
        set
        {
            if ((this._hasValueGTE == value))
            {
                return;
            }
            if (((this._hasValueGTE == null) 
                        || (_hasValueGTE.Equals(value) != true)))
            {
                this._hasValueGTE = value;
                this.OnPropertyChanged("hasValueGTE", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasAssociatedValueEQ
    {
        get
        {
            return this._hasAssociatedValueEQ;
        }
        set
        {
            if ((this._hasAssociatedValueEQ == value))
            {
                return;
            }
            if (((this._hasAssociatedValueEQ == null) 
                        || (_hasAssociatedValueEQ.Equals(value) != true)))
            {
                this._hasAssociatedValueEQ = value;
                this.OnPropertyChanged("hasAssociatedValueEQ", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasAssociatedValueLT
    {
        get
        {
            return this._hasAssociatedValueLT;
        }
        set
        {
            if ((this._hasAssociatedValueLT == value))
            {
                return;
            }
            if (((this._hasAssociatedValueLT == null) 
                        || (_hasAssociatedValueLT.Equals(value) != true)))
            {
                this._hasAssociatedValueLT = value;
                this.OnPropertyChanged("hasAssociatedValueLT", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasAssociatedValueLTE
    {
        get
        {
            return this._hasAssociatedValueLTE;
        }
        set
        {
            if ((this._hasAssociatedValueLTE == value))
            {
                return;
            }
            if (((this._hasAssociatedValueLTE == null) 
                        || (_hasAssociatedValueLTE.Equals(value) != true)))
            {
                this._hasAssociatedValueLTE = value;
                this.OnPropertyChanged("hasAssociatedValueLTE", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasAssociatedValueGT
    {
        get
        {
            return this._hasAssociatedValueGT;
        }
        set
        {
            if ((this._hasAssociatedValueGT == value))
            {
                return;
            }
            if (((this._hasAssociatedValueGT == null) 
                        || (_hasAssociatedValueGT.Equals(value) != true)))
            {
                this._hasAssociatedValueGT = value;
                this.OnPropertyChanged("hasAssociatedValueGT", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string hasAssociatedValueGTE
    {
        get
        {
            return this._hasAssociatedValueGTE;
        }
        set
        {
            if ((this._hasAssociatedValueGTE == value))
            {
                return;
            }
            if (((this._hasAssociatedValueGTE == null) 
                        || (_hasAssociatedValueGTE.Equals(value) != true)))
            {
                this._hasAssociatedValueGTE = value;
                this.OnPropertyChanged("hasAssociatedValueGTE", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool boolOpSpecified
    {
        get
        {
            return this._boolOpSpecified;
        }
        set
        {
            this._boolOpSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool itemNamesSpecified
    {
        get
        {
            return this._itemNamesSpecified;
        }
        set
        {
            this._itemNamesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasSelectionsGTESpecified
    {
        get
        {
            return this._hasSelectionsGTESpecified;
        }
        set
        {
            this._hasSelectionsGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasSelectionsLTESpecified
    {
        get
        {
            return this._hasSelectionsLTESpecified;
        }
        set
        {
            this._hasSelectionsLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasSelectionsExactSpecified
    {
        get
        {
            return this._hasSelectionsExactSpecified;
        }
        set
        {
            this._hasSelectionsExactSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasTypeSpecified
    {
        get
        {
            return this._hasTypeSpecified;
        }
        set
        {
            this._hasTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasStyleClassSpecified
    {
        get
        {
            return this._hasStyleClassSpecified;
        }
        set
        {
            this._hasStyleClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool supportDatesAndIntervalsSpecified
    {
        get
        {
            return this._supportDatesAndIntervalsSpecified;
        }
        set
        {
            this._supportDatesAndIntervalsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasPatternSpecified
    {
        get
        {
            return this._hasPatternSpecified;
        }
        set
        {
            this._hasPatternSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasValueEQSpecified
    {
        get
        {
            return this._hasValueEQSpecified;
        }
        set
        {
            this._hasValueEQSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasValueLTSpecified
    {
        get
        {
            return this._hasValueLTSpecified;
        }
        set
        {
            this._hasValueLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasValueLTESpecified
    {
        get
        {
            return this._hasValueLTESpecified;
        }
        set
        {
            this._hasValueLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasValueGTSpecified
    {
        get
        {
            return this._hasValueGTSpecified;
        }
        set
        {
            this._hasValueGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasValueGTESpecified
    {
        get
        {
            return this._hasValueGTESpecified;
        }
        set
        {
            this._hasValueGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasAssociatedValueEQSpecified
    {
        get
        {
            return this._hasAssociatedValueEQSpecified;
        }
        set
        {
            this._hasAssociatedValueEQSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasAssociatedValueLTSpecified
    {
        get
        {
            return this._hasAssociatedValueLTSpecified;
        }
        set
        {
            this._hasAssociatedValueLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasAssociatedValueLTESpecified
    {
        get
        {
            return this._hasAssociatedValueLTESpecified;
        }
        set
        {
            this._hasAssociatedValueLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasAssociatedValueGTSpecified
    {
        get
        {
            return this._hasAssociatedValueGTSpecified;
        }
        set
        {
            this._hasAssociatedValueGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool hasAssociatedValueGTESpecified
    {
        get
        {
            return this._hasAssociatedValueGTESpecified;
        }
        set
        {
            this._hasAssociatedValueGTESpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether isSelected should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisSelected()
    {
        if (_shouldSerializeisSelected)
        {
            return true;
        }
        return (_isSelected != default(bool));
    }
    
    /// <summary>
    /// Test whether isActive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisActive()
    {
        if (_shouldSerializeisActive)
        {
            return true;
        }
        return (_isActive != default(bool));
    }
    
    /// <summary>
    /// Test whether hasResponse should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasResponse()
    {
        if (_shouldSerializehasResponse)
        {
            return true;
        }
        return (_hasResponse != default(bool));
    }
    
    /// <summary>
    /// Test whether isVisible should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisVisible()
    {
        if (_shouldSerializeisVisible)
        {
            return true;
        }
        return (_isVisible != default(bool));
    }
    
    /// <summary>
    /// Test whether isEnabled should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisEnabled()
    {
        if (_shouldSerializeisEnabled)
        {
            return true;
        }
        return (_isEnabled != default(bool));
    }
    
    /// <summary>
    /// Test whether isRequired should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisRequired()
    {
        if (_shouldSerializeisRequired)
        {
            return true;
        }
        return (_isRequired != default(bool));
    }
    
    /// <summary>
    /// Test whether isReadOnly should be serialized
    /// </summary>
    public virtual bool ShouldSerializeisReadOnly()
    {
        if (_shouldSerializeisReadOnly)
        {
            return true;
        }
        return (_isReadOnly != default(bool));
    }
    
    /// <summary>
    /// Test whether hasValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValue()
    {
        if (_shouldSerializehasValue)
        {
            return true;
        }
        return (_hasValue != default(bool));
    }
    
    /// <summary>
    /// Test whether boolOp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeboolOp()
    {
        if (_shouldSerializeboolOp)
        {
            return true;
        }
        return (_boolOp != default(PredEvalAttribValuesTypeBoolOp));
    }
    
    /// <summary>
    /// Test whether itemNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializeitemNames()
    {
        return !string.IsNullOrEmpty(itemNames);
    }
    
    /// <summary>
    /// Test whether hasSelectionsGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasSelectionsGTE()
    {
        return !string.IsNullOrEmpty(hasSelectionsGTE);
    }
    
    /// <summary>
    /// Test whether hasSelectionsLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasSelectionsLTE()
    {
        return !string.IsNullOrEmpty(hasSelectionsLTE);
    }
    
    /// <summary>
    /// Test whether hasSelectionsExact should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasSelectionsExact()
    {
        return !string.IsNullOrEmpty(hasSelectionsExact);
    }
    
    /// <summary>
    /// Test whether hasType should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasType()
    {
        return !string.IsNullOrEmpty(hasType);
    }
    
    /// <summary>
    /// Test whether hasStyleClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasStyleClass()
    {
        return !string.IsNullOrEmpty(hasStyleClass);
    }
    
    /// <summary>
    /// Test whether supportDatesAndIntervals should be serialized
    /// </summary>
    public virtual bool ShouldSerializesupportDatesAndIntervals()
    {
        return !string.IsNullOrEmpty(supportDatesAndIntervals);
    }
    
    /// <summary>
    /// Test whether hasPattern should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasPattern()
    {
        return !string.IsNullOrEmpty(hasPattern);
    }
    
    /// <summary>
    /// Test whether hasValueEQ should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValueEQ()
    {
        return !string.IsNullOrEmpty(hasValueEQ);
    }
    
    /// <summary>
    /// Test whether hasValueLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValueLT()
    {
        return !string.IsNullOrEmpty(hasValueLT);
    }
    
    /// <summary>
    /// Test whether hasValueLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValueLTE()
    {
        return !string.IsNullOrEmpty(hasValueLTE);
    }
    
    /// <summary>
    /// Test whether hasValueGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValueGT()
    {
        return !string.IsNullOrEmpty(hasValueGT);
    }
    
    /// <summary>
    /// Test whether hasValueGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasValueGTE()
    {
        return !string.IsNullOrEmpty(hasValueGTE);
    }
    
    /// <summary>
    /// Test whether hasAssociatedValueEQ should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasAssociatedValueEQ()
    {
        return !string.IsNullOrEmpty(hasAssociatedValueEQ);
    }
    
    /// <summary>
    /// Test whether hasAssociatedValueLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasAssociatedValueLT()
    {
        return !string.IsNullOrEmpty(hasAssociatedValueLT);
    }
    
    /// <summary>
    /// Test whether hasAssociatedValueLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasAssociatedValueLTE()
    {
        return !string.IsNullOrEmpty(hasAssociatedValueLTE);
    }
    
    /// <summary>
    /// Test whether hasAssociatedValueGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasAssociatedValueGT()
    {
        return !string.IsNullOrEmpty(hasAssociatedValueGT);
    }
    
    /// <summary>
    /// Test whether hasAssociatedValueGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializehasAssociatedValueGTE()
    {
        return !string.IsNullOrEmpty(hasAssociatedValueGTE);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum PredEvalAttribValuesTypeBoolOp
{
    
    AND,
    
    OR,
    
    XOR,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a Boolean value.  Items that inherit from this class must test the result for being a Boolean true/false value or null.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredAlternativesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredGuardType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredMultiSelectionSetBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiSelectionsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredEvalAttribValuesType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AttributeEvalActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(OnEventType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSingleSelectionSetsType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionSetsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSelectionTestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionTestActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class FuncBoolBaseType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializereturnVal;
    
    private bool _shouldSerializeallowNull;
    
    private bool _allowNull;
    
    private string _validationMessage;
    
    private bool _returnVal;
    
    private bool returnValFieldSpecified;
    
    private bool _allowNullSpecified;
    
    private bool _validationMessageSpecified;
    #endregion
    
    /// <summary>
    /// FuncBoolBaseType class constructor
    /// </summary>
    public FuncBoolBaseType()
    {
        this._allowNull = true;
    }
    
    /// <summary>
    /// True means that null values are allowed in @returnVal.  This corresponds to an empty string in @val or a missing @returnVal attribute.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool allowNull
    {
        get
        {
            return this._allowNull;
        }
        set
        {
            if ((_allowNull.Equals(value) != true))
            {
                this._allowNull = value;
                this.OnPropertyChanged("allowNull", value);
            }
            _shouldSerializeallowNull = true;
        }
    }
    
    /// <summary>
    /// Optional message that appears when the rule evaluates to true
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string validationMessage
    {
        get
        {
            return this._validationMessage;
        }
        set
        {
            if ((this._validationMessage == value))
            {
                return;
            }
            if (((this._validationMessage == null) 
                        || (_validationMessage.Equals(value) != true)))
            {
                this._validationMessage = value;
                this.OnPropertyChanged("validationMessage", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool returnVal
    {
        get
        {
            return this._returnVal;
        }
        set
        {
            if ((_returnVal.Equals(value) != true))
            {
                this._returnVal = value;
                this.OnPropertyChanged("returnVal", value);
            }
            _shouldSerializereturnVal = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool returnValSpecified
    {
        get
        {
            return this.returnValFieldSpecified;
        }
        set
        {
            if ((returnValFieldSpecified.Equals(value) != true))
            {
                this.returnValFieldSpecified = value;
                this.OnPropertyChanged("returnValSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool allowNullSpecified
    {
        get
        {
            return this._allowNullSpecified;
        }
        set
        {
            this._allowNullSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validationMessageSpecified
    {
        get
        {
            return this._validationMessageSpecified;
        }
        set
        {
            this._validationMessageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowNull should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowNull()
    {
        if (_shouldSerializeallowNull)
        {
            return true;
        }
        return (_allowNull != default(bool));
    }
    
    /// <summary>
    /// Test whether returnVal should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnVal()
    {
        if (_shouldSerializereturnVal)
        {
            return true;
        }
        return (_returnVal != default(bool));
    }
    
    /// <summary>
    /// Test whether validationMessage should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidationMessage()
    {
        return !string.IsNullOrEmpty(validationMessage);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule tests if one (or more) items in a list of items has received
/// a a valid user response (answer). In the simplest case, this Rule allows a user to
/// answer only one of several alternative questions (named in the @itemNames list), and
/// still save a successfully-validated form. In more complex cases, a user can be
/// required to produce a valid response to a specific minimum and maximum number of
/// Questions, Sections, ListItems or Injected parts. The minCard value on each of the
/// alternative items should be set to "0" (i.e., optional) to avoid validation
/// conflicts when minCard greater than 0. The list of Item @name values is contained in
/// @itemNames. The list must contain at least 2 @name values. The minimum number of
/// items to answer is contained in @minAnswered (default value = 1). If there is a
/// maximum number of items to answer, the value is contained in @maxAnswered (default
/// value = 0 meaning unlimited).
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredAlternativesType : FuncBoolBaseType
{
    
    #region Private fields
    private bool _shouldSerializemaxAnswered;
    
    private bool _shouldSerializeminAnswered;
    
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private int _minAnswered;
    
    private int _maxAnswered;
    
    private string _itemNames;
    
    private bool _notSpecified;
    
    private bool _minAnsweredSpecified;
    
    private bool _maxAnsweredSpecified;
    
    private bool _itemNamesSpecified;
    #endregion
    
    /// <summary>
    /// PredAlternativesType class constructor
    /// </summary>
    public PredAlternativesType()
    {
        this._not = false;
        this._minAnswered = 1;
        this._maxAnswered = 0;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(1)]
    public virtual int minAnswered
    {
        get
        {
            return this._minAnswered;
        }
        set
        {
            if ((_minAnswered.Equals(value) != true))
            {
                this._minAnswered = value;
                this.OnPropertyChanged("minAnswered", value);
            }
            _shouldSerializeminAnswered = true;
        }
    }
    
    /// <summary>
    /// @maxAnswered must be 0 or greater than or equal to
    /// @minAnswered.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(0)]
    public virtual int maxAnswered
    {
        get
        {
            return this._maxAnswered;
        }
        set
        {
            if ((_maxAnswered.Equals(value) != true))
            {
                this._maxAnswered = value;
                this.OnPropertyChanged("maxAnswered", value);
            }
            _shouldSerializemaxAnswered = true;
        }
    }
    
    /// <summary>
    /// List of names of Sections, Questions, ListItems and/or
    /// InjectedItems. Each of the named items will evaluate to true or false,
    /// based on the following validation rules: If the name points to a
    /// Section, then the Section evaluates to true (valid) if all of its
    /// descendant items are answered correctly, according to their metadata. If
    /// the name points to a Question then the Question evaluates to true
    /// (valid) if it is correctly answered according to its metadata, and also,
    /// all descendant items are answered correctly, according to their
    /// metadata. If the name points to a ListItem then the ListItem evaluates
    /// to true (valid) if it is selected, and also, all descendant items are
    /// answered correctly according to their metadata. If the name points to an
    /// InjectedItem then the InjectedItem evaluates to true (valid) if all
    /// descendant items are answered correctly, according to their metadata.
    /// The number of true responses are added together. If they satisfy the
    /// minAnswered and maxAnswered attribute values, then this type returns
    /// true. Otherwise it returns false.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string itemNames
    {
        get
        {
            return this._itemNames;
        }
        set
        {
            if ((this._itemNames == value))
            {
                return;
            }
            if (((this._itemNames == null) 
                        || (_itemNames.Equals(value) != true)))
            {
                this._itemNames = value;
                this.OnPropertyChanged("itemNames", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minAnsweredSpecified
    {
        get
        {
            return this._minAnsweredSpecified;
        }
        set
        {
            this._minAnsweredSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxAnsweredSpecified
    {
        get
        {
            return this._maxAnsweredSpecified;
        }
        set
        {
            this._maxAnsweredSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool itemNamesSpecified
    {
        get
        {
            return this._itemNamesSpecified;
        }
        set
        {
            this._itemNamesSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether minAnswered should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminAnswered()
    {
        if (_shouldSerializeminAnswered)
        {
            return true;
        }
        return (_minAnswered != default(int));
    }
    
    /// <summary>
    /// Test whether maxAnswered should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxAnswered()
    {
        if (_shouldSerializemaxAnswered)
        {
            return true;
        }
        return (_maxAnswered != default(int));
    }
    
    /// <summary>
    /// Test whether itemNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializeitemNames()
    {
        return !string.IsNullOrEmpty(itemNames);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule component evaluates the @selected status of any set of
/// ListItems at runtime, and returns a true or false value based on the @selected
/// status of each ListItem.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiSelectionsActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredMultiSelectionSetBoolType : FuncBoolBaseType
{
    
    #region Private fields
    private string _selectedItemSet;
    
    private bool _selectedItemSetSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string selectedItemSet
    {
        get
        {
            return this._selectedItemSet;
        }
        set
        {
            if ((this._selectedItemSet == value))
            {
                return;
            }
            if (((this._selectedItemSet == null) 
                        || (_selectedItemSet.Equals(value) != true)))
            {
                this._selectedItemSet = value;
                this.OnPropertyChanged("selectedItemSet", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool selectedItemSetSpecified
    {
        get
        {
            return this._selectedItemSetSpecified;
        }
        set
        {
            this._selectedItemSetSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether selectedItemSet should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectedItemSet()
    {
        return !string.IsNullOrEmpty(selectedItemSet);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class MultiSelectionsActionType : PredMultiSelectionSetBoolType
{
    
    #region Private fields
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=1)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule tests combinations of co-selected ListItems (answers). If
/// more than X items in the @listItemNames list are selected, then the result returns
/// the value of true. Otherwise it is false. X is specified in @maxSelections, and the
/// default is 1. The most common use is to detect ListItem combinations that may not be
/// selected together. In most cases, all ListItems should be children of one
/// multi-select question. Delete this: Legal ("allowed") selections evaluate to false
/// Illegal selections evaluate to true These values can be reversed if @not is set to
/// true Renamed from: IllegalSelectionSets
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionSetsActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(PredSelectionTestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionTestActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredSingleSelectionSetsType : FuncBoolBaseType
{
    
    #region Private fields
    private bool _shouldSerializemaxSelections;
    
    private string _listItemNames;
    
    private short _maxSelections;
    
    private bool _listItemNamesSpecified;
    
    private bool _maxSelectionsSpecified;
    #endregion
    
    /// <summary>
    /// PredSingleSelectionSetsType class constructor
    /// </summary>
    public PredSingleSelectionSetsType()
    {
        this._maxSelections = ((short)(1));
    }
    
    /// <summary>
    /// Set of @name references for a set ListItems, delimited by
    /// spaces.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string listItemNames
    {
        get
        {
            return this._listItemNames;
        }
        set
        {
            if ((this._listItemNames == value))
            {
                return;
            }
            if (((this._listItemNames == null) 
                        || (_listItemNames.Equals(value) != true)))
            {
                this._listItemNames = value;
                this.OnPropertyChanged("listItemNames", value);
            }
        }
    }
    
    /// <summary>
    /// The maximum number of ListItems in @listItemNames that may
    /// be selected at one time.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(short), "1")]
    public virtual short maxSelections
    {
        get
        {
            return this._maxSelections;
        }
        set
        {
            if ((_maxSelections.Equals(value) != true))
            {
                this._maxSelections = value;
                this.OnPropertyChanged("maxSelections", value);
            }
            _shouldSerializemaxSelections = true;
        }
    }
    
    [XmlIgnore()]
    public bool listItemNamesSpecified
    {
        get
        {
            return this._listItemNamesSpecified;
        }
        set
        {
            this._listItemNamesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxSelectionsSpecified
    {
        get
        {
            return this._maxSelectionsSpecified;
        }
        set
        {
            this._maxSelectionsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether maxSelections should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxSelections()
    {
        if (_shouldSerializemaxSelections)
        {
            return true;
        }
        return (_maxSelections != default(short));
    }
    
    /// <summary>
    /// Test whether listItemNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializelistItemNames()
    {
        return !string.IsNullOrEmpty(listItemNames);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SelectionSetsActionType : PredSingleSelectionSetsType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _not;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    
    private bool _notSpecified;
    #endregion
    
    /// <summary>
    /// SelectionSetsActionType class constructor
    /// </summary>
    public SelectionSetsActionType()
    {
        this._not = false;
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=1)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule specifies a set of ListItems that cannot be selected
/// (@listItemNames) when a test ListItem (@testItemName) is selected. If any selection
/// occurs in @listItemNames when @testItemName is selected, the rule evaluate to true.
/// In all other cases, the rule evaluates to false. Multiple selections in
/// @listItemNames are acceptable as long as @testItemName is unselected, and in this
/// case, the rule evaluates to false. "Legal" (allowed) selections evaluate to false
/// "Illegal" selections evaluate to true Renamed from:
/// IllegalSelectionTest
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SelectionTestActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredSelectionTestType : PredSingleSelectionSetsType
{
    
    #region Private fields
    private string _testItemName;
    
    private bool _testItemNameSpecified;
    #endregion
    
    /// <summary>
    /// The ListItem that is being evaluated for the presence of
    /// disallowed selections (in @listItemNames). This attributes contains the
    /// @name of one ListItem.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKEN")]
    public virtual string testItemName
    {
        get
        {
            return this._testItemName;
        }
        set
        {
            if ((this._testItemName == value))
            {
                return;
            }
            if (((this._testItemName == null) 
                        || (_testItemName.Equals(value) != true)))
            {
                this._testItemName = value;
                this.OnPropertyChanged("testItemName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool testItemNameSpecified
    {
        get
        {
            return this._testItemNameSpecified;
        }
        set
        {
            this._testItemNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether testItemName should be serialized
    /// </summary>
    public virtual bool ShouldSerializetestItemName()
    {
        return !string.IsNullOrEmpty(testItemName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SelectionTestActionType : PredSelectionTestType
{
    
    #region Private fields
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=1)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Programming code or pseudocode that describes a calculation.  The code returns a value of the data type required by the parent Response field.  To assist with enabling the code in the form, the referenced form items and properties should be referenced by @name under the parameters elemeent.  It is possible to add mulitple calculation expressions to produce equivalent results using different programming languages and URIs.  The @ type attribute may be used to distinguish between them.  An Extension may be used instead of or along with an Expression and Parameters list.  Expressions may populate Responses that are set to @readOnly = "true" to ensure that all responses are calculated and not latered by the user.  Alternatively, the user may change a value created by (or instead of) the Expression.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptBoolFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetBoolAttributeValueCode))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ScriptCodeBoolType : ScriptCodeBaseType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private string _validationMessage;
    
    private bool _notSpecified;
    
    private bool _validationMessageSpecified;
    #endregion
    
    /// <summary>
    /// ScriptCodeBoolType class constructor
    /// </summary>
    public ScriptCodeBoolType()
    {
        this._not = false;
    }
    
    /// <summary>
    /// If @not="true" then the logical value of the conditions of the parent element is negated; true becomes false and false becomes true.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    /// <summary>
    /// Optional message that appears when the rule evaluates to true
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string validationMessage
    {
        get
        {
            return this._validationMessage;
        }
        set
        {
            if ((this._validationMessage == value))
            {
                return;
            }
            if (((this._validationMessage == null) 
                        || (_validationMessage.Equals(value) != true)))
            {
                this._validationMessage = value;
                this.OnPropertyChanged("validationMessage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validationMessageSpecified
    {
        get
        {
            return this._validationMessageSpecified;
        }
        set
        {
            this._validationMessageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
    
    /// <summary>
    /// Test whether validationMessage should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidationMessage()
    {
        return !string.IsNullOrEmpty(validationMessage);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Programming code or pseudocode that describes a calculation.  THe code returns a value of the data type required by the parent Response field.  To assist with enabling the code in the form, the referenced form items and properties should be referenced by @name under the parameters elemeent.  It is possible to add mulitple calculation expressions to produce equivalent results using different programming languages and URIs.  The @ type attribute may be used to distinguish between them.  An Extension may be used instead of or along with an Expression and Parameters list.  Expressions may populate Responses that are set to @readOnly = "true" to ensure that all responses are calculated and not latered by the user.  Alternatively, the user may change a value created by (or instead of) the Expression.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeAnyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttrValueScriptType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptBoolFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetBoolAttributeValueCode))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class ScriptCodeBaseType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeallowNull;
    
    private bool _shouldSerializereturnList;
    
    private bool _returnList;
    
    private string _listDelimiter;
    
    private string _objectTypeName;
    
    private string _objectFormat;
    
    private bool _allowNull;
    
    private string _returnVal;
    
    private string _language;
    
    private string _code;
    
    private bool _returnListSpecified;
    
    private bool _listDelimiterSpecified;
    
    private bool _objectTypeNameSpecified;
    
    private bool _objectFormatSpecified;
    
    private bool _allowNullSpecified;
    
    private bool _returnValSpecified;
    
    private bool _languageSpecified;
    
    private bool _codeSpecified;
    #endregion
    
    /// <summary>
    /// ScriptCodeBaseType class constructor
    /// </summary>
    public ScriptCodeBaseType()
    {
        this._returnList = false;
        this._listDelimiter = "|";
        this._allowNull = true;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool returnList
    {
        get
        {
            return this._returnList;
        }
        set
        {
            if ((_returnList.Equals(value) != true))
            {
                this._returnList = value;
                this.OnPropertyChanged("returnList", value);
            }
            _shouldSerializereturnList = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("|")]
    public virtual string listDelimiter
    {
        get
        {
            return this._listDelimiter;
        }
        set
        {
            if ((this._listDelimiter == value))
            {
                return;
            }
            if (((this._listDelimiter == null) 
                        || (_listDelimiter.Equals(value) != true)))
            {
                this._listDelimiter = value;
                this.OnPropertyChanged("listDelimiter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectTypeName
    {
        get
        {
            return this._objectTypeName;
        }
        set
        {
            if ((this._objectTypeName == value))
            {
                return;
            }
            if (((this._objectTypeName == null) 
                        || (_objectTypeName.Equals(value) != true)))
            {
                this._objectTypeName = value;
                this.OnPropertyChanged("objectTypeName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectFormat
    {
        get
        {
            return this._objectFormat;
        }
        set
        {
            if ((this._objectFormat == value))
            {
                return;
            }
            if (((this._objectFormat == null) 
                        || (_objectFormat.Equals(value) != true)))
            {
                this._objectFormat = value;
                this.OnPropertyChanged("objectFormat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool allowNull
    {
        get
        {
            return this._allowNull;
        }
        set
        {
            if ((_allowNull.Equals(value) != true))
            {
                this._allowNull = value;
                this.OnPropertyChanged("allowNull", value);
            }
            _shouldSerializeallowNull = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string returnVal
    {
        get
        {
            return this._returnVal;
        }
        set
        {
            if ((this._returnVal == value))
            {
                return;
            }
            if (((this._returnVal == null) 
                        || (_returnVal.Equals(value) != true)))
            {
                this._returnVal = value;
                this.OnPropertyChanged("returnVal", value);
            }
        }
    }
    
    /// <summary>
    /// Programming language.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string language
    {
        get
        {
            return this._language;
        }
        set
        {
            if ((this._language == value))
            {
                return;
            }
            if (((this._language == null) 
                        || (_language.Equals(value) != true)))
            {
                this._language = value;
                this.OnPropertyChanged("language", value);
            }
        }
    }
    
    /// <summary>
    /// Script contents.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string code
    {
        get
        {
            return this._code;
        }
        set
        {
            if ((this._code == value))
            {
                return;
            }
            if (((this._code == null) 
                        || (_code.Equals(value) != true)))
            {
                this._code = value;
                this.OnPropertyChanged("code", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool returnListSpecified
    {
        get
        {
            return this._returnListSpecified;
        }
        set
        {
            this._returnListSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool listDelimiterSpecified
    {
        get
        {
            return this._listDelimiterSpecified;
        }
        set
        {
            this._listDelimiterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool objectTypeNameSpecified
    {
        get
        {
            return this._objectTypeNameSpecified;
        }
        set
        {
            this._objectTypeNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool objectFormatSpecified
    {
        get
        {
            return this._objectFormatSpecified;
        }
        set
        {
            this._objectFormatSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowNullSpecified
    {
        get
        {
            return this._allowNullSpecified;
        }
        set
        {
            this._allowNullSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool returnValSpecified
    {
        get
        {
            return this._returnValSpecified;
        }
        set
        {
            this._returnValSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool languageSpecified
    {
        get
        {
            return this._languageSpecified;
        }
        set
        {
            this._languageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool codeSpecified
    {
        get
        {
            return this._codeSpecified;
        }
        set
        {
            this._codeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether returnList should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnList()
    {
        if (_shouldSerializereturnList)
        {
            return true;
        }
        return (_returnList != default(bool));
    }
    
    /// <summary>
    /// Test whether allowNull should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowNull()
    {
        if (_shouldSerializeallowNull)
        {
            return true;
        }
        return (_allowNull != default(bool));
    }
    
    /// <summary>
    /// Test whether listDelimiter should be serialized
    /// </summary>
    public virtual bool ShouldSerializelistDelimiter()
    {
        return !string.IsNullOrEmpty(listDelimiter);
    }
    
    /// <summary>
    /// Test whether objectTypeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectTypeName()
    {
        return !string.IsNullOrEmpty(objectTypeName);
    }
    
    /// <summary>
    /// Test whether objectFormat should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectFormat()
    {
        return !string.IsNullOrEmpty(objectFormat);
    }
    
    /// <summary>
    /// Test whether returnVal should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnVal()
    {
        return !string.IsNullOrEmpty(returnVal);
    }
    
    /// <summary>
    /// Test whether language should be serialized
    /// </summary>
    public virtual bool ShouldSerializelanguage()
    {
        return !string.IsNullOrEmpty(language);
    }
    
    /// <summary>
    /// Test whether code should be serialized
    /// </summary>
    public virtual bool ShouldSerializecode()
    {
        return !string.IsNullOrEmpty(code);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Programming code or pseudocode that describes a calculation.  THe code returns a value of the data type required by the parent Response field.  To assist with enabling the code in the form, the referenced form items and properties should be referenced by @name under the parameters elemeent.  It is possible to add mulitple calculation expressions to produce equivalent results using different programming languages and URIs.  The @ type attribute may be used to distinguish between them.  An Extension may be used instead of or along with an Expression and Parameters list.  Expressions may populate Responses that are set to @readOnly = "true" to ensure that all responses are calculated and not latered by the user.  Alternatively, the user may change a value created by (or instead of) the Expression.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttrValueScriptType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ScriptCodeAnyType : ScriptCodeBaseType
{
    
    #region Private fields
    private List<string> _dataType;
    
    private bool _dataTypeSpecified;
    #endregion
    
    /// <summary>
    /// ScriptCodeAnyType class constructor
    /// </summary>
    public ScriptCodeAnyType()
    {
        this._dataType = new string[] {
                "string"};
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual List<string> dataType
    {
        get
        {
            return this._dataType;
        }
        set
        {
            if ((this._dataType == value))
            {
                return;
            }
            if (((this._dataType == null) 
                        || (_dataType.Equals(value) != true)))
            {
                this._dataType = value;
                this.OnPropertyChanged("dataType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool dataTypeSpecified
    {
        get
        {
            return this._dataTypeSpecified;
        }
        set
        {
            this._dataTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether dataType should be serialized
    /// </summary>
    public virtual bool ShouldSerializedataType()
    {
        return dataType != null && dataType.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type is used to act upon the value of common item properties. If
/// an "act" property (a property with the "act" prefix) has no value assigned, it is
/// ignored. If it has a value, then that property on the target item(s) assume(s) that
/// stated value when an attached Boolean condition evaluates to true. The attached
/// condition may be an "If" statement or any expression that evaluates to a Boolean
/// value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSetAttrValueScriptType : ScriptCodeAnyType
{
    
    #region Private fields
    private ItemNameAttributeType _target;
    
    private bool _targetSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ItemNameAttributeType Target
    {
        get
        {
            return this._target;
        }
        set
        {
            if ((this._target == value))
            {
                return;
            }
            if (((this._target == null) 
                        || (_target.Equals(value) != true)))
            {
                this._target = value;
                this.OnPropertyChanged("Target", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool TargetSpecified
    {
        get
        {
            return this._targetSpecified;
        }
        set
        {
            this._targetSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Target should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTarget()
    {
        return (_target != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ScriptBoolFuncActionType : ScriptCodeBoolType
{
    
    #region Private fields
    private ExtensionBaseType[] _items;
    
    private ItemsChoiceType[] _itemsElementName;
    
    private bool _itemsSpecified;
    
    private bool _itemsElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Actions", typeof(ActionsType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ConditionalActions", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Else", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public virtual ExtensionBaseType[] Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemsChoiceType[] ItemsElementName
    {
        get
        {
            return this._itemsElementName;
        }
        set
        {
            if ((this._itemsElementName == value))
            {
                return;
            }
            if (((this._itemsElementName == null) 
                        || (_itemsElementName.Equals(value) != true)))
            {
                this._itemsElementName = value;
                this.OnPropertyChanged("ItemsElementName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsElementNameSpecified
    {
        get
        {
            return this._itemsElementNameSpecified;
        }
        set
        {
            this._itemsElementNameSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemsChoiceType
{
    
    Actions,
    
    ConditionalActions,
    
    Else,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Sets the value of any named attribute. However, it is primarily
/// designed for Response element(s) on a Question or ListItem. The value may be
/// determined by a literal value with a defined data type, the value at another named
/// Response item, an expression written in a specified scripting or programming
/// language, or the value of a named code listed in the same
/// template.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSetBoolAttributeValueCode : ScriptCodeBoolType
{
    
    #region Private fields
    private string _elementName;
    
    private string _attributeName;
    
    private string _x_targetNames;
    
    private bool _elementNameSpecified;
    
    private bool _attributeNameSpecified;
    
    private bool _x_targetNamesSpecified;
    #endregion
    
    /// <summary>
    /// ActSetBoolAttributeValueCode class constructor
    /// </summary>
    public ActSetBoolAttributeValueCode()
    {
        this._attributeName = "val";
    }
    
    /// <summary>
    /// The @name attribute of the referenced
    /// element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string elementName
    {
        get
        {
            return this._elementName;
        }
        set
        {
            if ((this._elementName == value))
            {
                return;
            }
            if (((this._elementName == null) 
                        || (_elementName.Equals(value) != true)))
            {
                this._elementName = value;
                this.OnPropertyChanged("elementName", value);
            }
        }
    }
    
    /// <summary>
    /// The name of any attribute on a named
    /// element.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    [System.ComponentModel.DefaultValueAttribute("val")]
    public virtual string attributeName
    {
        get
        {
            return this._attributeName;
        }
        set
        {
            if ((this._attributeName == value))
            {
                return;
            }
            if (((this._attributeName == null) 
                        || (_attributeName.Equals(value) != true)))
            {
                this._attributeName = value;
                this.OnPropertyChanged("attributeName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string X_targetNames
    {
        get
        {
            return this._x_targetNames;
        }
        set
        {
            if ((this._x_targetNames == value))
            {
                return;
            }
            if (((this._x_targetNames == null) 
                        || (_x_targetNames.Equals(value) != true)))
            {
                this._x_targetNames = value;
                this.OnPropertyChanged("X_targetNames", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool elementNameSpecified
    {
        get
        {
            return this._elementNameSpecified;
        }
        set
        {
            this._elementNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool attributeNameSpecified
    {
        get
        {
            return this._attributeNameSpecified;
        }
        set
        {
            this._attributeNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_targetNamesSpecified
    {
        get
        {
            return this._x_targetNamesSpecified;
        }
        set
        {
            this._x_targetNamesSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether elementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeelementName()
    {
        return !string.IsNullOrEmpty(elementName);
    }
    
    /// <summary>
    /// Test whether attributeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeattributeName()
    {
        return !string.IsNullOrEmpty(attributeName);
    }
    
    /// <summary>
    /// Test whether X_targetNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_targetNames()
    {
        return !string.IsNullOrEmpty(X_targetNames);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class PredGuardTypeSelectionSets : PredSingleSelectionSetsType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private bool _notSpecified;
    #endregion
    
    /// <summary>
    /// PredGuardTypeSelectionSets class constructor
    /// </summary>
    public PredGuardTypeSelectionSets()
    {
        this._not = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum DisplayedTypeShowInReport
{
    
    True,
    
    False,
    
    Optional,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This is the base type for all subtypes that require a unique URI identifier.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FormDesignType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(InjectFormType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActInjectType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DisplayedType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ButtonItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RepeatingType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DataElementType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class IdentifiedExtensionType : ExtensionBaseType
{
    
    #region Private fields
    private string _id;
    
    private string _baseURI;
    
    private bool _iDSpecified;
    
    private bool _baseURISpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string ID
    {
        get
        {
            return this._id;
        }
        set
        {
            if ((this._id == value))
            {
                return;
            }
            if (((this._id == null) 
                        || (_id.Equals(value) != true)))
            {
                this._id = value;
                this.OnPropertyChanged("ID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string baseURI
    {
        get
        {
            return this._baseURI;
        }
        set
        {
            if ((this._baseURI == value))
            {
                return;
            }
            if (((this._baseURI == null) 
                        || (_baseURI.Equals(value) != true)))
            {
                this._baseURI = value;
                this.OnPropertyChanged("baseURI", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool IDSpecified
    {
        get
        {
            return this._iDSpecified;
        }
        set
        {
            this._iDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool baseURISpecified
    {
        get
        {
            return this._baseURISpecified;
        }
        set
        {
            this._baseURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeID()
    {
        return !string.IsNullOrEmpty(ID);
    }
    
    /// <summary>
    /// Test whether baseURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebaseURI()
    {
        return !string.IsNullOrEmpty(baseURI);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("DataElement", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class DataElementType : IdentifiedExtensionType
{
    
    #region Private fields
    private List<IdentifiedExtensionType> _items;
    
    private string _lineage;
    
    private string _version;
    
    private string _versionPrev;
    
    private string _fullURI;
    
    private string _basedOnURI;
    
    private string _filename;
    
    private bool _itemsSpecified;
    
    private bool _lineageSpecified;
    
    private bool _versionSpecified;
    
    private bool _versionPrevSpecified;
    
    private bool _fullURISpecified;
    
    private bool _basedOnURISpecified;
    
    private bool _filenameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ButtonAction", typeof(ButtonItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("DisplayedItem", typeof(DisplayedType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("InjectForm", typeof(InjectFormType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Question", typeof(QuestionItemType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Section", typeof(SectionItemType), Order=0)]
    public virtual List<IdentifiedExtensionType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: A text identifier that is used to group multiple
    /// versions of a single DE. The lineage is constant for all versions of a
    /// single kind of DE. When appended to @baseURI, it can be used to retrieve
    /// all versions of one particular DE.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string lineage
    {
        get
        {
            return this._lineage;
        }
        set
        {
            if ((this._lineage == value))
            {
                return;
            }
            if (((this._lineage == null) 
                        || (_lineage.Equals(value) != true)))
            {
                this._lineage = value;
                this.OnPropertyChanged("lineage", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: @version contains the version text for the current
    /// DE. It is designed to be used in conjuction with @baseURI and
    /// @lineage.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Identify the immediate previous version of the
    /// current DE. The format is the same as version. The primary role of this
    /// optional attribute is to allow automated comparisons between a current
    /// DE and the immediate previous DE version. This is often helpful when
    /// deciding whether to adopt a newer version of a DE.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string versionPrev
    {
        get
        {
            return this._versionPrev;
        }
        set
        {
            if ((this._versionPrev == value))
            {
                return;
            }
            if (((this._versionPrev == null) 
                        || (_versionPrev.Equals(value) != true)))
            {
                this._versionPrev = value;
                this.OnPropertyChanged("versionPrev", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: The full URI that uniquely identifies the current
    /// DE.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string fullURI
    {
        get
        {
            return this._fullURI;
        }
        set
        {
            if ((this._fullURI == value))
            {
                return;
            }
            if (((this._fullURI == null) 
                        || (_fullURI.Equals(value) != true)))
            {
                this._fullURI = value;
                this.OnPropertyChanged("fullURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: URI used to identify the DE that that this DE is
    /// based upon. In most cases, this should be a standard form that is
    /// modified and/or extended by the current DE. The current template reuses
    /// the basedOn IDs whenever the question/answer/semantic context is
    /// identical to the original.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string basedOnURI
    {
        get
        {
            return this._basedOnURI;
        }
        set
        {
            if ((this._basedOnURI == value))
            {
                return;
            }
            if (((this._basedOnURI == null) 
                        || (_basedOnURI.Equals(value) != true)))
            {
                this._basedOnURI = value;
                this.OnPropertyChanged("basedOnURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: filename to use when the current FormDesign instance
    /// is saved as a file. For forms containing responses, the filename may
    /// include the formInstanceVersionURI, but the naming convention may be
    /// use-case-specific.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string filename
    {
        get
        {
            return this._filename;
        }
        set
        {
            if ((this._filename == value))
            {
                return;
            }
            if (((this._filename == null) 
                        || (_filename.Equals(value) != true)))
            {
                this._filename = value;
                this.OnPropertyChanged("filename", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool lineageSpecified
    {
        get
        {
            return this._lineageSpecified;
        }
        set
        {
            this._lineageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionPrevSpecified
    {
        get
        {
            return this._versionPrevSpecified;
        }
        set
        {
            this._versionPrevSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fullURISpecified
    {
        get
        {
            return this._fullURISpecified;
        }
        set
        {
            this._fullURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool basedOnURISpecified
    {
        get
        {
            return this._basedOnURISpecified;
        }
        set
        {
            this._basedOnURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool filenameSpecified
    {
        get
        {
            return this._filenameSpecified;
        }
        set
        {
            this._filenameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether lineage should be serialized
    /// </summary>
    public virtual bool ShouldSerializelineage()
    {
        return !string.IsNullOrEmpty(lineage);
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether versionPrev should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionPrev()
    {
        return !string.IsNullOrEmpty(versionPrev);
    }
    
    /// <summary>
    /// Test whether fullURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializefullURI()
    {
        return !string.IsNullOrEmpty(fullURI);
    }
    
    /// <summary>
    /// Test whether basedOnURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebasedOnURI()
    {
        return !string.IsNullOrEmpty(basedOnURI);
    }
    
    /// <summary>
    /// Test whether filename should be serialized
    /// </summary>
    public virtual bool ShouldSerializefilename()
    {
        return !string.IsNullOrEmpty(filename);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// The Section is a grouper for all other types of objects. It may have a
/// distinctive visual display (e.g. a box containing other displayed objects), and it
/// may be used to treat Section descendants as a unit for special handling, such as
/// hiding and showing.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SectionItemType : SectionBaseType
{
    
    #region Private fields
    private ChildItemsType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ChildItems", Order=0)]
    public virtual ChildItemsType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This base item is the same as the SectionItemType, except it lacks the
/// recursion created by the inclusion of MainItems sub-group.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class SectionBaseType : RepeatingType
{
    
    #region Private fields
    private bool _shouldSerializenewData;
    
    private bool _shouldSerializechangedData;
    
    private bool _shouldSerializeordered;
    
    private bool _ordered;
    
    private bool _changedData;
    
    private bool changedDataFieldSpecified;
    
    private bool _newData;
    
    private bool newDataFieldSpecified;
    
    private bool _orderedSpecified;
    #endregion
    
    /// <summary>
    /// SectionBaseType class constructor
    /// </summary>
    public SectionBaseType()
    {
        this._ordered = true;
    }
    
    /// <summary>
    /// If false, then the form implementation may change the
    /// order of items in the section.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool ordered
    {
        get
        {
            return this._ordered;
        }
        set
        {
            if ((_ordered.Equals(value) != true))
            {
                this._ordered = value;
                this.OnPropertyChanged("ordered", value);
            }
            _shouldSerializeordered = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool changedData
    {
        get
        {
            return this._changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                this._changedData = value;
                this.OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool changedDataSpecified
    {
        get
        {
            return this.changedDataFieldSpecified;
        }
        set
        {
            if ((changedDataFieldSpecified.Equals(value) != true))
            {
                this.changedDataFieldSpecified = value;
                this.OnPropertyChanged("changedDataSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool newData
    {
        get
        {
            return this._newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                this._newData = value;
                this.OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool newDataSpecified
    {
        get
        {
            return this.newDataFieldSpecified;
        }
        set
        {
            if ((newDataFieldSpecified.Equals(value) != true))
            {
                this.newDataFieldSpecified = value;
                this.OnPropertyChanged("newDataSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool orderedSpecified
    {
        get
        {
            return this._orderedSpecified;
        }
        set
        {
            this._orderedSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ordered should be serialized
    /// </summary>
    public virtual bool ShouldSerializeordered()
    {
        if (_shouldSerializeordered)
        {
            return true;
        }
        return (_ordered != default(bool));
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type presents any display objects that may be repeated based upon
/// on the user's interaction with the form objects. Items derived from this type
/// include Sections and Questions.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SectionItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class RepeatingType : DisplayedType
{
    
    #region Private fields
    private bool _shouldSerializemaxCard;
    
    private bool _shouldSerializeminCard;
    
    private ushort _minCard;
    
    private ushort _maxCard;
    
    private string _repeat;
    
    private string _instanceGUID;
    
    private string _parentGUID;
    
    private bool _minCardSpecified;
    
    private bool _maxCardSpecified;
    
    private bool _repeatSpecified;
    
    private bool _instanceGUIDSpecified;
    
    private bool _parentGUIDSpecified;
    #endregion
    
    /// <summary>
    /// RepeatingType class constructor
    /// </summary>
    public RepeatingType()
    {
        this._minCard = ((ushort)(1));
        this._maxCard = ((ushort)(1));
        this._repeat = "0";
    }
    
    /// <summary>
    /// @minCard is the minimum number of repetitions allowed for
    /// a section or question. The default value is 1, indicating that the user
    /// must answer any question(s) that has this attribute set. If @minCard is
    /// set to 0, then the item and all descendent questions are optional to
    /// answer.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(ushort), "1")]
    public virtual ushort minCard
    {
        get
        {
            return this._minCard;
        }
        set
        {
            if ((_minCard.Equals(value) != true))
            {
                this._minCard = value;
                this.OnPropertyChanged("minCard", value);
            }
            _shouldSerializeminCard = true;
        }
    }
    
    /// <summary>
    /// @maxCard is the maximum number of repetitions allowed for
    /// a section or question. The default value is 1, indicating that the
    /// section or question cannot be repeated on the data entry form. A value
    /// of 0 indicates that the number of repeats is unlimited. If @maxCard is
    /// not 0, then Must be greater than or equal to minCard.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(ushort), "1")]
    public virtual ushort maxCard
    {
        get
        {
            return this._maxCard;
        }
        set
        {
            if ((_maxCard.Equals(value) != true))
            {
                this._maxCard = value;
                this.OnPropertyChanged("maxCard", value);
            }
            _shouldSerializemaxCard = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public virtual string repeat
    {
        get
        {
            return this._repeat;
        }
        set
        {
            if ((this._repeat == value))
            {
                return;
            }
            if (((this._repeat == null) 
                        || (_repeat.Equals(value) != true)))
            {
                this._repeat = value;
                this.OnPropertyChanged("repeat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string instanceGUID
    {
        get
        {
            return this._instanceGUID;
        }
        set
        {
            if ((this._instanceGUID == value))
            {
                return;
            }
            if (((this._instanceGUID == null) 
                        || (_instanceGUID.Equals(value) != true)))
            {
                this._instanceGUID = value;
                this.OnPropertyChanged("instanceGUID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string parentGUID
    {
        get
        {
            return this._parentGUID;
        }
        set
        {
            if ((this._parentGUID == value))
            {
                return;
            }
            if (((this._parentGUID == null) 
                        || (_parentGUID.Equals(value) != true)))
            {
                this._parentGUID = value;
                this.OnPropertyChanged("parentGUID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool minCardSpecified
    {
        get
        {
            return this._minCardSpecified;
        }
        set
        {
            this._minCardSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxCardSpecified
    {
        get
        {
            return this._maxCardSpecified;
        }
        set
        {
            this._maxCardSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool repeatSpecified
    {
        get
        {
            return this._repeatSpecified;
        }
        set
        {
            this._repeatSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceGUIDSpecified
    {
        get
        {
            return this._instanceGUIDSpecified;
        }
        set
        {
            this._instanceGUIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool parentGUIDSpecified
    {
        get
        {
            return this._parentGUIDSpecified;
        }
        set
        {
            this._parentGUIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether minCard should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminCard()
    {
        if (_shouldSerializeminCard)
        {
            return true;
        }
        return (_minCard != default(ushort));
    }
    
    /// <summary>
    /// Test whether maxCard should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxCard()
    {
        if (_shouldSerializemaxCard)
        {
            return true;
        }
        return (_maxCard != default(ushort));
    }
    
    /// <summary>
    /// Test whether repeat should be serialized
    /// </summary>
    public virtual bool ShouldSerializerepeat()
    {
        return !string.IsNullOrEmpty(repeat);
    }
    
    /// <summary>
    /// Test whether instanceGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceGUID()
    {
        return !string.IsNullOrEmpty(instanceGUID);
    }
    
    /// <summary>
    /// Test whether parentGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparentGUID()
    {
        return !string.IsNullOrEmpty(parentGUID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Represents questions. Parent items may be Section, Question, and
/// ListItem.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class QuestionItemBaseType : RepeatingType
{
    
    #region Private fields
    private bool _shouldSerializenewData;
    
    private bool _shouldSerializechangedData;
    
    private bool _shouldSerializereadOnly;
    
    private ExtensionBaseType _item;
    
    private bool _readOnly;
    
    private bool _changedData;
    
    private bool changedDataFieldSpecified;
    
    private bool _newData;
    
    private bool newDataFieldSpecified;
    
    private bool _itemSpecified;
    
    private bool _readOnlySpecified;
    #endregion
    
    /// <summary>
    /// QuestionItemBaseType class constructor
    /// </summary>
    public QuestionItemBaseType()
    {
        this._readOnly = false;
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ListField", typeof(ListFieldType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ResponseField", typeof(ResponseFieldType), Order=0)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// If @readOnly is set to true, the this field may not be
    /// edited by the user, and any default values set by template should be
    /// considered part of the stored data set responses, and transmitted by the
    /// SubmitForm transaction.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool readOnly
    {
        get
        {
            return this._readOnly;
        }
        set
        {
            if ((_readOnly.Equals(value) != true))
            {
                this._readOnly = value;
                this.OnPropertyChanged("readOnly", value);
            }
            _shouldSerializereadOnly = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool changedData
    {
        get
        {
            return this._changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                this._changedData = value;
                this.OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool changedDataSpecified
    {
        get
        {
            return this.changedDataFieldSpecified;
        }
        set
        {
            if ((changedDataFieldSpecified.Equals(value) != true))
            {
                this.changedDataFieldSpecified = value;
                this.OnPropertyChanged("changedDataSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool newData
    {
        get
        {
            return this._newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                this._newData = value;
                this.OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool newDataSpecified
    {
        get
        {
            return this.newDataFieldSpecified;
        }
        set
        {
            if ((newDataFieldSpecified.Equals(value) != true))
            {
                this.newDataFieldSpecified = value;
                this.OnPropertyChanged("newDataSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool readOnlySpecified
    {
        get
        {
            return this._readOnlySpecified;
        }
        set
        {
            this._readOnlySpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether readOnly should be serialized
    /// </summary>
    public virtual bool ShouldSerializereadOnly()
    {
        if (_shouldSerializereadOnly)
        {
            return true;
        }
        return (_readOnly != default(bool));
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ListField is a grouper for list-like answer choices, which may be
/// derived from either a set of answer choice lists (a List composed of ListItems) or
/// or a list obtained from a LookupEndpoint URI.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ListFieldType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeordered;
    
    private bool _shouldSerializemaxSelections;
    
    private bool _shouldSerializeminSelections;
    
    private RichTextType _listHeaderText;
    
    private CodeSystemType _defaultCodeSystem;
    
    private ExtensionBaseType _item;
    
    private List<PredSelectionTestType> _illegalListItemPairings;
    
    private List<PredSingleSelectionSetsType> _illegalCoSelectedListItems;
    
    private List<EventType> _afterChange;
    
    private List<OnEventType> _onEvent;
    
    private string _colTextDelimiter;
    
    private byte _numCols;
    
    private byte _storedCol;
    
    private ushort _minSelections;
    
    private ushort _maxSelections;
    
    private bool _ordered;
    
    private string _defaultListItemDataType;
    
    private bool _listHeaderTextSpecified;
    
    private bool _defaultCodeSystemSpecified;
    
    private bool _itemSpecified;
    
    private bool _illegalListItemPairingsSpecified;
    
    private bool _illegalCoSelectedListItemsSpecified;
    
    private bool _afterChangeSpecified;
    
    private bool _onEventSpecified;
    
    private bool _colTextDelimiterSpecified;
    
    private bool _numColsSpecified;
    
    private bool _storedColSpecified;
    
    private bool _minSelectionsSpecified;
    
    private bool _maxSelectionsSpecified;
    
    private bool _orderedSpecified;
    
    private bool _defaultListItemDataTypeSpecified;
    #endregion
    
    /// <summary>
    /// ListFieldType class constructor
    /// </summary>
    public ListFieldType()
    {
        this._colTextDelimiter = "|";
        this._numCols = ((byte)(1));
        this._storedCol = ((byte)(1));
        this._minSelections = ((ushort)(1));
        this._maxSelections = ((ushort)(1));
        this._ordered = true;
    }
    
    /// <summary>
    /// The header row for a set of list items. If the list
    /// has more than one column, the column text is separated by the
    /// colTextDelimiter.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual RichTextType ListHeaderText
    {
        get
        {
            return this._listHeaderText;
        }
        set
        {
            if ((this._listHeaderText == value))
            {
                return;
            }
            if (((this._listHeaderText == null) 
                        || (_listHeaderText.Equals(value) != true)))
            {
                this._listHeaderText = value;
                this.OnPropertyChanged("ListHeaderText", value);
            }
        }
    }
    
    /// <summary>
    /// If coded values are used for items in a List
    /// (including ListItem and LookupEndPoint lists), then the default
    /// coding system should be specified here. For ListItem nodes, any
    /// exceptions to the coding system may be specified on the individual
    /// ListItem nodes. For LookupEndPoints, the endpoint data can
    /// optionally specify any exceptions in a dedicated CodeSystem column
    /// in the returned list data.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual CodeSystemType DefaultCodeSystem
    {
        get
        {
            return this._defaultCodeSystem;
        }
        set
        {
            if ((this._defaultCodeSystem == value))
            {
                return;
            }
            if (((this._defaultCodeSystem == null) 
                        || (_defaultCodeSystem.Equals(value) != true)))
            {
                this._defaultCodeSystem = value;
                this.OnPropertyChanged("DefaultCodeSystem", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("List", typeof(ListType), Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("LookupEndPoint", typeof(LookupEndPointType), Order=2)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("IllegalListItemPairings", Order=3)]
    public virtual List<PredSelectionTestType> IllegalListItemPairings
    {
        get
        {
            return this._illegalListItemPairings;
        }
        set
        {
            if ((this._illegalListItemPairings == value))
            {
                return;
            }
            if (((this._illegalListItemPairings == null) 
                        || (_illegalListItemPairings.Equals(value) != true)))
            {
                this._illegalListItemPairings = value;
                this.OnPropertyChanged("IllegalListItemPairings", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("IllegalCoSelectedListItems", Order=4)]
    public virtual List<PredSingleSelectionSetsType> IllegalCoSelectedListItems
    {
        get
        {
            return this._illegalCoSelectedListItems;
        }
        set
        {
            if ((this._illegalCoSelectedListItems == value))
            {
                return;
            }
            if (((this._illegalCoSelectedListItems == null) 
                        || (_illegalCoSelectedListItems.Equals(value) != true)))
            {
                this._illegalCoSelectedListItems = value;
                this.OnPropertyChanged("IllegalCoSelectedListItems", value);
            }
        }
    }
    
    /// <summary>
    /// Event that occurs after List Field selections are
    /// changed.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("AfterChange", Order=5)]
    public virtual List<EventType> AfterChange
    {
        get
        {
            return this._afterChange;
        }
        set
        {
            if ((this._afterChange == value))
            {
                return;
            }
            if (((this._afterChange == null) 
                        || (_afterChange.Equals(value) != true)))
            {
                this._afterChange = value;
                this.OnPropertyChanged("AfterChange", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnEvent", Order=6)]
    public virtual List<OnEventType> OnEvent
    {
        get
        {
            return this._onEvent;
        }
        set
        {
            if ((this._onEvent == value))
            {
                return;
            }
            if (((this._onEvent == null) 
                        || (_onEvent.Equals(value) != true)))
            {
                this._onEvent = value;
                this.OnPropertyChanged("OnEvent", value);
            }
        }
    }
    
    /// <summary>
    /// Character in the DisplayText that separates the columns
    /// and rows in a single or multi-column list.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("|")]
    public virtual string colTextDelimiter
    {
        get
        {
            return this._colTextDelimiter;
        }
        set
        {
            if ((this._colTextDelimiter == value))
            {
                return;
            }
            if (((this._colTextDelimiter == null) 
                        || (_colTextDelimiter.Equals(value) != true)))
            {
                this._colTextDelimiter = value;
                this.OnPropertyChanged("colTextDelimiter", value);
            }
        }
    }
    
    /// <summary>
    /// Number of columns in the list
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(byte), "1")]
    public virtual byte numCols
    {
        get
        {
            return this._numCols;
        }
        set
        {
            if ((_numCols.Equals(value) != true))
            {
                this._numCols = value;
                this.OnPropertyChanged("numCols", value);
            }
        }
    }
    
    /// <summary>
    /// Determines which column of the list is stored in a
    /// database. This list is one-based.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(byte), "1")]
    public virtual byte storedCol
    {
        get
        {
            return this._storedCol;
        }
        set
        {
            if ((_storedCol.Equals(value) != true))
            {
                this._storedCol = value;
                this.OnPropertyChanged("storedCol", value);
            }
        }
    }
    
    /// <summary>
    /// Minimum number of answer choices (list items) that must be
    /// selected by the user. Default value is 1. NEW: changed minimum value to
    /// 1. Removed: If set to 0, then this question need not be answered by the
    /// user.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(ushort), "1")]
    public virtual ushort minSelections
    {
        get
        {
            return this._minSelections;
        }
        set
        {
            if ((_minSelections.Equals(value) != true))
            {
                this._minSelections = value;
                this.OnPropertyChanged("minSelections", value);
            }
            _shouldSerializeminSelections = true;
        }
    }
    
    /// <summary>
    /// Maximum number of answer choices (list items) that can be
    /// selected by the user. Must be greater than or equal to minSelections,
    /// and no larger than the total number of list items. A value of 0
    /// indicates no limit to the number of selected list items (answers). This
    /// effectively means that the question is multi-select. (Abbreviated as QM)
    /// A value of 1 (the default) indicates that the question list is
    /// single-select. (Abbreviated as QS)
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(typeof(ushort), "1")]
    public virtual ushort maxSelections
    {
        get
        {
            return this._maxSelections;
        }
        set
        {
            if ((_maxSelections.Equals(value) != true))
            {
                this._maxSelections = value;
                this.OnPropertyChanged("maxSelections", value);
            }
            _shouldSerializemaxSelections = true;
        }
    }
    
    /// <summary>
    /// If false, then the form implementation may change the
    /// order of items in the list.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool ordered
    {
        get
        {
            return this._ordered;
        }
        set
        {
            if ((_ordered.Equals(value) != true))
            {
                this._ordered = value;
                this.OnPropertyChanged("ordered", value);
            }
            _shouldSerializeordered = true;
        }
    }
    
    /// <summary>
    /// This attribute contains an SDC datatype enumeration. The
    /// selected value is the datatype of the content for all
    /// ListItem/@associatedValue content in the current List. It is used
    /// instead of associatedValueType. This element is used only if the
    /// ListItems are all associated with coded values from a single coding
    /// system. If associatedValueType on a ListItem has a datatype assigned,
    /// then the latter datatype overrides the content in
    /// defaultListItemDataType.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string defaultListItemDataType
    {
        get
        {
            return this._defaultListItemDataType;
        }
        set
        {
            if ((this._defaultListItemDataType == value))
            {
                return;
            }
            if (((this._defaultListItemDataType == null) 
                        || (_defaultListItemDataType.Equals(value) != true)))
            {
                this._defaultListItemDataType = value;
                this.OnPropertyChanged("defaultListItemDataType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ListHeaderTextSpecified
    {
        get
        {
            return this._listHeaderTextSpecified;
        }
        set
        {
            this._listHeaderTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DefaultCodeSystemSpecified
    {
        get
        {
            return this._defaultCodeSystemSpecified;
        }
        set
        {
            this._defaultCodeSystemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool IllegalListItemPairingsSpecified
    {
        get
        {
            return this._illegalListItemPairingsSpecified;
        }
        set
        {
            this._illegalListItemPairingsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool IllegalCoSelectedListItemsSpecified
    {
        get
        {
            return this._illegalCoSelectedListItemsSpecified;
        }
        set
        {
            this._illegalCoSelectedListItemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AfterChangeSpecified
    {
        get
        {
            return this._afterChangeSpecified;
        }
        set
        {
            this._afterChangeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnEventSpecified
    {
        get
        {
            return this._onEventSpecified;
        }
        set
        {
            this._onEventSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool colTextDelimiterSpecified
    {
        get
        {
            return this._colTextDelimiterSpecified;
        }
        set
        {
            this._colTextDelimiterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool numColsSpecified
    {
        get
        {
            return this._numColsSpecified;
        }
        set
        {
            this._numColsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool storedColSpecified
    {
        get
        {
            return this._storedColSpecified;
        }
        set
        {
            this._storedColSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minSelectionsSpecified
    {
        get
        {
            return this._minSelectionsSpecified;
        }
        set
        {
            this._minSelectionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxSelectionsSpecified
    {
        get
        {
            return this._maxSelectionsSpecified;
        }
        set
        {
            this._maxSelectionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool orderedSpecified
    {
        get
        {
            return this._orderedSpecified;
        }
        set
        {
            this._orderedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool defaultListItemDataTypeSpecified
    {
        get
        {
            return this._defaultListItemDataTypeSpecified;
        }
        set
        {
            this._defaultListItemDataTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether IllegalListItemPairings should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIllegalListItemPairings()
    {
        return IllegalListItemPairings != null && IllegalListItemPairings.Count > 0;
    }
    
    /// <summary>
    /// Test whether IllegalCoSelectedListItems should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIllegalCoSelectedListItems()
    {
        return IllegalCoSelectedListItems != null && IllegalCoSelectedListItems.Count > 0;
    }
    
    /// <summary>
    /// Test whether AfterChange should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAfterChange()
    {
        return AfterChange != null && AfterChange.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnEvent should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnEvent()
    {
        return OnEvent != null && OnEvent.Count > 0;
    }
    
    /// <summary>
    /// Test whether minSelections should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminSelections()
    {
        if (_shouldSerializeminSelections)
        {
            return true;
        }
        return (_minSelections != default(ushort));
    }
    
    /// <summary>
    /// Test whether maxSelections should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxSelections()
    {
        if (_shouldSerializemaxSelections)
        {
            return true;
        }
        return (_maxSelections != default(ushort));
    }
    
    /// <summary>
    /// Test whether ordered should be serialized
    /// </summary>
    public virtual bool ShouldSerializeordered()
    {
        if (_shouldSerializeordered)
        {
            return true;
        }
        return (_ordered != default(bool));
    }
    
    /// <summary>
    /// Test whether ListHeaderText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeListHeaderText()
    {
        return (_listHeaderText != null);
    }
    
    /// <summary>
    /// Test whether DefaultCodeSystem should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDefaultCodeSystem()
    {
        return (_defaultCodeSystem != null);
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
    
    /// <summary>
    /// Test whether colTextDelimiter should be serialized
    /// </summary>
    public virtual bool ShouldSerializecolTextDelimiter()
    {
        return !string.IsNullOrEmpty(colTextDelimiter);
    }
    
    /// <summary>
    /// Test whether defaultListItemDataType should be serialized
    /// </summary>
    public virtual bool ShouldSerializedefaultListItemDataType()
    {
        return !string.IsNullOrEmpty(defaultListItemDataType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type represents a list of specified answer choices. CHANGED
/// 9/20/2016: Fix for serialization error which aggregated all DisplayedItems at the
/// top of the ListItems. A Schematron (or similar validation tool) will be required to
/// ensure that at least 2 ListItems are present for single-select questions, and one
/// ListItem for multi-select questions.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ListType : ExtensionBaseType
{
    
    #region Private fields
    private List<DisplayedType> _items;
    
    private bool _itemsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("DisplayedItem", typeof(DisplayedType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ListItem", typeof(ListItemType), Order=0)]
    public virtual List<DisplayedType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ListItem elements represent answer choices that may appear under a
/// Question.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ListItemType : ListItemBaseType
{
    
    #region Private fields
    private ChildItemsType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ChildItems", Order=0)]
    public virtual ChildItemsType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This base element is the foundation for ListItems, but does not
/// include the MainItems sub-group under each ListItem.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class ListItemBaseType : DisplayedType
{
    
    #region Private fields
    private bool _shouldSerializeomitWhenSelected;
    
    private bool _shouldSerializeselectionDeselectsSiblings;
    
    private bool _shouldSerializeselectionDisablesChildren;
    
    private bool _shouldSerializeselected;
    
    private ListItemResponseFieldType _listItemResponseField;
    
    private List<EventType> _onSelect;
    
    private List<EventType> _onDeselect;
    
    private PredGuardType _selectIf;
    
    private PredGuardType _deselectIf;
    
    private bool _selected;
    
    private bool _selectionDisablesChildren;
    
    private string _selectionActivatesItems;
    
    private string _selectionSelectsListItems;
    
    private bool _selectionDeselectsSiblings;
    
    private bool _omitWhenSelected;
    
    private string _repeat;
    
    private string _instanceGUID;
    
    private string _parentGUID;
    
    private string _associatedValue;
    
    private string _associatedValueType;
    
    private bool _listItemResponseFieldSpecified;
    
    private bool _onSelectSpecified;
    
    private bool _onDeselectSpecified;
    
    private bool _selectIfSpecified;
    
    private bool _deselectIfSpecified;
    
    private bool _selectedSpecified;
    
    private bool _selectionDisablesChildrenSpecified;
    
    private bool _selectionActivatesItemsSpecified;
    
    private bool _selectionSelectsListItemsSpecified;
    
    private bool _selectionDeselectsSiblingsSpecified;
    
    private bool _omitWhenSelectedSpecified;
    
    private bool _repeatSpecified;
    
    private bool _instanceGUIDSpecified;
    
    private bool _parentGUIDSpecified;
    
    private bool _associatedValueSpecified;
    
    private bool _associatedValueTypeSpecified;
    #endregion
    
    /// <summary>
    /// ListItemBaseType class constructor
    /// </summary>
    public ListItemBaseType()
    {
        this._selected = false;
        this._selectionDisablesChildren = false;
        this._selectionDeselectsSiblings = false;
        this._omitWhenSelected = false;
        this._repeat = "0";
    }
    
    /// <summary>
    /// A place to enter values (of any data type) that are
    /// directly associated with, and attached to, a selected answer
    /// choice.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ListItemResponseFieldType ListItemResponseField
    {
        get
        {
            return this._listItemResponseField;
        }
        set
        {
            if ((this._listItemResponseField == value))
            {
                return;
            }
            if (((this._listItemResponseField == null) 
                        || (_listItemResponseField.Equals(value) != true)))
            {
                this._listItemResponseField = value;
                this.OnPropertyChanged("ListItemResponseField", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnSelect", Order=1)]
    public virtual List<EventType> OnSelect
    {
        get
        {
            return this._onSelect;
        }
        set
        {
            if ((this._onSelect == value))
            {
                return;
            }
            if (((this._onSelect == null) 
                        || (_onSelect.Equals(value) != true)))
            {
                this._onSelect = value;
                this.OnPropertyChanged("OnSelect", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnDeselect", Order=2)]
    public virtual List<EventType> OnDeselect
    {
        get
        {
            return this._onDeselect;
        }
        set
        {
            if ((this._onDeselect == value))
            {
                return;
            }
            if (((this._onDeselect == null) 
                        || (_onDeselect.Equals(value) != true)))
            {
                this._onDeselect = value;
                this.OnPropertyChanged("OnDeselect", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual PredGuardType SelectIf
    {
        get
        {
            return this._selectIf;
        }
        set
        {
            if ((this._selectIf == value))
            {
                return;
            }
            if (((this._selectIf == null) 
                        || (_selectIf.Equals(value) != true)))
            {
                this._selectIf = value;
                this.OnPropertyChanged("SelectIf", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual PredGuardType DeselectIf
    {
        get
        {
            return this._deselectIf;
        }
        set
        {
            if ((this._deselectIf == value))
            {
                return;
            }
            if (((this._deselectIf == null) 
                        || (_deselectIf.Equals(value) != true)))
            {
                this._deselectIf = value;
                this.OnPropertyChanged("DeselectIf", value);
            }
        }
    }
    
    /// <summary>
    /// Represents the default value of the ListItem in the
    /// FormDesign template, or the user's response in selecting one or more
    /// ListItems. If @multiSelect='false' on ListField then only one item may
    /// be selected.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool selected
    {
        get
        {
            return this._selected;
        }
        set
        {
            if ((_selected.Equals(value) != true))
            {
                this._selected = value;
                this.OnPropertyChanged("selected", value);
            }
            _shouldSerializeselected = true;
        }
    }
    
    /// <summary>
    /// If set to true, then selecting this ListItem must
    /// deactivate all descendant parts of the form, and ignore any user-entered
    /// values in the deactivated part. Deselecting the ListItem should
    /// reactivate the descendant items in their state at the time the items
    /// were deactivated. If items are disabled, then any data stored in the
    /// disabled questions should be removed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool selectionDisablesChildren
    {
        get
        {
            return this._selectionDisablesChildren;
        }
        set
        {
            if ((_selectionDisablesChildren.Equals(value) != true))
            {
                this._selectionDisablesChildren = value;
                this.OnPropertyChanged("selectionDisablesChildren", value);
            }
            _shouldSerializeselectionDisablesChildren = true;
        }
    }
    
    /// <summary>
    /// NEW Selecting the current ListItem will enable the named
    /// items in this attribute's content. Prefixing any named with a hyphen (-)
    /// will reverse the above behaviour (i.e., the named items will be
    /// disabled). Unselecting the ListItem will reverse this behaviour.
    /// Prefixing the name with a tilde (~) will supress this reversal behavior.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string selectionActivatesItems
    {
        get
        {
            return this._selectionActivatesItems;
        }
        set
        {
            if ((this._selectionActivatesItems == value))
            {
                return;
            }
            if (((this._selectionActivatesItems == null) 
                        || (_selectionActivatesItems.Equals(value) != true)))
            {
                this._selectionActivatesItems = value;
                this.OnPropertyChanged("selectionActivatesItems", value);
            }
        }
    }
    
    /// <summary>
    /// NEW Selecting the current ListItem will select the named
    /// ListItems in this attribute's content. Prefixing any named with a hyphen
    /// (-) will reverse the above behaviour. Unselecting the ListItem will
    /// reverse this behaviour. Prefixing the name with a tilde (~) will
    /// suppress this reversal behavior.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string selectionSelectsListItems
    {
        get
        {
            return this._selectionSelectsListItems;
        }
        set
        {
            if ((this._selectionSelectsListItems == value))
            {
                return;
            }
            if (((this._selectionSelectsListItems == null) 
                        || (_selectionSelectsListItems.Equals(value) != true)))
            {
                this._selectionSelectsListItems = value;
                this.OnPropertyChanged("selectionSelectsListItems", value);
            }
        }
    }
    
    /// <summary>
    /// If the ancestor ListField has @multiselect = 'true', then
    /// selecting this ListItem should de-select all other ListItem (sibling)
    /// nodes except the current one.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool selectionDeselectsSiblings
    {
        get
        {
            return this._selectionDeselectsSiblings;
        }
        set
        {
            if ((_selectionDeselectsSiblings.Equals(value) != true))
            {
                this._selectionDeselectsSiblings = value;
                this.OnPropertyChanged("selectionDeselectsSiblings", value);
            }
            _shouldSerializeselectionDeselectsSiblings = true;
        }
    }
    
    /// <summary>
    /// If @omitWhenSelected is set to true, then the question and
    /// its response(s) should not be present in a typical report derived from
    /// this template. This attribute is usually set to true when the answer
    /// choice is used to control form behavior (e.g., skip logic), or when the
    /// question provides unhelpful "negative" information about actions that
    /// did not occur or were not performed, or things that were not observed or
    /// could not be assessed. If @omitWhenSelectedset is false (default) then
    /// the question and its response(s) should appear in the report. Added
    /// 11/29/15 to replace @reportAction
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool omitWhenSelected
    {
        get
        {
            return this._omitWhenSelected;
        }
        set
        {
            if ((_omitWhenSelected.Equals(value) != true))
            {
                this._omitWhenSelected = value;
                this.OnPropertyChanged("omitWhenSelected", value);
            }
            _shouldSerializeomitWhenSelected = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public virtual string repeat
    {
        get
        {
            return this._repeat;
        }
        set
        {
            if ((this._repeat == value))
            {
                return;
            }
            if (((this._repeat == null) 
                        || (_repeat.Equals(value) != true)))
            {
                this._repeat = value;
                this.OnPropertyChanged("repeat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string instanceGUID
    {
        get
        {
            return this._instanceGUID;
        }
        set
        {
            if ((this._instanceGUID == value))
            {
                return;
            }
            if (((this._instanceGUID == null) 
                        || (_instanceGUID.Equals(value) != true)))
            {
                this._instanceGUID = value;
                this.OnPropertyChanged("instanceGUID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string parentGUID
    {
        get
        {
            return this._parentGUID;
        }
        set
        {
            if ((this._parentGUID == value))
            {
                return;
            }
            if (((this._parentGUID == null) 
                        || (_parentGUID.Equals(value) != true)))
            {
                this._parentGUID = value;
                this.OnPropertyChanged("parentGUID", value);
            }
        }
    }
    
    /// <summary>
    /// A typed value (e.g., an integer) that is uniquely
    /// associated with a ListItem. An example is the integer 10 for a ListItem
    /// with title that reads "10 o'clock". Typically these values are set to be
    /// used in calculations or other algorithms. In general, they can be
    /// treated something like a user-entered response on a the
    /// ListItemResponseField of a selected ListItem. This field should not be
    /// used for terminologies or local codes. The CodedValue type should be
    /// used for these kinds of metadata. This field should also not be used
    /// other properties such as translations, usage, etc. The data type shoudl
    /// be specified in @AssociatedValueType
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string associatedValue
    {
        get
        {
            return this._associatedValue;
        }
        set
        {
            if ((this._associatedValue == value))
            {
                return;
            }
            if (((this._associatedValue == null) 
                        || (_associatedValue.Equals(value) != true)))
            {
                this._associatedValue = value;
                this.OnPropertyChanged("associatedValue", value);
            }
        }
    }
    
    /// <summary>
    /// The data type of @AssociatedValue. Default is
    /// string.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string associatedValueType
    {
        get
        {
            return this._associatedValueType;
        }
        set
        {
            if ((this._associatedValueType == value))
            {
                return;
            }
            if (((this._associatedValueType == null) 
                        || (_associatedValueType.Equals(value) != true)))
            {
                this._associatedValueType = value;
                this.OnPropertyChanged("associatedValueType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ListItemResponseFieldSpecified
    {
        get
        {
            return this._listItemResponseFieldSpecified;
        }
        set
        {
            this._listItemResponseFieldSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnSelectSpecified
    {
        get
        {
            return this._onSelectSpecified;
        }
        set
        {
            this._onSelectSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnDeselectSpecified
    {
        get
        {
            return this._onDeselectSpecified;
        }
        set
        {
            this._onDeselectSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SelectIfSpecified
    {
        get
        {
            return this._selectIfSpecified;
        }
        set
        {
            this._selectIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DeselectIfSpecified
    {
        get
        {
            return this._deselectIfSpecified;
        }
        set
        {
            this._deselectIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool selectedSpecified
    {
        get
        {
            return this._selectedSpecified;
        }
        set
        {
            this._selectedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool selectionDisablesChildrenSpecified
    {
        get
        {
            return this._selectionDisablesChildrenSpecified;
        }
        set
        {
            this._selectionDisablesChildrenSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool selectionActivatesItemsSpecified
    {
        get
        {
            return this._selectionActivatesItemsSpecified;
        }
        set
        {
            this._selectionActivatesItemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool selectionSelectsListItemsSpecified
    {
        get
        {
            return this._selectionSelectsListItemsSpecified;
        }
        set
        {
            this._selectionSelectsListItemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool selectionDeselectsSiblingsSpecified
    {
        get
        {
            return this._selectionDeselectsSiblingsSpecified;
        }
        set
        {
            this._selectionDeselectsSiblingsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool omitWhenSelectedSpecified
    {
        get
        {
            return this._omitWhenSelectedSpecified;
        }
        set
        {
            this._omitWhenSelectedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool repeatSpecified
    {
        get
        {
            return this._repeatSpecified;
        }
        set
        {
            this._repeatSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceGUIDSpecified
    {
        get
        {
            return this._instanceGUIDSpecified;
        }
        set
        {
            this._instanceGUIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool parentGUIDSpecified
    {
        get
        {
            return this._parentGUIDSpecified;
        }
        set
        {
            this._parentGUIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool associatedValueSpecified
    {
        get
        {
            return this._associatedValueSpecified;
        }
        set
        {
            this._associatedValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool associatedValueTypeSpecified
    {
        get
        {
            return this._associatedValueTypeSpecified;
        }
        set
        {
            this._associatedValueTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether OnSelect should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnSelect()
    {
        return OnSelect != null && OnSelect.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnDeselect should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnDeselect()
    {
        return OnDeselect != null && OnDeselect.Count > 0;
    }
    
    /// <summary>
    /// Test whether selected should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselected()
    {
        if (_shouldSerializeselected)
        {
            return true;
        }
        return (_selected != default(bool));
    }
    
    /// <summary>
    /// Test whether selectionDisablesChildren should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectionDisablesChildren()
    {
        if (_shouldSerializeselectionDisablesChildren)
        {
            return true;
        }
        return (_selectionDisablesChildren != default(bool));
    }
    
    /// <summary>
    /// Test whether selectionDeselectsSiblings should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectionDeselectsSiblings()
    {
        if (_shouldSerializeselectionDeselectsSiblings)
        {
            return true;
        }
        return (_selectionDeselectsSiblings != default(bool));
    }
    
    /// <summary>
    /// Test whether omitWhenSelected should be serialized
    /// </summary>
    public virtual bool ShouldSerializeomitWhenSelected()
    {
        if (_shouldSerializeomitWhenSelected)
        {
            return true;
        }
        return (_omitWhenSelected != default(bool));
    }
    
    /// <summary>
    /// Test whether ListItemResponseField should be serialized
    /// </summary>
    public virtual bool ShouldSerializeListItemResponseField()
    {
        return (_listItemResponseField != null);
    }
    
    /// <summary>
    /// Test whether SelectIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSelectIf()
    {
        return (_selectIf != null);
    }
    
    /// <summary>
    /// Test whether DeselectIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDeselectIf()
    {
        return (_deselectIf != null);
    }
    
    /// <summary>
    /// Test whether selectionActivatesItems should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectionActivatesItems()
    {
        return !string.IsNullOrEmpty(selectionActivatesItems);
    }
    
    /// <summary>
    /// Test whether selectionSelectsListItems should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectionSelectsListItems()
    {
        return !string.IsNullOrEmpty(selectionSelectsListItems);
    }
    
    /// <summary>
    /// Test whether repeat should be serialized
    /// </summary>
    public virtual bool ShouldSerializerepeat()
    {
        return !string.IsNullOrEmpty(repeat);
    }
    
    /// <summary>
    /// Test whether instanceGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceGUID()
    {
        return !string.IsNullOrEmpty(instanceGUID);
    }
    
    /// <summary>
    /// Test whether parentGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparentGUID()
    {
        return !string.IsNullOrEmpty(parentGUID);
    }
    
    /// <summary>
    /// Test whether associatedValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeassociatedValue()
    {
        return !string.IsNullOrEmpty(associatedValue);
    }
    
    /// <summary>
    /// Test whether associatedValueType should be serialized
    /// </summary>
    public virtual bool ShouldSerializeassociatedValueType()
    {
        return !string.IsNullOrEmpty(associatedValueType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type represents a place to store a fill-in response associated
/// directly with a selected ListItem. The response may be optional or
/// required.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ListItemResponseFieldType : ResponseFieldType
{
    
    #region Private fields
    private bool _shouldSerializeresponseRequired;
    
    private bool _responseRequired;
    
    private bool _responseRequiredSpecified;
    #endregion
    
    /// <summary>
    /// ListItemResponseFieldType class constructor
    /// </summary>
    public ListItemResponseFieldType()
    {
        this._responseRequired = false;
    }
    
    /// <summary>
    /// If @responseRequired is set to true, then the appropriate
    /// text or Blob must be entered in the data-entry field associated with
    /// this list item.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool responseRequired
    {
        get
        {
            return this._responseRequired;
        }
        set
        {
            if ((_responseRequired.Equals(value) != true))
            {
                this._responseRequired = value;
                this.OnPropertyChanged("responseRequired", value);
            }
            _shouldSerializeresponseRequired = true;
        }
    }
    
    [XmlIgnore()]
    public bool responseRequiredSpecified
    {
        get
        {
            return this._responseRequiredSpecified;
        }
        set
        {
            this._responseRequiredSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether responseRequired should be serialized
    /// </summary>
    public virtual bool ShouldSerializeresponseRequired()
    {
        if (_shouldSerializeresponseRequired)
        {
            return true;
        }
        return (_responseRequired != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type is a template for a data entry field that accepts entries
/// (responses or answers) of any data type, including text, numbers, dates, and Base 64
/// - encoded blobs (images, sounds, video, other binary formats, etc.). This type
/// cannot contain ListItems, but it may be a child of a Question or a
/// ListItem.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListItemResponseFieldType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ResponseFieldType : ExtensionBaseType
{
    
    #region Private fields
    private DataTypes_DEType _response;
    
    private ExtensionBaseType _item;
    
    private RichTextType _textAfterResponse;
    
    private UnitsType _responseUnits;
    
    private List<EventType> _afterChange;
    
    private List<OnEventType> _onEvent;
    
    private bool _responseSpecified;
    
    private bool _itemSpecified;
    
    private bool _textAfterResponseSpecified;
    
    private bool _responseUnitsSpecified;
    
    private bool _afterChangeSpecified;
    
    private bool _onEventSpecified;
    #endregion
    
    /// <summary>
    /// W3C Schema data type details
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual DataTypes_DEType Response
    {
        get
        {
            return this._response;
        }
        set
        {
            if ((this._response == value))
            {
                return;
            }
            if (((this._response == null) 
                        || (_response.Equals(value) != true)))
            {
                this._response = value;
                this.OnPropertyChanged("Response", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("CallSetValue", typeof(CallFuncActionType), Order=1)]
    [System.Xml.Serialization.XmlElementAttribute("SetValue", typeof(ScriptCodeAnyType), Order=1)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// TextAfterResponse is fixed text that appears after (to
    /// the right of) the user's response on the data entry form. This may
    /// be text for units such as "mm", "cm", etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual RichTextType TextAfterResponse
    {
        get
        {
            return this._textAfterResponse;
        }
        set
        {
            if ((this._textAfterResponse == value))
            {
                return;
            }
            if (((this._textAfterResponse == null) 
                        || (_textAfterResponse.Equals(value) != true)))
            {
                this._textAfterResponse = value;
                this.OnPropertyChanged("TextAfterResponse", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual UnitsType ResponseUnits
    {
        get
        {
            return this._responseUnits;
        }
        set
        {
            if ((this._responseUnits == value))
            {
                return;
            }
            if (((this._responseUnits == null) 
                        || (_responseUnits.Equals(value) != true)))
            {
                this._responseUnits = value;
                this.OnPropertyChanged("ResponseUnits", value);
            }
        }
    }
    
    /// <summary>
    /// Event that occurs after the Response value is changed,
    /// usually fired after a user leaves the Response
    /// field.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("AfterChange", Order=4)]
    public virtual List<EventType> AfterChange
    {
        get
        {
            return this._afterChange;
        }
        set
        {
            if ((this._afterChange == value))
            {
                return;
            }
            if (((this._afterChange == null) 
                        || (_afterChange.Equals(value) != true)))
            {
                this._afterChange = value;
                this.OnPropertyChanged("AfterChange", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OnEvent", Order=5)]
    public virtual List<OnEventType> OnEvent
    {
        get
        {
            return this._onEvent;
        }
        set
        {
            if ((this._onEvent == value))
            {
                return;
            }
            if (((this._onEvent == null) 
                        || (_onEvent.Equals(value) != true)))
            {
                this._onEvent = value;
                this.OnPropertyChanged("OnEvent", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ResponseSpecified
    {
        get
        {
            return this._responseSpecified;
        }
        set
        {
            this._responseSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TextAfterResponseSpecified
    {
        get
        {
            return this._textAfterResponseSpecified;
        }
        set
        {
            this._textAfterResponseSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ResponseUnitsSpecified
    {
        get
        {
            return this._responseUnitsSpecified;
        }
        set
        {
            this._responseUnitsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AfterChangeSpecified
    {
        get
        {
            return this._afterChangeSpecified;
        }
        set
        {
            this._afterChangeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OnEventSpecified
    {
        get
        {
            return this._onEventSpecified;
        }
        set
        {
            this._onEventSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether AfterChange should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAfterChange()
    {
        return AfterChange != null && AfterChange.Count > 0;
    }
    
    /// <summary>
    /// Test whether OnEvent should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOnEvent()
    {
        return OnEvent != null && OnEvent.Count > 0;
    }
    
    /// <summary>
    /// Test whether Response should be serialized
    /// </summary>
    public virtual bool ShouldSerializeResponse()
    {
        return (_response != null);
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
    
    /// <summary>
    /// Test whether TextAfterResponse should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTextAfterResponse()
    {
        return (_textAfterResponse != null);
    }
    
    /// <summary>
    /// Test whether ResponseUnits should be serialized
    /// </summary>
    public virtual bool ShouldSerializeResponseUnits()
    {
        return (_responseUnits != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// MOVED from SDCDataTypes:
/// SDC datatypes for Data Entry (DE), based mostly on W3C specifications. Uses baseAttributes  and Extension capability to enhance the list of Data Types. Includes additonal metadata to specify data input restrictions for data entry forms, and to aid in validation of IHE RFD SubmitForm responses in XML instance documents.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypes_DEType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeItemElementName;
    
    private BaseType _item;
    
    private ItemChoiceType2 _itemElementName;
    
    private bool _itemSpecified;
    
    private bool _itemElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("HTML", typeof(HTML_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("XML", typeof(XML_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("anyType", typeof(anyType_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("anyURI", typeof(anyURI_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("base64Binary", typeof(base64Binary_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("boolean", typeof(boolean_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("byte", typeof(byte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("date", typeof(date_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTime", typeof(dateTimeStamp_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTimeStamp", typeof(dateTimeStamp_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("decimal", typeof(decimal_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("double", typeof(double_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("duration", typeof(duration_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(float_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gDay", typeof(gDay_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonth", typeof(gMonth_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonthDay", typeof(gMonthDay_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYear", typeof(gYear_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYearMonth", typeof(gMonth_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("hexBinary", typeof(hexBinary_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("int", typeof(int_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(integer_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("long", typeof(long_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("negativeInteger", typeof(negativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonNegativeInteger", typeof(nonNegativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonPositiveInteger", typeof(nonPositiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("positiveInteger", typeof(positiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("short", typeof(short_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("string", typeof(string_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedByte", typeof(unsignedByte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedInt", typeof(unsignedInt_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedLong", typeof(unsignedLong_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedShort", typeof(unsignedShort_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemChoiceType2 ItemElementName
    {
        get
        {
            return this._itemElementName;
        }
        set
        {
            if ((_itemElementName.Equals(value) != true))
            {
                this._itemElementName = value;
                this.OnPropertyChanged("ItemElementName", value);
            }
            _shouldSerializeItemElementName = true;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemElementNameSpecified
    {
        get
        {
            return this._itemElementNameSpecified;
        }
        set
        {
            this._itemElementNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ItemElementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItemElementName()
    {
        if (_shouldSerializeItemElementName)
        {
            return true;
        }
        return (_itemElementName != default(ItemChoiceType2));
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class HTML_DEtype : HTML_Stype
{
    
    #region Private fields
    private bool _shouldSerializemaxLength;
    
    private bool _shouldSerializeminLength;
    
    private long _minLength;
    
    private bool minLengthFieldSpecified;
    
    private long _maxLength;
    
    private bool maxLengthFieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long minLength
    {
        get
        {
            return this._minLength;
        }
        set
        {
            if ((_minLength.Equals(value) != true))
            {
                this._minLength = value;
                this.OnPropertyChanged("minLength", value);
            }
            _shouldSerializeminLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool minLengthSpecified
    {
        get
        {
            return this.minLengthFieldSpecified;
        }
        set
        {
            if ((minLengthFieldSpecified.Equals(value) != true))
            {
                this.minLengthFieldSpecified = value;
                this.OnPropertyChanged("minLengthSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual long maxLength
    {
        get
        {
            return this._maxLength;
        }
        set
        {
            if ((_maxLength.Equals(value) != true))
            {
                this._maxLength = value;
                this.OnPropertyChanged("maxLength", value);
            }
            _shouldSerializemaxLength = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool maxLengthSpecified
    {
        get
        {
            return this.maxLengthFieldSpecified;
        }
        set
        {
            if ((maxLengthFieldSpecified.Equals(value) != true))
            {
                this.maxLengthFieldSpecified = value;
                this.OnPropertyChanged("maxLengthSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether minLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminLength()
    {
        if (_shouldSerializeminLength)
        {
            return true;
        }
        return (_minLength != default(long));
    }
    
    /// <summary>
    /// Test whether maxLength should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxLength()
    {
        if (_shouldSerializemaxLength)
        {
            return true;
        }
        return (_maxLength != default(long));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemChoiceType2
{
    
    HTML,
    
    XML,
    
    anyType,
    
    anyURI,
    
    base64Binary,
    
    boolean,
    
    @byte,
    
    date,
    
    dateTime,
    
    dateTimeStamp,
    
    @decimal,
    
    @double,
    
    duration,
    
    @float,
    
    gDay,
    
    gMonth,
    
    gMonthDay,
    
    gYear,
    
    gYearMonth,
    
    hexBinary,
    
    @int,
    
    integer,
    
    @long,
    
    negativeInteger,
    
    nonNegativeInteger,
    
    nonPositiveInteger,
    
    positiveInteger,
    
    @short,
    
    @string,
    
    time,
    
    unsignedByte,
    
    unsignedInt,
    
    unsignedLong,
    
    unsignedShort,
    
    yearMonthDuration,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Show a report preview, based on data in the current form. The
/// following parameter may be used: reportID: points to a report definition in SDC
/// format.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActPreviewReportType : ExtensionBaseType
{
    
    #region Private fields
    private string _reportID;
    
    private string _displayState;
    
    private bool _reportIDSpecified;
    
    private bool _displayStateSpecified;
    #endregion
    
    /// <summary>
    /// This ID represents the report to be
    /// displayed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string reportID
    {
        get
        {
            return this._reportID;
        }
        set
        {
            if ((this._reportID == value))
            {
                return;
            }
            if (((this._reportID == null) 
                        || (_reportID.Equals(value) != true)))
            {
                this._reportID = value;
                this.OnPropertyChanged("reportID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string displayState
    {
        get
        {
            return this._displayState;
        }
        set
        {
            if ((this._displayState == value))
            {
                return;
            }
            if (((this._displayState == null) 
                        || (_displayState.Equals(value) != true)))
            {
                this._displayState = value;
                this.OnPropertyChanged("displayState", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool reportIDSpecified
    {
        get
        {
            return this._reportIDSpecified;
        }
        set
        {
            this._reportIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool displayStateSpecified
    {
        get
        {
            return this._displayStateSpecified;
        }
        set
        {
            this._displayStateSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether reportID should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportID()
    {
        return !string.IsNullOrEmpty(reportID);
    }
    
    /// <summary>
    /// Test whether displayState should be serialized
    /// </summary>
    public virtual bool ShouldSerializedisplayState()
    {
        return !string.IsNullOrEmpty(displayState);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Save the form's responses to the default persistance layer(s). The
/// default format is SDCSubmitForm, but other formats may be defined and
/// used.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSaveResponsesType : ExtensionBaseType
{
    
    #region Private fields
    private RichTextType _messageText;
    
    private bool _messageTextSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual RichTextType MessageText
    {
        get
        {
            return this._messageText;
        }
        set
        {
            if ((this._messageText == value))
            {
                return;
            }
            if (((this._messageText == null) 
                        || (_messageText.Equals(value) != true)))
            {
                this._messageText = value;
                this.OnPropertyChanged("MessageText", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool MessageTextSpecified
    {
        get
        {
            return this._messageTextSpecified;
        }
        set
        {
            this._messageTextSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether MessageText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMessageText()
    {
        return (_messageText != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RuleSelectMatchingListItemsType : ExtensionBaseType
{
    
    #region Private fields
    private ItemNameAttributeType _matchSource;
    
    private RuleListItemMatchTargetsType _listItemMatchTargets;
    
    private bool _matchSourceSpecified;
    
    private bool _listItemMatchTargetsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ItemNameAttributeType MatchSource
    {
        get
        {
            return this._matchSource;
        }
        set
        {
            if ((this._matchSource == value))
            {
                return;
            }
            if (((this._matchSource == null) 
                        || (_matchSource.Equals(value) != true)))
            {
                this._matchSource = value;
                this.OnPropertyChanged("MatchSource", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RuleListItemMatchTargetsType ListItemMatchTargets
    {
        get
        {
            return this._listItemMatchTargets;
        }
        set
        {
            if ((this._listItemMatchTargets == value))
            {
                return;
            }
            if (((this._listItemMatchTargets == null) 
                        || (_listItemMatchTargets.Equals(value) != true)))
            {
                this._listItemMatchTargets = value;
                this.OnPropertyChanged("ListItemMatchTargets", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool MatchSourceSpecified
    {
        get
        {
            return this._matchSourceSpecified;
        }
        set
        {
            this._matchSourceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ListItemMatchTargetsSpecified
    {
        get
        {
            return this._listItemMatchTargetsSpecified;
        }
        set
        {
            this._listItemMatchTargetsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether MatchSource should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMatchSource()
    {
        return (_matchSource != null);
    }
    
    /// <summary>
    /// Test whether ListItemMatchTargets should be serialized
    /// </summary>
    public virtual bool ShouldSerializeListItemMatchTargets()
    {
        return (_listItemMatchTargets != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RuleListItemMatchTargetsType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeattributeToMatch;
    
    private string _matchListItems;
    
    private string _matchQuestions;
    
    private RuleListItemMatchTargetsTypeAttributeToMatch _attributeToMatch;
    
    private bool _matchListItemsSpecified;
    
    private bool _matchQuestionsSpecified;
    
    private bool _attributeToMatchSpecified;
    #endregion
    
    /// <summary>
    /// RuleListItemMatchTargetsType class constructor
    /// </summary>
    public RuleListItemMatchTargetsType()
    {
        this._attributeToMatch = RuleListItemMatchTargetsTypeAttributeToMatch.associatedValue;
    }
    
    /// <summary>
    /// Takes the @name of one or more target ListItem elements.
    /// If the source value matches the match supplied attribute criteria, then
    /// the ListItem(s) should be selcted. The named Question and target
    /// ListItem must be activated (visible and enabled) in order for it to be
    /// selected. Read-only ListItems can be selected in the same manner.
    /// Multiple ListItem names may be specified, separated by
    /// spaces.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string MatchListItems
    {
        get
        {
            return this._matchListItems;
        }
        set
        {
            if ((this._matchListItems == value))
            {
                return;
            }
            if (((this._matchListItems == null) 
                        || (_matchListItems.Equals(value) != true)))
            {
                this._matchListItems = value;
                this.OnPropertyChanged("MatchListItems", value);
            }
        }
    }
    
    /// <summary>
    /// Takes the @name of a Question element with ListItems. If
    /// the source value matches the @associatedValue (or other
    /// @attributeToMatch) of one or more ListItems, then the ListItem(s) should
    /// be selcted. The named Question and target ListItem must be activated
    /// (visible and enabled) in order for it to be selected. Read-only
    /// Questions/ListItems can be selected in the same manner. Multiple Queston
    /// names may be specified, separated by spaces.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string MatchQuestions
    {
        get
        {
            return this._matchQuestions;
        }
        set
        {
            if ((this._matchQuestions == value))
            {
                return;
            }
            if (((this._matchQuestions == null) 
                        || (_matchQuestions.Equals(value) != true)))
            {
                this._matchQuestions = value;
                this.OnPropertyChanged("MatchQuestions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(RuleListItemMatchTargetsTypeAttributeToMatch.associatedValue)]
    public virtual RuleListItemMatchTargetsTypeAttributeToMatch attributeToMatch
    {
        get
        {
            return this._attributeToMatch;
        }
        set
        {
            if ((_attributeToMatch.Equals(value) != true))
            {
                this._attributeToMatch = value;
                this.OnPropertyChanged("attributeToMatch", value);
            }
            _shouldSerializeattributeToMatch = true;
        }
    }
    
    [XmlIgnore()]
    public bool MatchListItemsSpecified
    {
        get
        {
            return this._matchListItemsSpecified;
        }
        set
        {
            this._matchListItemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool MatchQuestionsSpecified
    {
        get
        {
            return this._matchQuestionsSpecified;
        }
        set
        {
            this._matchQuestionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool attributeToMatchSpecified
    {
        get
        {
            return this._attributeToMatchSpecified;
        }
        set
        {
            this._attributeToMatchSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether attributeToMatch should be serialized
    /// </summary>
    public virtual bool ShouldSerializeattributeToMatch()
    {
        if (_shouldSerializeattributeToMatch)
        {
            return true;
        }
        return (_attributeToMatch != default(RuleListItemMatchTargetsTypeAttributeToMatch));
    }
    
    /// <summary>
    /// Test whether MatchListItems should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMatchListItems()
    {
        return !string.IsNullOrEmpty(MatchListItems);
    }
    
    /// <summary>
    /// Test whether MatchQuestions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMatchQuestions()
    {
        return !string.IsNullOrEmpty(MatchQuestions);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum RuleListItemMatchTargetsTypeAttributeToMatch
{
    
    associatedValue,
    
    Code,
    
    TypeValue,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Send a message to any endpoint. Messages may include alerts of various
/// types. The default datatype for messages is string.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSendMessageType : RichTextType
{
    
    #region Private fields
    private List<ExtensionBaseType> _items;
    
    private string _messageType;
    
    private bool _itemsSpecified;
    
    private bool _messageTypeSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Email", typeof(EmailAddressType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Fax", typeof(PhoneNumberType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("WebService", typeof(CallFuncActionType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string messageType
    {
        get
        {
            return this._messageType;
        }
        set
        {
            if ((this._messageType == value))
            {
                return;
            }
            if (((this._messageType == null) 
                        || (_messageType.Equals(value) != true)))
            {
                this._messageType = value;
                this.OnPropertyChanged("messageType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool messageTypeSpecified
    {
        get
        {
            return this._messageTypeSpecified;
        }
        set
        {
            this._messageTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether messageType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemessageType()
    {
        return !string.IsNullOrEmpty(messageType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Send a report to an endpoint, via email, fax or web service. The
/// default report will be transmittted in SDCSubmitForm format, but may adopt a custom
/// report type
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSendReportType : ExtensionBaseType
{
    
    #region Private fields
    private List<ExtensionBaseType> _items;
    
    private string _reportID;
    
    private string _reportInstanceGuid;
    
    private string _reportInstanceVersonGuid;
    
    private bool _itemsSpecified;
    
    private bool _reportIDSpecified;
    
    private bool _reportInstanceGuidSpecified;
    
    private bool _reportInstanceVersonGuidSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Email", typeof(EmailAddressType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Fax", typeof(PhoneNumberType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("WebService", typeof(CallFuncActionType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string reportID
    {
        get
        {
            return this._reportID;
        }
        set
        {
            if ((this._reportID == value))
            {
                return;
            }
            if (((this._reportID == null) 
                        || (_reportID.Equals(value) != true)))
            {
                this._reportID = value;
                this.OnPropertyChanged("reportID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string reportInstanceGuid
    {
        get
        {
            return this._reportInstanceGuid;
        }
        set
        {
            if ((this._reportInstanceGuid == value))
            {
                return;
            }
            if (((this._reportInstanceGuid == null) 
                        || (_reportInstanceGuid.Equals(value) != true)))
            {
                this._reportInstanceGuid = value;
                this.OnPropertyChanged("reportInstanceGuid", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string reportInstanceVersonGuid
    {
        get
        {
            return this._reportInstanceVersonGuid;
        }
        set
        {
            if ((this._reportInstanceVersonGuid == value))
            {
                return;
            }
            if (((this._reportInstanceVersonGuid == null) 
                        || (_reportInstanceVersonGuid.Equals(value) != true)))
            {
                this._reportInstanceVersonGuid = value;
                this.OnPropertyChanged("reportInstanceVersonGuid", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool reportIDSpecified
    {
        get
        {
            return this._reportIDSpecified;
        }
        set
        {
            this._reportIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool reportInstanceGuidSpecified
    {
        get
        {
            return this._reportInstanceGuidSpecified;
        }
        set
        {
            this._reportInstanceGuidSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool reportInstanceVersonGuidSpecified
    {
        get
        {
            return this._reportInstanceVersonGuidSpecified;
        }
        set
        {
            this._reportInstanceVersonGuidSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
    
    /// <summary>
    /// Test whether reportID should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportID()
    {
        return !string.IsNullOrEmpty(reportID);
    }
    
    /// <summary>
    /// Test whether reportInstanceGuid should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportInstanceGuid()
    {
        return !string.IsNullOrEmpty(reportInstanceGuid);
    }
    
    /// <summary>
    /// Test whether reportInstanceVersonGuid should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportInstanceVersonGuid()
    {
        return !string.IsNullOrEmpty(reportInstanceVersonGuid);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type is used to act upon the value of common item attributes. If
/// an "act" attribute (a type with the "act" prefix) has no value assigned, it is
/// ignored. If it has a value, then that attribute on the target item(s) assume(s) that
/// stated value when an attached Boolean condition evaluates to true. The attached
/// condition may be an "If" statement or any expression that evaluates to a Boolean
/// value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActSetAttributeType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeactReadOnly;
    
    private bool _shouldSerializeactDeleteResponse;
    
    private bool _shouldSerializeactSelect;
    
    private bool _shouldSerializeactActivate;
    
    private bool _shouldSerializeactEnable;
    
    private bool _shouldSerializeactVisible;
    
    private string _targetNames;
    
    private bool _actVisible;
    
    private bool actVisibleFieldSpecified;
    
    private bool _actEnable;
    
    private bool actEnableFieldSpecified;
    
    private string _actMinCard;
    
    private string _actMaxCard;
    
    private bool _actActivate;
    
    private bool actActivateFieldSpecified;
    
    private bool _actSelect;
    
    private bool actSelectFieldSpecified;
    
    private bool _actDeleteResponse;
    
    private bool actDeleteResponseFieldSpecified;
    
    private bool _actReadOnly;
    
    private bool actReadOnlyFieldSpecified;
    
    private string _actType;
    
    private string _actStyleClass;
    
    private string _actSetTitleText;
    
    private byte[] _actSetBase64HTML;
    
    private string _actSetCode;
    
    private string _actSetCodeSystem;
    
    private string _actSetVal;
    
    private string _actSetAssociatedValue;
    
    private string _actSetValFromRef;
    
    private string _actSetAssociatedValueFromRef;
    
    private bool _targetNamesSpecified;
    
    private bool _actMinCardSpecified;
    
    private bool _actMaxCardSpecified;
    
    private bool _actTypeSpecified;
    
    private bool _actStyleClassSpecified;
    
    private bool _actSetTitleTextSpecified;
    
    private bool _actSetBase64HTMLSpecified;
    
    private bool _actSetCodeSpecified;
    
    private bool _actSetCodeSystemSpecified;
    
    private bool _actSetValSpecified;
    
    private bool _actSetAssociatedValueSpecified;
    
    private bool _actSetValFromRefSpecified;
    
    private bool _actSetAssociatedValueFromRefSpecified;
    #endregion
    
    /// <summary>
    /// The names of the items affected by property
    /// actions
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string targetNames
    {
        get
        {
            return this._targetNames;
        }
        set
        {
            if ((this._targetNames == value))
            {
                return;
            }
            if (((this._targetNames == null) 
                        || (_targetNames.Equals(value) != true)))
            {
                this._targetNames = value;
                this.OnPropertyChanged("targetNames", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actVisible
    {
        get
        {
            return this._actVisible;
        }
        set
        {
            if ((_actVisible.Equals(value) != true))
            {
                this._actVisible = value;
                this.OnPropertyChanged("actVisible", value);
            }
            _shouldSerializeactVisible = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actVisibleSpecified
    {
        get
        {
            return this.actVisibleFieldSpecified;
        }
        set
        {
            if ((actVisibleFieldSpecified.Equals(value) != true))
            {
                this.actVisibleFieldSpecified = value;
                this.OnPropertyChanged("actVisibleSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actEnable
    {
        get
        {
            return this._actEnable;
        }
        set
        {
            if ((_actEnable.Equals(value) != true))
            {
                this._actEnable = value;
                this.OnPropertyChanged("actEnable", value);
            }
            _shouldSerializeactEnable = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actEnableSpecified
    {
        get
        {
            return this.actEnableFieldSpecified;
        }
        set
        {
            if ((actEnableFieldSpecified.Equals(value) != true))
            {
                this.actEnableFieldSpecified = value;
                this.OnPropertyChanged("actEnableSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Controls requirement to answer the question and the
    /// minimum number of repeats.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string actMinCard
    {
        get
        {
            return this._actMinCard;
        }
        set
        {
            if ((this._actMinCard == value))
            {
                return;
            }
            if (((this._actMinCard == null) 
                        || (_actMinCard.Equals(value) != true)))
            {
                this._actMinCard = value;
                this.OnPropertyChanged("actMinCard", value);
            }
        }
    }
    
    /// <summary>
    /// Controls requirement to answer the
    /// question
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public virtual string actMaxCard
    {
        get
        {
            return this._actMaxCard;
        }
        set
        {
            if ((this._actMaxCard == value))
            {
                return;
            }
            if (((this._actMaxCard == null) 
                        || (_actMaxCard.Equals(value) != true)))
            {
                this._actMaxCard = value;
                this.OnPropertyChanged("actMaxCard", value);
            }
        }
    }
    
    /// <summary>
    /// Toggle visible and enabled together. Setting this to false
    /// will de-activate all descendents but will not change their enabled or
    /// visible properties.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actActivate
    {
        get
        {
            return this._actActivate;
        }
        set
        {
            if ((_actActivate.Equals(value) != true))
            {
                this._actActivate = value;
                this.OnPropertyChanged("actActivate", value);
            }
            _shouldSerializeactActivate = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actActivateSpecified
    {
        get
        {
            return this.actActivateFieldSpecified;
        }
        set
        {
            if ((actActivateFieldSpecified.Equals(value) != true))
            {
                this.actActivateFieldSpecified = value;
                this.OnPropertyChanged("actActivateSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Toggle selection of a List Item; not applicable to other
    /// items.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actSelect
    {
        get
        {
            return this._actSelect;
        }
        set
        {
            if ((_actSelect.Equals(value) != true))
            {
                this._actSelect = value;
                this.OnPropertyChanged("actSelect", value);
            }
            _shouldSerializeactSelect = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actSelectSpecified
    {
        get
        {
            return this.actSelectFieldSpecified;
        }
        set
        {
            if ((actSelectFieldSpecified.Equals(value) != true))
            {
                this.actSelectFieldSpecified = value;
                this.OnPropertyChanged("actSelectSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Delete any response in a Response field on a question or
    /// ListItem. Not applicable to other item types.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actDeleteResponse
    {
        get
        {
            return this._actDeleteResponse;
        }
        set
        {
            if ((_actDeleteResponse.Equals(value) != true))
            {
                this._actDeleteResponse = value;
                this.OnPropertyChanged("actDeleteResponse", value);
            }
            _shouldSerializeactDeleteResponse = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actDeleteResponseSpecified
    {
        get
        {
            return this.actDeleteResponseFieldSpecified;
        }
        set
        {
            if ((actDeleteResponseFieldSpecified.Equals(value) != true))
            {
                this.actDeleteResponseFieldSpecified = value;
                this.OnPropertyChanged("actDeleteResponseSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Delete any response in a Response field on a question or
    /// ListItem. Not applicable to other item types.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool actReadOnly
    {
        get
        {
            return this._actReadOnly;
        }
        set
        {
            if ((_actReadOnly.Equals(value) != true))
            {
                this._actReadOnly = value;
                this.OnPropertyChanged("actReadOnly", value);
            }
            _shouldSerializeactReadOnly = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool actReadOnlySpecified
    {
        get
        {
            return this.actReadOnlyFieldSpecified;
        }
        set
        {
            if ((actReadOnlyFieldSpecified.Equals(value) != true))
            {
                this.actReadOnlyFieldSpecified = value;
                this.OnPropertyChanged("actReadOnlySpecified", value);
            }
        }
    }
    
    /// <summary>
    /// Set the @type attribute value
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string actType
    {
        get
        {
            return this._actType;
        }
        set
        {
            if ((this._actType == value))
            {
                return;
            }
            if (((this._actType == null) 
                        || (_actType.Equals(value) != true)))
            {
                this._actType = value;
                this.OnPropertyChanged("actType", value);
            }
        }
    }
    
    /// <summary>
    /// Set the @styleClass attribute value
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string actStyleClass
    {
        get
        {
            return this._actStyleClass;
        }
        set
        {
            if ((this._actStyleClass == value))
            {
                return;
            }
            if (((this._actStyleClass == null) 
                        || (_actStyleClass.Equals(value) != true)))
            {
                this._actStyleClass = value;
                this.OnPropertyChanged("actStyleClass", value);
            }
        }
    }
    
    /// <summary>
    /// Set the @title text on an item.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetTitleText
    {
        get
        {
            return this._actSetTitleText;
        }
        set
        {
            if ((this._actSetTitleText == value))
            {
                return;
            }
            if (((this._actSetTitleText == null) 
                        || (_actSetTitleText.Equals(value) != true)))
            {
                this._actSetTitleText = value;
                this.OnPropertyChanged("actSetTitleText", value);
            }
        }
    }
    
    /// <summary>
    /// Set HTML as base-64-encoded binary
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] actSetBase64HTML
    {
        get
        {
            return this._actSetBase64HTML;
        }
        set
        {
            if ((this._actSetBase64HTML == value))
            {
                return;
            }
            if (((this._actSetBase64HTML == null) 
                        || (_actSetBase64HTML.Equals(value) != true)))
            {
                this._actSetBase64HTML = value;
                this.OnPropertyChanged("actSetBase64HTML", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetCode
    {
        get
        {
            return this._actSetCode;
        }
        set
        {
            if ((this._actSetCode == value))
            {
                return;
            }
            if (((this._actSetCode == null) 
                        || (_actSetCode.Equals(value) != true)))
            {
                this._actSetCode = value;
                this.OnPropertyChanged("actSetCode", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetCodeSystem
    {
        get
        {
            return this._actSetCodeSystem;
        }
        set
        {
            if ((this._actSetCodeSystem == value))
            {
                return;
            }
            if (((this._actSetCodeSystem == null) 
                        || (_actSetCodeSystem.Equals(value) != true)))
            {
                this._actSetCodeSystem = value;
                this.OnPropertyChanged("actSetCodeSystem", value);
            }
        }
    }
    
    /// <summary>
    /// Set a @val attribute with a supplied value. The correct
    /// data type must be used if applicable.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetVal
    {
        get
        {
            return this._actSetVal;
        }
        set
        {
            if ((this._actSetVal == value))
            {
                return;
            }
            if (((this._actSetVal == null) 
                        || (_actSetVal.Equals(value) != true)))
            {
                this._actSetVal = value;
                this.OnPropertyChanged("actSetVal", value);
            }
        }
    }
    
    /// <summary>
    /// Set @associatedValue attribute of a ListItem with a
    /// supplied value. The correct data type must be used if
    /// applicable.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetAssociatedValue
    {
        get
        {
            return this._actSetAssociatedValue;
        }
        set
        {
            if ((this._actSetAssociatedValue == value))
            {
                return;
            }
            if (((this._actSetAssociatedValue == null) 
                        || (_actSetAssociatedValue.Equals(value) != true)))
            {
                this._actSetAssociatedValue = value;
                this.OnPropertyChanged("actSetAssociatedValue", value);
            }
        }
    }
    
    /// <summary>
    /// Set a @val attribute. The correct data type must be used
    /// if applicable. Supply the @name of an element that has a non-null @val
    /// value of the correct datatype. Null values are
    /// ignored.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetValFromRef
    {
        get
        {
            return this._actSetValFromRef;
        }
        set
        {
            if ((this._actSetValFromRef == value))
            {
                return;
            }
            if (((this._actSetValFromRef == null) 
                        || (_actSetValFromRef.Equals(value) != true)))
            {
                this._actSetValFromRef = value;
                this.OnPropertyChanged("actSetValFromRef", value);
            }
        }
    }
    
    /// <summary>
    /// Set @associatedValue attribute of a ListItem. The correct
    /// data type must be used if applicable. Supply the @name of an element
    /// that has a non-null @val value of the correct datatype. Null values are
    /// ignored.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string actSetAssociatedValueFromRef
    {
        get
        {
            return this._actSetAssociatedValueFromRef;
        }
        set
        {
            if ((this._actSetAssociatedValueFromRef == value))
            {
                return;
            }
            if (((this._actSetAssociatedValueFromRef == null) 
                        || (_actSetAssociatedValueFromRef.Equals(value) != true)))
            {
                this._actSetAssociatedValueFromRef = value;
                this.OnPropertyChanged("actSetAssociatedValueFromRef", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool targetNamesSpecified
    {
        get
        {
            return this._targetNamesSpecified;
        }
        set
        {
            this._targetNamesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actMinCardSpecified
    {
        get
        {
            return this._actMinCardSpecified;
        }
        set
        {
            this._actMinCardSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actMaxCardSpecified
    {
        get
        {
            return this._actMaxCardSpecified;
        }
        set
        {
            this._actMaxCardSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actTypeSpecified
    {
        get
        {
            return this._actTypeSpecified;
        }
        set
        {
            this._actTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actStyleClassSpecified
    {
        get
        {
            return this._actStyleClassSpecified;
        }
        set
        {
            this._actStyleClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetTitleTextSpecified
    {
        get
        {
            return this._actSetTitleTextSpecified;
        }
        set
        {
            this._actSetTitleTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetBase64HTMLSpecified
    {
        get
        {
            return this._actSetBase64HTMLSpecified;
        }
        set
        {
            this._actSetBase64HTMLSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetCodeSpecified
    {
        get
        {
            return this._actSetCodeSpecified;
        }
        set
        {
            this._actSetCodeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetCodeSystemSpecified
    {
        get
        {
            return this._actSetCodeSystemSpecified;
        }
        set
        {
            this._actSetCodeSystemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetValSpecified
    {
        get
        {
            return this._actSetValSpecified;
        }
        set
        {
            this._actSetValSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetAssociatedValueSpecified
    {
        get
        {
            return this._actSetAssociatedValueSpecified;
        }
        set
        {
            this._actSetAssociatedValueSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetValFromRefSpecified
    {
        get
        {
            return this._actSetValFromRefSpecified;
        }
        set
        {
            this._actSetValFromRefSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool actSetAssociatedValueFromRefSpecified
    {
        get
        {
            return this._actSetAssociatedValueFromRefSpecified;
        }
        set
        {
            this._actSetAssociatedValueFromRefSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether actVisible should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactVisible()
    {
        if (_shouldSerializeactVisible)
        {
            return true;
        }
        return (_actVisible != default(bool));
    }
    
    /// <summary>
    /// Test whether actEnable should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactEnable()
    {
        if (_shouldSerializeactEnable)
        {
            return true;
        }
        return (_actEnable != default(bool));
    }
    
    /// <summary>
    /// Test whether actActivate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactActivate()
    {
        if (_shouldSerializeactActivate)
        {
            return true;
        }
        return (_actActivate != default(bool));
    }
    
    /// <summary>
    /// Test whether actSelect should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSelect()
    {
        if (_shouldSerializeactSelect)
        {
            return true;
        }
        return (_actSelect != default(bool));
    }
    
    /// <summary>
    /// Test whether actDeleteResponse should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactDeleteResponse()
    {
        if (_shouldSerializeactDeleteResponse)
        {
            return true;
        }
        return (_actDeleteResponse != default(bool));
    }
    
    /// <summary>
    /// Test whether actReadOnly should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactReadOnly()
    {
        if (_shouldSerializeactReadOnly)
        {
            return true;
        }
        return (_actReadOnly != default(bool));
    }
    
    /// <summary>
    /// Test whether targetNames should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetNames()
    {
        return !string.IsNullOrEmpty(targetNames);
    }
    
    /// <summary>
    /// Test whether actMinCard should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactMinCard()
    {
        return !string.IsNullOrEmpty(actMinCard);
    }
    
    /// <summary>
    /// Test whether actMaxCard should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactMaxCard()
    {
        return !string.IsNullOrEmpty(actMaxCard);
    }
    
    /// <summary>
    /// Test whether actType should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactType()
    {
        return !string.IsNullOrEmpty(actType);
    }
    
    /// <summary>
    /// Test whether actStyleClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactStyleClass()
    {
        return !string.IsNullOrEmpty(actStyleClass);
    }
    
    /// <summary>
    /// Test whether actSetTitleText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetTitleText()
    {
        return !string.IsNullOrEmpty(actSetTitleText);
    }
    
    /// <summary>
    /// Test whether actSetCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetCode()
    {
        return !string.IsNullOrEmpty(actSetCode);
    }
    
    /// <summary>
    /// Test whether actSetCodeSystem should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetCodeSystem()
    {
        return !string.IsNullOrEmpty(actSetCodeSystem);
    }
    
    /// <summary>
    /// Test whether actSetVal should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetVal()
    {
        return !string.IsNullOrEmpty(actSetVal);
    }
    
    /// <summary>
    /// Test whether actSetAssociatedValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetAssociatedValue()
    {
        return !string.IsNullOrEmpty(actSetAssociatedValue);
    }
    
    /// <summary>
    /// Test whether actSetValFromRef should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetValFromRef()
    {
        return !string.IsNullOrEmpty(actSetValFromRef);
    }
    
    /// <summary>
    /// Test whether actSetAssociatedValueFromRef should be serialized
    /// </summary>
    public virtual bool ShouldSerializeactSetAssociatedValueFromRef()
    {
        return !string.IsNullOrEmpty(actSetAssociatedValueFromRef);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Show an external form to interact with the user.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActShowFormType : ExtensionBaseType
{
    
    #region Private fields
    private string _formID;
    
    private string _packageID;
    
    private string _displayState;
    
    private bool _formIDSpecified;
    
    private bool _packageIDSpecified;
    
    private bool _displayStateSpecified;
    #endregion
    
    /// <summary>
    /// This ID represents the form to be
    /// displayed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formID
    {
        get
        {
            return this._formID;
        }
        set
        {
            if ((this._formID == value))
            {
                return;
            }
            if (((this._formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                this._formID = value;
                this.OnPropertyChanged("formID", value);
            }
        }
    }
    
    /// <summary>
    /// This ID represents the Package that contains the form to
    /// be displayed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string packageID
    {
        get
        {
            return this._packageID;
        }
        set
        {
            if ((this._packageID == value))
            {
                return;
            }
            if (((this._packageID == null) 
                        || (_packageID.Equals(value) != true)))
            {
                this._packageID = value;
                this.OnPropertyChanged("packageID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string displayState
    {
        get
        {
            return this._displayState;
        }
        set
        {
            if ((this._displayState == value))
            {
                return;
            }
            if (((this._displayState == null) 
                        || (_displayState.Equals(value) != true)))
            {
                this._displayState = value;
                this.OnPropertyChanged("displayState", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool formIDSpecified
    {
        get
        {
            return this._formIDSpecified;
        }
        set
        {
            this._formIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool packageIDSpecified
    {
        get
        {
            return this._packageIDSpecified;
        }
        set
        {
            this._packageIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool displayStateSpecified
    {
        get
        {
            return this._displayStateSpecified;
        }
        set
        {
            this._displayStateSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
    
    /// <summary>
    /// Test whether packageID should be serialized
    /// </summary>
    public virtual bool ShouldSerializepackageID()
    {
        return !string.IsNullOrEmpty(packageID);
    }
    
    /// <summary>
    /// Test whether displayState should be serialized
    /// </summary>
    public virtual bool ShouldSerializedisplayState()
    {
        return !string.IsNullOrEmpty(displayState);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Display a message to the form user, triggered by activity within the
/// form.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActShowMessageType : ExtensionBaseType
{
    
    #region Private fields
    private List<RichTextType> _message;
    
    private string _alertLevel;
    
    private string _alertType;
    
    private string _messageType;
    
    private string _messageCode;
    
    private bool _messageSpecified;
    
    private bool _alertLevelSpecified;
    
    private bool _alertTypeSpecified;
    
    private bool _messageTypeSpecified;
    
    private bool _messageCodeSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Message", Order=0)]
    public virtual List<RichTextType> Message
    {
        get
        {
            return this._message;
        }
        set
        {
            if ((this._message == value))
            {
                return;
            }
            if (((this._message == null) 
                        || (_message.Equals(value) != true)))
            {
                this._message = value;
                this.OnPropertyChanged("Message", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string alertLevel
    {
        get
        {
            return this._alertLevel;
        }
        set
        {
            if ((this._alertLevel == value))
            {
                return;
            }
            if (((this._alertLevel == null) 
                        || (_alertLevel.Equals(value) != true)))
            {
                this._alertLevel = value;
                this.OnPropertyChanged("alertLevel", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string alertType
    {
        get
        {
            return this._alertType;
        }
        set
        {
            if ((this._alertType == value))
            {
                return;
            }
            if (((this._alertType == null) 
                        || (_alertType.Equals(value) != true)))
            {
                this._alertType = value;
                this.OnPropertyChanged("alertType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string messageType
    {
        get
        {
            return this._messageType;
        }
        set
        {
            if ((this._messageType == value))
            {
                return;
            }
            if (((this._messageType == null) 
                        || (_messageType.Equals(value) != true)))
            {
                this._messageType = value;
                this.OnPropertyChanged("messageType", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string messageCode
    {
        get
        {
            return this._messageCode;
        }
        set
        {
            if ((this._messageCode == value))
            {
                return;
            }
            if (((this._messageCode == null) 
                        || (_messageCode.Equals(value) != true)))
            {
                this._messageCode = value;
                this.OnPropertyChanged("messageCode", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool MessageSpecified
    {
        get
        {
            return this._messageSpecified;
        }
        set
        {
            this._messageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool alertLevelSpecified
    {
        get
        {
            return this._alertLevelSpecified;
        }
        set
        {
            this._alertLevelSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool alertTypeSpecified
    {
        get
        {
            return this._alertTypeSpecified;
        }
        set
        {
            this._alertTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool messageTypeSpecified
    {
        get
        {
            return this._messageTypeSpecified;
        }
        set
        {
            this._messageTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool messageCodeSpecified
    {
        get
        {
            return this._messageCodeSpecified;
        }
        set
        {
            this._messageCodeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Message should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMessage()
    {
        return Message != null && Message.Count > 0;
    }
    
    /// <summary>
    /// Test whether alertLevel should be serialized
    /// </summary>
    public virtual bool ShouldSerializealertLevel()
    {
        return !string.IsNullOrEmpty(alertLevel);
    }
    
    /// <summary>
    /// Test whether alertType should be serialized
    /// </summary>
    public virtual bool ShouldSerializealertType()
    {
        return !string.IsNullOrEmpty(alertType);
    }
    
    /// <summary>
    /// Test whether messageType should be serialized
    /// </summary>
    public virtual bool ShouldSerializemessageType()
    {
        return !string.IsNullOrEmpty(messageType);
    }
    
    /// <summary>
    /// Test whether messageCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializemessageCode()
    {
        return !string.IsNullOrEmpty(messageCode);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Show a stored report. The following parameters may be used: reportID:
/// indicator of a report definition in SDC format. packageID: retrieve report as a
/// package with ancillary information. reportInstanceGUID: retreive 1 or more report
/// versions by using a report instance GUID. This may be used in conjunctions with a
/// packageID. reportInstanceVersionGUID: retrieve a single version of a report
/// representing the state of a report when it was saved. This may be used in
/// conjunctions with a packageID.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActShowReportType : ExtensionBaseType
{
    
    #region Private fields
    private string _reportID;
    
    private string _packageID;
    
    private string _reportInstanceGuid;
    
    private string _reportInstanceVersonGuid;
    
    private string _displayState;
    
    private bool _reportIDSpecified;
    
    private bool _packageIDSpecified;
    
    private bool _reportInstanceGuidSpecified;
    
    private bool _reportInstanceVersonGuidSpecified;
    
    private bool _displayStateSpecified;
    #endregion
    
    /// <summary>
    /// This ID represents the report to be
    /// displayed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string reportID
    {
        get
        {
            return this._reportID;
        }
        set
        {
            if ((this._reportID == value))
            {
                return;
            }
            if (((this._reportID == null) 
                        || (_reportID.Equals(value) != true)))
            {
                this._reportID = value;
                this.OnPropertyChanged("reportID", value);
            }
        }
    }
    
    /// <summary>
    /// This ID represents the Package that contains the report to
    /// be displayed.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string packageID
    {
        get
        {
            return this._packageID;
        }
        set
        {
            if ((this._packageID == value))
            {
                return;
            }
            if (((this._packageID == null) 
                        || (_packageID.Equals(value) != true)))
            {
                this._packageID = value;
                this.OnPropertyChanged("packageID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string reportInstanceGuid
    {
        get
        {
            return this._reportInstanceGuid;
        }
        set
        {
            if ((this._reportInstanceGuid == value))
            {
                return;
            }
            if (((this._reportInstanceGuid == null) 
                        || (_reportInstanceGuid.Equals(value) != true)))
            {
                this._reportInstanceGuid = value;
                this.OnPropertyChanged("reportInstanceGuid", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string reportInstanceVersonGuid
    {
        get
        {
            return this._reportInstanceVersonGuid;
        }
        set
        {
            if ((this._reportInstanceVersonGuid == value))
            {
                return;
            }
            if (((this._reportInstanceVersonGuid == null) 
                        || (_reportInstanceVersonGuid.Equals(value) != true)))
            {
                this._reportInstanceVersonGuid = value;
                this.OnPropertyChanged("reportInstanceVersonGuid", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string displayState
    {
        get
        {
            return this._displayState;
        }
        set
        {
            if ((this._displayState == value))
            {
                return;
            }
            if (((this._displayState == null) 
                        || (_displayState.Equals(value) != true)))
            {
                this._displayState = value;
                this.OnPropertyChanged("displayState", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool reportIDSpecified
    {
        get
        {
            return this._reportIDSpecified;
        }
        set
        {
            this._reportIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool packageIDSpecified
    {
        get
        {
            return this._packageIDSpecified;
        }
        set
        {
            this._packageIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool reportInstanceGuidSpecified
    {
        get
        {
            return this._reportInstanceGuidSpecified;
        }
        set
        {
            this._reportInstanceGuidSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool reportInstanceVersonGuidSpecified
    {
        get
        {
            return this._reportInstanceVersonGuidSpecified;
        }
        set
        {
            this._reportInstanceVersonGuidSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool displayStateSpecified
    {
        get
        {
            return this._displayStateSpecified;
        }
        set
        {
            this._displayStateSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether reportID should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportID()
    {
        return !string.IsNullOrEmpty(reportID);
    }
    
    /// <summary>
    /// Test whether packageID should be serialized
    /// </summary>
    public virtual bool ShouldSerializepackageID()
    {
        return !string.IsNullOrEmpty(packageID);
    }
    
    /// <summary>
    /// Test whether reportInstanceGuid should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportInstanceGuid()
    {
        return !string.IsNullOrEmpty(reportInstanceGuid);
    }
    
    /// <summary>
    /// Test whether reportInstanceVersonGuid should be serialized
    /// </summary>
    public virtual bool ShouldSerializereportInstanceVersonGuid()
    {
        return !string.IsNullOrEmpty(reportInstanceVersonGuid);
    }
    
    /// <summary>
    /// Test whether displayState should be serialized
    /// </summary>
    public virtual bool ShouldSerializedisplayState()
    {
        return !string.IsNullOrEmpty(displayState);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Test the data in the form for proper data types, rule integrity, and
/// completeness of required questions.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ActValidateFormType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializevalidateCompleteness;
    
    private bool _shouldSerializevalidateRules;
    
    private bool _shouldSerializevalidateDataTypes;
    
    private CallFuncActionType _validationWebService;
    
    private bool _validateDataTypes;
    
    private bool _validateRules;
    
    private bool _validateCompleteness;
    
    private string _validationType;
    
    private bool _validationWebServiceSpecified;
    
    private bool _validateDataTypesSpecified;
    
    private bool _validateRulesSpecified;
    
    private bool _validateCompletenessSpecified;
    
    private bool _validationTypeSpecified;
    #endregion
    
    /// <summary>
    /// ActValidateFormType class constructor
    /// </summary>
    public ActValidateFormType()
    {
        this._validateDataTypes = false;
        this._validateRules = false;
        this._validateCompleteness = false;
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual CallFuncActionType ValidationWebService
    {
        get
        {
            return this._validationWebService;
        }
        set
        {
            if ((this._validationWebService == value))
            {
                return;
            }
            if (((this._validationWebService == null) 
                        || (_validationWebService.Equals(value) != true)))
            {
                this._validationWebService = value;
                this.OnPropertyChanged("ValidationWebService", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool validateDataTypes
    {
        get
        {
            return this._validateDataTypes;
        }
        set
        {
            if ((_validateDataTypes.Equals(value) != true))
            {
                this._validateDataTypes = value;
                this.OnPropertyChanged("validateDataTypes", value);
            }
            _shouldSerializevalidateDataTypes = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool validateRules
    {
        get
        {
            return this._validateRules;
        }
        set
        {
            if ((_validateRules.Equals(value) != true))
            {
                this._validateRules = value;
                this.OnPropertyChanged("validateRules", value);
            }
            _shouldSerializevalidateRules = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool validateCompleteness
    {
        get
        {
            return this._validateCompleteness;
        }
        set
        {
            if ((_validateCompleteness.Equals(value) != true))
            {
                this._validateCompleteness = value;
                this.OnPropertyChanged("validateCompleteness", value);
            }
            _shouldSerializevalidateCompleteness = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string validationType
    {
        get
        {
            return this._validationType;
        }
        set
        {
            if ((this._validationType == value))
            {
                return;
            }
            if (((this._validationType == null) 
                        || (_validationType.Equals(value) != true)))
            {
                this._validationType = value;
                this.OnPropertyChanged("validationType", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ValidationWebServiceSpecified
    {
        get
        {
            return this._validationWebServiceSpecified;
        }
        set
        {
            this._validationWebServiceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validateDataTypesSpecified
    {
        get
        {
            return this._validateDataTypesSpecified;
        }
        set
        {
            this._validateDataTypesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validateRulesSpecified
    {
        get
        {
            return this._validateRulesSpecified;
        }
        set
        {
            this._validateRulesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validateCompletenessSpecified
    {
        get
        {
            return this._validateCompletenessSpecified;
        }
        set
        {
            this._validateCompletenessSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool validationTypeSpecified
    {
        get
        {
            return this._validationTypeSpecified;
        }
        set
        {
            this._validationTypeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether validateDataTypes should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidateDataTypes()
    {
        if (_shouldSerializevalidateDataTypes)
        {
            return true;
        }
        return (_validateDataTypes != default(bool));
    }
    
    /// <summary>
    /// Test whether validateRules should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidateRules()
    {
        if (_shouldSerializevalidateRules)
        {
            return true;
        }
        return (_validateRules != default(bool));
    }
    
    /// <summary>
    /// Test whether validateCompleteness should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidateCompleteness()
    {
        if (_shouldSerializevalidateCompleteness)
        {
            return true;
        }
        return (_validateCompleteness != default(bool));
    }
    
    /// <summary>
    /// Test whether ValidationWebService should be serialized
    /// </summary>
    public virtual bool ShouldSerializeValidationWebService()
    {
        return (_validationWebService != null);
    }
    
    /// <summary>
    /// Test whether validationType should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidationType()
    {
        return !string.IsNullOrEmpty(validationType);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemsChoiceType1
{
    
    Action,
    
    AddCode,
    
    CallFunction,
    
    ConditionalGroupAction,
    
    Inject,
    
    PreviewReport,
    
    RunCode,
    
    Save,
    
    SelectMatchingListItems,
    
    SendMessage111,
    
    SendReport,
    
    SetAttributeValue,
    
    SetAttributeValueScript,
    
    SetBoolAttributeValueCode,
    
    ShowForm,
    
    ShowMessage,
    
    ShowReport,
    
    ShowURL,
    
    ValidateForm,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Rules are procedures that affect form behaviour. They are usually
/// triggered by changes to the form by a form user. They may also be triggered by other
/// rules or changes to form metadata (e.g., change to @visible). SDC decarative form
/// rules consist of several types: Assertions are "predicate" expressions that evaulate
/// to true or false, based upon the state of answers/responses or metadata within a
/// form. An asserion is equivalent to the "If" part of an If-Then block. The
/// implementation framework must assign a fucntion to handle any assertion that
/// evaluates to False. Assertions are no handled by the form itself. If-Then-Else
/// blocks run a "Then" action if the "If block evaluated to true, and an "Else" block
/// if the "If" block evaluates to false. An AutoSelection rule automatically selects an
/// answer choice (ListItem) when another answer (or set of answers) is selected or
/// unselected. IllegalSelectionTest evaluates to true if a disallowed set of answer
/// choices is selected at the same time. The implementation should take an action
/// (alert user, cancel inout, etc) when a true result occurs. IllegalSelection Set
/// restricts combinations of co-selected ListItems (answers). In other words, only zero
/// or one item in this list may be selected at a time.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RulesType : ExtensionBaseType
{
    
    #region Private fields
    private List<ExtensionBaseType> _items;
    
    private bool _itemsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("AutoActivation", typeof(RuleAutoActivateType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("AutoSelection", typeof(RuleAutoSelectType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ConditionalActions", typeof(PredActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ExternalRule", typeof(CallFuncActionType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ScriptedRule", typeof(ScriptCodeAnyType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectMatchingListItems", typeof(RuleSelectMatchingListItemsType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Validation", typeof(ValidationType), Order=0)]
    public virtual List<ExtensionBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule sets the activation status of Items based on the selection
/// status of other ListItems. This declarative rule determines (guards) when target
/// Items should be activated or deactivated. The rule may optionally
/// activate/deactivate multiple target items with a single rule. The target item(s) to
/// activate/deactivate are listed in targetNameList. In the simplest case, this rule
/// operates as follows: A list of ListItems is provided (selectedItemWatchList). If all
/// the items in the list are selected (or unselected - see below) as specified in the
/// selectedItemWatchList list, then the guard evaluates to true, and the targetNameList
/// items are activated/deactivated. In some cases, we may wish to watch unselected
/// items in the selectedItemWatchList. This is indicated by prefixing the name of the
/// watched item with a minus sign/dash ("-"). In some cases, we may wish to deactivate
/// items in the targetNameSelectList list when the selectedItemWatchList evaluated to
/// true. In this case, the target item is prefixed with a dash ("-").
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RuleAutoActivateType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializesetExpanded;
    
    private bool _shouldSerializesetEnabled;
    
    private bool _shouldSerializesetVisibility;
    
    private bool _shouldSerializeX_removeResponsesWhenDeactivated;
    
    private bool _shouldSerializeonlyIf;
    
    private string _selectedItemSet;
    
    private bool _onlyIf;
    
    private string _targetNameActivationList;
    
    private toggleType _setVisibility;
    
    private toggleType _setEnabled;
    
    private toggleType _setExpanded;
    
    private bool _x_removeResponsesWhenDeactivated;
    
    private bool _selectedItemSetSpecified;
    
    private bool _onlyIfSpecified;
    
    private bool _targetNameActivationListSpecified;
    
    private bool _setVisibilitySpecified;
    
    private bool _setEnabledSpecified;
    
    private bool _setExpandedSpecified;
    
    private bool _x_removeResponsesWhenDeactivatedSpecified;
    #endregion
    
    /// <summary>
    /// RuleAutoActivateType class constructor
    /// </summary>
    public RuleAutoActivateType()
    {
        this._onlyIf = false;
        this._setVisibility = toggleType.@true;
        this._setEnabled = toggleType.@true;
        this._setExpanded = toggleType.@true;
        this._x_removeResponsesWhenDeactivated = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string selectedItemSet
    {
        get
        {
            return this._selectedItemSet;
        }
        set
        {
            if ((this._selectedItemSet == value))
            {
                return;
            }
            if (((this._selectedItemSet == null) 
                        || (_selectedItemSet.Equals(value) != true)))
            {
                this._selectedItemSet = value;
                this.OnPropertyChanged("selectedItemSet", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool onlyIf
    {
        get
        {
            return this._onlyIf;
        }
        set
        {
            if ((_onlyIf.Equals(value) != true))
            {
                this._onlyIf = value;
                this.OnPropertyChanged("onlyIf", value);
            }
            _shouldSerializeonlyIf = true;
        }
    }
    
    /// <summary>
    /// This list contains the @names of Identified Items that
    /// will be automatically activated or deactivated when the @selectedItemSet
    /// evaluates to true. If a @name is prefixed with a hyphen (-), then the
    /// item will be deactivated when @selectedItemSet evaluates to true. If
    /// @not = true, then the Boolean rule evaluation is negated, and thus the
    /// rule works in reverse. If @onlyIf is true, then the above rule is
    /// reversed when @selectedItemSet evaluates to false. In other words, named
    /// items will be deactivated, and hyphen-prefixed items will be activated
    /// when @selectedItemSet is false.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string targetNameActivationList
    {
        get
        {
            return this._targetNameActivationList;
        }
        set
        {
            if ((this._targetNameActivationList == value))
            {
                return;
            }
            if (((this._targetNameActivationList == null) 
                        || (_targetNameActivationList.Equals(value) != true)))
            {
                this._targetNameActivationList = value;
                this.OnPropertyChanged("targetNameActivationList", value);
            }
        }
    }
    
    /// <summary>
    /// Make target items visible when activated and vice versa.
    /// Default = false. All descendants are affected in the same
    /// way.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(toggleType.@true)]
    public virtual toggleType setVisibility
    {
        get
        {
            return this._setVisibility;
        }
        set
        {
            if ((_setVisibility.Equals(value) != true))
            {
                this._setVisibility = value;
                this.OnPropertyChanged("setVisibility", value);
            }
            _shouldSerializesetVisibility = true;
        }
    }
    
    /// <summary>
    /// Make target items enabled when activated and vice versa.
    /// Default = true. All descendants are affected in the same
    /// way.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(toggleType.@true)]
    public virtual toggleType setEnabled
    {
        get
        {
            return this._setEnabled;
        }
        set
        {
            if ((_setEnabled.Equals(value) != true))
            {
                this._setEnabled = value;
                this.OnPropertyChanged("setEnabled", value);
            }
            _shouldSerializesetEnabled = true;
        }
    }
    
    /// <summary>
    /// Expand target items when activated and collapse item when
    /// deactivated. Default = false. All descendants are affected in the same
    /// way.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(toggleType.@true)]
    public virtual toggleType setExpanded
    {
        get
        {
            return this._setExpanded;
        }
        set
        {
            if ((_setExpanded.Equals(value) != true))
            {
                this._setExpanded = value;
                this.OnPropertyChanged("setExpanded", value);
            }
            _shouldSerializesetExpanded = true;
        }
    }
    
    /// <summary>
    /// Delete all user selections, responses and comments when
    /// the item is deactivated. Applies to all descendant items as well. User
    /// should be warned before deleting anything, with an option to preserve
    /// the responses in the disabled items. Disabled item responses should not
    /// be saved with the form data.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool X_removeResponsesWhenDeactivated
    {
        get
        {
            return this._x_removeResponsesWhenDeactivated;
        }
        set
        {
            if ((_x_removeResponsesWhenDeactivated.Equals(value) != true))
            {
                this._x_removeResponsesWhenDeactivated = value;
                this.OnPropertyChanged("X_removeResponsesWhenDeactivated", value);
            }
            _shouldSerializeX_removeResponsesWhenDeactivated = true;
        }
    }
    
    [XmlIgnore()]
    public bool selectedItemSetSpecified
    {
        get
        {
            return this._selectedItemSetSpecified;
        }
        set
        {
            this._selectedItemSetSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool onlyIfSpecified
    {
        get
        {
            return this._onlyIfSpecified;
        }
        set
        {
            this._onlyIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetNameActivationListSpecified
    {
        get
        {
            return this._targetNameActivationListSpecified;
        }
        set
        {
            this._targetNameActivationListSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool setVisibilitySpecified
    {
        get
        {
            return this._setVisibilitySpecified;
        }
        set
        {
            this._setVisibilitySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool setEnabledSpecified
    {
        get
        {
            return this._setEnabledSpecified;
        }
        set
        {
            this._setEnabledSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool setExpandedSpecified
    {
        get
        {
            return this._setExpandedSpecified;
        }
        set
        {
            this._setExpandedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_removeResponsesWhenDeactivatedSpecified
    {
        get
        {
            return this._x_removeResponsesWhenDeactivatedSpecified;
        }
        set
        {
            this._x_removeResponsesWhenDeactivatedSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether onlyIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeonlyIf()
    {
        if (_shouldSerializeonlyIf)
        {
            return true;
        }
        return (_onlyIf != default(bool));
    }
    
    /// <summary>
    /// Test whether X_removeResponsesWhenDeactivated should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_removeResponsesWhenDeactivated()
    {
        if (_shouldSerializeX_removeResponsesWhenDeactivated)
        {
            return true;
        }
        return (_x_removeResponsesWhenDeactivated != default(bool));
    }
    
    /// <summary>
    /// Test whether setVisibility should be serialized
    /// </summary>
    public virtual bool ShouldSerializesetVisibility()
    {
        if (_shouldSerializesetVisibility)
        {
            return true;
        }
        return (_setVisibility != default(toggleType));
    }
    
    /// <summary>
    /// Test whether setEnabled should be serialized
    /// </summary>
    public virtual bool ShouldSerializesetEnabled()
    {
        if (_shouldSerializesetEnabled)
        {
            return true;
        }
        return (_setEnabled != default(toggleType));
    }
    
    /// <summary>
    /// Test whether setExpanded should be serialized
    /// </summary>
    public virtual bool ShouldSerializesetExpanded()
    {
        if (_shouldSerializesetExpanded)
        {
            return true;
        }
        return (_setExpanded != default(toggleType));
    }
    
    /// <summary>
    /// Test whether selectedItemSet should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectedItemSet()
    {
        return !string.IsNullOrEmpty(selectedItemSet);
    }
    
    /// <summary>
    /// Test whether targetNameActivationList should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetNameActivationList()
    {
        return !string.IsNullOrEmpty(targetNameActivationList);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public enum toggleType
{
    
    @true,
    
    @false,
    
    toggle,
    
    ignore,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This Rule selects/unselects ListItems based on the selected status of
/// other ListItems. This declarative rule determines (guards) when target ListItems
/// should be selected or unselected. The guard rule may optionally select/unselect
/// multiple target ListItems with a single rule. The target ListItem(s) to
/// select/unselect are listed in targetNameSelectList. In the simplest case, this rule
/// operates as follows: A list of ListItems is provided (selectedItemWatchList). If all
/// the items in the list are selected (or unselected - see below) as specified in the
/// selectedItemWatchList list, then the guard evaluates to true, and the
/// targetNameSelectList items are selected. In some cases, we may wish to watch
/// unselected items in the selectedItemWatchList. This is indicated by prefixing the
/// name of the watched item with a minus sign/dash ("-"). In some cases, we may wish to
/// unselect items in the targetNameSelectList list when the selectedItemWatchList
/// evaluated to true. In this case, the target item is prefixed with a dash ("-").
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RuleAutoSelectType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeonlyIf;
    
    private string _selectedItemSet;
    
    private bool _onlyIf;
    
    private string _targetNameSelectList;
    
    private bool _selectedItemSetSpecified;
    
    private bool _onlyIfSpecified;
    
    private bool _targetNameSelectListSpecified;
    #endregion
    
    /// <summary>
    /// RuleAutoSelectType class constructor
    /// </summary>
    public RuleAutoSelectType()
    {
        this._onlyIf = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NMTOKENS")]
    public virtual string selectedItemSet
    {
        get
        {
            return this._selectedItemSet;
        }
        set
        {
            if ((this._selectedItemSet == value))
            {
                return;
            }
            if (((this._selectedItemSet == null) 
                        || (_selectedItemSet.Equals(value) != true)))
            {
                this._selectedItemSet = value;
                this.OnPropertyChanged("selectedItemSet", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool onlyIf
    {
        get
        {
            return this._onlyIf;
        }
        set
        {
            if ((_onlyIf.Equals(value) != true))
            {
                this._onlyIf = value;
                this.OnPropertyChanged("onlyIf", value);
            }
            _shouldSerializeonlyIf = true;
        }
    }
    
    /// <summary>
    /// This list contains the @names of ListItems that will be
    /// automatically selected or deselected when the @selectedItemSet evaluates
    /// to true. If a @name is prefixed with a hyphen (-), then the item will be
    /// deselected when @selectedItemSet evaluates to true. If @not = true, then
    /// the Boolean rule evaluation is negated, and thus the rule works in
    /// reverse. If @onlyIf is true, then the above rule is reversed when
    /// @selectedItemSet evaluates to false. In other words, named items will be
    /// deselected, and hyphen-prefixed items will be selected when
    /// @selectedItemSet is false.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string targetNameSelectList
    {
        get
        {
            return this._targetNameSelectList;
        }
        set
        {
            if ((this._targetNameSelectList == value))
            {
                return;
            }
            if (((this._targetNameSelectList == null) 
                        || (_targetNameSelectList.Equals(value) != true)))
            {
                this._targetNameSelectList = value;
                this.OnPropertyChanged("targetNameSelectList", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool selectedItemSetSpecified
    {
        get
        {
            return this._selectedItemSetSpecified;
        }
        set
        {
            this._selectedItemSetSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool onlyIfSpecified
    {
        get
        {
            return this._onlyIfSpecified;
        }
        set
        {
            this._onlyIfSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetNameSelectListSpecified
    {
        get
        {
            return this._targetNameSelectListSpecified;
        }
        set
        {
            this._targetNameSelectListSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether onlyIf should be serialized
    /// </summary>
    public virtual bool ShouldSerializeonlyIf()
    {
        if (_shouldSerializeonlyIf)
        {
            return true;
        }
        return (_onlyIf != default(bool));
    }
    
    /// <summary>
    /// Test whether selectedItemSet should be serialized
    /// </summary>
    public virtual bool ShouldSerializeselectedItemSet()
    {
        return !string.IsNullOrEmpty(selectedItemSet);
    }
    
    /// <summary>
    /// Test whether targetNameSelectList should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetNameSelectList()
    {
        return !string.IsNullOrEmpty(targetNameSelectList);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ValidationType : ExtensionBaseType
{
    
    #region Private fields
    private List<FuncBoolBaseType> _items;
    
    private bool _itemsSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ItemAlternatives", typeof(PredAlternativesType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionSets", typeof(ValidationTypeSelectionSets), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SelectionTest", typeof(ValidationTypeSelectionTest), Order=0)]
    public virtual List<FuncBoolBaseType> Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Items should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItems()
    {
        return Items != null && Items.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ValidationTypeSelectionSets : PredSingleSelectionSetsType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private bool _notSpecified;
    #endregion
    
    /// <summary>
    /// ValidationTypeSelectionSets class constructor
    /// </summary>
    public ValidationTypeSelectionSets()
    {
        this._not = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ValidationTypeSelectionTest : PredSelectionTestType
{
    
    #region Private fields
    private bool _shouldSerializenot;
    
    private bool _not;
    
    private bool _notSpecified;
    #endregion
    
    /// <summary>
    /// ValidationTypeSelectionTest class constructor
    /// </summary>
    public ValidationTypeSelectionTest()
    {
        this._not = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool not
    {
        get
        {
            return this._not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                this._not = value;
                this.OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return this._notSpecified;
        }
        set
        {
            this._notSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (_not != default(bool));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum FormDesignTypeApprovalStatus
{
    
    inProcess,
    
    preliminary,
    
    approved,
    
    cancelled,
    
    retracted,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum FormDesignTypeCompletionStatus
{
    
    pending,
    
    incomplete,
    
    complete,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type supports the mapping of the targeted template items to any other template items or code system.  The @type tokens include PrePop, AutoPop, SNOMED, LOINC, Keys, LocalValues, etc.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("Map", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class MappingType : ExtensionBaseType
{
    
    #region Private fields
    private CodeSystemType _defaultCodeSystem;
    
    private List<ItemMapType> _itemMap;
    
    private string _templateID;
    
    private string _targetTemplateID;
    
    private bool _defaultCodeSystemSpecified;
    
    private bool _itemMapSpecified;
    
    private bool _templateIDSpecified;
    
    private bool _targetTemplateIDSpecified;
    #endregion
    
    /// <summary>
    /// Specifies the default coding system to be implied for all MappedCode elements listed in thte ItemMap entries.  Any CodeSystem explicitly used in a MappedCode entry will override the default value.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual CodeSystemType DefaultCodeSystem
    {
        get
        {
            return this._defaultCodeSystem;
        }
        set
        {
            if ((this._defaultCodeSystem == value))
            {
                return;
            }
            if (((this._defaultCodeSystem == null) 
                        || (_defaultCodeSystem.Equals(value) != true)))
            {
                this._defaultCodeSystem = value;
                this.OnPropertyChanged("DefaultCodeSystem", value);
            }
        }
    }
    
    /// <summary>
    /// Entries under this element map a target item in a FormDesignTemplate to a terminology code, local value, XML-based document entry, database record, RDF store triple, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("ItemMap", Order=1)]
    public virtual List<ItemMapType> ItemMap
    {
        get
        {
            return this._itemMap;
        }
        set
        {
            if ((this._itemMap == value))
            {
                return;
            }
            if (((this._itemMap == null) 
                        || (_itemMap.Equals(value) != true)))
            {
                this._itemMap = value;
                this.OnPropertyChanged("ItemMap", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string templateID
    {
        get
        {
            return this._templateID;
        }
        set
        {
            if ((this._templateID == value))
            {
                return;
            }
            if (((this._templateID == null) 
                        || (_templateID.Equals(value) != true)))
            {
                this._templateID = value;
                this.OnPropertyChanged("templateID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string targetTemplateID
    {
        get
        {
            return this._targetTemplateID;
        }
        set
        {
            if ((this._targetTemplateID == value))
            {
                return;
            }
            if (((this._targetTemplateID == null) 
                        || (_targetTemplateID.Equals(value) != true)))
            {
                this._targetTemplateID = value;
                this.OnPropertyChanged("targetTemplateID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool DefaultCodeSystemSpecified
    {
        get
        {
            return this._defaultCodeSystemSpecified;
        }
        set
        {
            this._defaultCodeSystemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemMapSpecified
    {
        get
        {
            return this._itemMapSpecified;
        }
        set
        {
            this._itemMapSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool templateIDSpecified
    {
        get
        {
            return this._templateIDSpecified;
        }
        set
        {
            this._templateIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetTemplateIDSpecified
    {
        get
        {
            return this._targetTemplateIDSpecified;
        }
        set
        {
            this._targetTemplateIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ItemMap should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItemMap()
    {
        return ItemMap != null && ItemMap.Count > 0;
    }
    
    /// <summary>
    /// Test whether DefaultCodeSystem should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDefaultCodeSystem()
    {
        return (_defaultCodeSystem != null);
    }
    
    /// <summary>
    /// Test whether templateID should be serialized
    /// </summary>
    public virtual bool ShouldSerializetemplateID()
    {
        return !string.IsNullOrEmpty(templateID);
    }
    
    /// <summary>
    /// Test whether targetTemplateID should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetTemplateID()
    {
        return !string.IsNullOrEmpty(targetTemplateID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ItemMapType : ExtensionBaseType
{
    
    #region Private fields
    private TemplateTargetType _templateTarget;
    
    private DataSourceType _dataSource;
    
    private List<RichTextType> _mapComment;
    
    private bool _templateTargetSpecified;
    
    private bool _dataSourceSpecified;
    
    private bool _mapCommentSpecified;
    #endregion
    
    /// <summary>
    /// Target item in a FormDesignTemplate.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual TemplateTargetType TemplateTarget
    {
        get
        {
            return this._templateTarget;
        }
        set
        {
            if ((this._templateTarget == value))
            {
                return;
            }
            if (((this._templateTarget == null) 
                        || (_templateTarget.Equals(value) != true)))
            {
                this._templateTarget = value;
                this.OnPropertyChanged("TemplateTarget", value);
            }
        }
    }
    
    /// <summary>
    /// The DataSource is an object that maps to a target item in a FormDesignTemplate.  DataSources objects can include terminology codes, local values, XML-based document entries, database records, RDF store triples, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual DataSourceType DataSource
    {
        get
        {
            return this._dataSource;
        }
        set
        {
            if ((this._dataSource == value))
            {
                return;
            }
            if (((this._dataSource == null) 
                        || (_dataSource.Equals(value) != true)))
            {
                this._dataSource = value;
                this.OnPropertyChanged("DataSource", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("MapComment", Order=2)]
    public virtual List<RichTextType> MapComment
    {
        get
        {
            return this._mapComment;
        }
        set
        {
            if ((this._mapComment == value))
            {
                return;
            }
            if (((this._mapComment == null) 
                        || (_mapComment.Equals(value) != true)))
            {
                this._mapComment = value;
                this.OnPropertyChanged("MapComment", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool TemplateTargetSpecified
    {
        get
        {
            return this._templateTargetSpecified;
        }
        set
        {
            this._templateTargetSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DataSourceSpecified
    {
        get
        {
            return this._dataSourceSpecified;
        }
        set
        {
            this._dataSourceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool MapCommentSpecified
    {
        get
        {
            return this._mapCommentSpecified;
        }
        set
        {
            this._mapCommentSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether MapComment should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMapComment()
    {
        return MapComment != null && MapComment.Count > 0;
    }
    
    /// <summary>
    /// Test whether TemplateTarget should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTemplateTarget()
    {
        return (_templateTarget != null);
    }
    
    /// <summary>
    /// Test whether DataSource should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDataSource()
    {
        return (_dataSource != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateTargetType : ExtensionBaseType
{
    
    #region Private fields
    private anyURI_Stype _targetItemID;
    
    private RichTextType _targetDisplayText;
    
    private bool _targetItemIDSpecified;
    
    private bool _targetDisplayTextSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual anyURI_Stype TargetItemID
    {
        get
        {
            return this._targetItemID;
        }
        set
        {
            if ((this._targetItemID == value))
            {
                return;
            }
            if (((this._targetItemID == null) 
                        || (_targetItemID.Equals(value) != true)))
            {
                this._targetItemID = value;
                this.OnPropertyChanged("TargetItemID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RichTextType TargetDisplayText
    {
        get
        {
            return this._targetDisplayText;
        }
        set
        {
            if ((this._targetDisplayText == value))
            {
                return;
            }
            if (((this._targetDisplayText == null) 
                        || (_targetDisplayText.Equals(value) != true)))
            {
                this._targetDisplayText = value;
                this.OnPropertyChanged("TargetDisplayText", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool TargetItemIDSpecified
    {
        get
        {
            return this._targetItemIDSpecified;
        }
        set
        {
            this._targetItemIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TargetDisplayTextSpecified
    {
        get
        {
            return this._targetDisplayTextSpecified;
        }
        set
        {
            this._targetDisplayTextSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether TargetItemID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTargetItemID()
    {
        return (_targetItemID != null);
    }
    
    /// <summary>
    /// Test whether TargetDisplayText should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTargetDisplayText()
    {
        return (_targetDisplayText != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataSourceType : ExtensionBaseType
{
    
    #region Private fields
    private ExtensionBaseType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Database", typeof(DataSourceTypeDatabase), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("MappedCode", typeof(CodingType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("RDF_Store", typeof(DataSourceTypeRDF_Store), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("XML", typeof(DataSourceTypeXML), Order=0)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataSourceTypeDatabase : DataStoreType
{
    
    #region Private fields
    private SQL_Type _sQL;
    
    private bool _sQLSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual SQL_Type SQL
    {
        get
        {
            return this._sQL;
        }
        set
        {
            if ((this._sQL == value))
            {
                return;
            }
            if (((this._sQL == null) 
                        || (_sQL.Equals(value) != true)))
            {
                this._sQL = value;
                this.OnPropertyChanged("SQL", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool SQLSpecified
    {
        get
        {
            return this._sQLSpecified;
        }
        set
        {
            this._sQLSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether SQL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSQL()
    {
        return (_sQL != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataStoreType : ExtensionBaseType
{
    
    #region Private fields
    private DataStoreTypeSecurityInfo _securityInfo;
    
    private string_Stype _dataStoreLocation;
    
    private string_Stype _databaseSoftware;
    
    private string_Stype _databaseName;
    
    private string_Stype _connectiontonString;
    
    private string_Stype _otherConnectionParameters;
    
    private bool _securityInfoSpecified;
    
    private bool _dataStoreLocationSpecified;
    
    private bool _databaseSoftwareSpecified;
    
    private bool _databaseNameSpecified;
    
    private bool _connectiontonStringSpecified;
    
    private bool _otherConnectionParametersSpecified;
    #endregion
    
    /// <summary>
    /// Logon credentials should be provided only if the connection is trusted, secure, and encrypted.  Whenever possible, this information should not be communicated in this manner, and another security model should be adopted.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual DataStoreTypeSecurityInfo SecurityInfo
    {
        get
        {
            return this._securityInfo;
        }
        set
        {
            if ((this._securityInfo == value))
            {
                return;
            }
            if (((this._securityInfo == null) 
                        || (_securityInfo.Equals(value) != true)))
            {
                this._securityInfo = value;
                this.OnPropertyChanged("SecurityInfo", value);
            }
        }
    }
    
    /// <summary>
    /// The path to the database server.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype DataStoreLocation
    {
        get
        {
            return this._dataStoreLocation;
        }
        set
        {
            if ((this._dataStoreLocation == value))
            {
                return;
            }
            if (((this._dataStoreLocation == null) 
                        || (_dataStoreLocation.Equals(value) != true)))
            {
                this._dataStoreLocation = value;
                this.OnPropertyChanged("DataStoreLocation", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype DatabaseSoftware
    {
        get
        {
            return this._databaseSoftware;
        }
        set
        {
            if ((this._databaseSoftware == value))
            {
                return;
            }
            if (((this._databaseSoftware == null) 
                        || (_databaseSoftware.Equals(value) != true)))
            {
                this._databaseSoftware = value;
                this.OnPropertyChanged("DatabaseSoftware", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype DatabaseName
    {
        get
        {
            return this._databaseName;
        }
        set
        {
            if ((this._databaseName == value))
            {
                return;
            }
            if (((this._databaseName == null) 
                        || (_databaseName.Equals(value) != true)))
            {
                this._databaseName = value;
                this.OnPropertyChanged("DatabaseName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype ConnectiontonString
    {
        get
        {
            return this._connectiontonString;
        }
        set
        {
            if ((this._connectiontonString == value))
            {
                return;
            }
            if (((this._connectiontonString == null) 
                        || (_connectiontonString.Equals(value) != true)))
            {
                this._connectiontonString = value;
                this.OnPropertyChanged("ConnectiontonString", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual string_Stype OtherConnectionParameters
    {
        get
        {
            return this._otherConnectionParameters;
        }
        set
        {
            if ((this._otherConnectionParameters == value))
            {
                return;
            }
            if (((this._otherConnectionParameters == null) 
                        || (_otherConnectionParameters.Equals(value) != true)))
            {
                this._otherConnectionParameters = value;
                this.OnPropertyChanged("OtherConnectionParameters", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool SecurityInfoSpecified
    {
        get
        {
            return this._securityInfoSpecified;
        }
        set
        {
            this._securityInfoSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DataStoreLocationSpecified
    {
        get
        {
            return this._dataStoreLocationSpecified;
        }
        set
        {
            this._dataStoreLocationSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DatabaseSoftwareSpecified
    {
        get
        {
            return this._databaseSoftwareSpecified;
        }
        set
        {
            this._databaseSoftwareSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DatabaseNameSpecified
    {
        get
        {
            return this._databaseNameSpecified;
        }
        set
        {
            this._databaseNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ConnectiontonStringSpecified
    {
        get
        {
            return this._connectiontonStringSpecified;
        }
        set
        {
            this._connectiontonStringSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OtherConnectionParametersSpecified
    {
        get
        {
            return this._otherConnectionParametersSpecified;
        }
        set
        {
            this._otherConnectionParametersSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether SecurityInfo should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSecurityInfo()
    {
        return (_securityInfo != null);
    }
    
    /// <summary>
    /// Test whether DataStoreLocation should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDataStoreLocation()
    {
        return (_dataStoreLocation != null);
    }
    
    /// <summary>
    /// Test whether DatabaseSoftware should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDatabaseSoftware()
    {
        return (_databaseSoftware != null);
    }
    
    /// <summary>
    /// Test whether DatabaseName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDatabaseName()
    {
        return (_databaseName != null);
    }
    
    /// <summary>
    /// Test whether ConnectiontonString should be serialized
    /// </summary>
    public virtual bool ShouldSerializeConnectiontonString()
    {
        return (_connectiontonString != null);
    }
    
    /// <summary>
    /// Test whether OtherConnectionParameters should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOtherConnectionParameters()
    {
        return (_otherConnectionParameters != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataStoreTypeSecurityInfo : string_Stype
{
    
    #region Private fields
    private string _password;
    
    private string _userName;
    
    private bool _passwordSpecified;
    
    private bool _userNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string password
    {
        get
        {
            return this._password;
        }
        set
        {
            if ((this._password == value))
            {
                return;
            }
            if (((this._password == null) 
                        || (_password.Equals(value) != true)))
            {
                this._password = value;
                this.OnPropertyChanged("password", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string userName
    {
        get
        {
            return this._userName;
        }
        set
        {
            if ((this._userName == value))
            {
                return;
            }
            if (((this._userName == null) 
                        || (_userName.Equals(value) != true)))
            {
                this._userName = value;
                this.OnPropertyChanged("userName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool passwordSpecified
    {
        get
        {
            return this._passwordSpecified;
        }
        set
        {
            this._passwordSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool userNameSpecified
    {
        get
        {
            return this._userNameSpecified;
        }
        set
        {
            this._userNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether password should be serialized
    /// </summary>
    public virtual bool ShouldSerializepassword()
    {
        return !string.IsNullOrEmpty(password);
    }
    
    /// <summary>
    /// Test whether userName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeuserName()
    {
        return !string.IsNullOrEmpty(userName);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataSourceTypeRDF_Store : DataStoreType
{
    
    #region Private fields
    private DataSourceTypeRDF_StoreSPARQL _sPARQL;
    
    private bool _sPARQLSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual DataSourceTypeRDF_StoreSPARQL SPARQL
    {
        get
        {
            return this._sPARQL;
        }
        set
        {
            if ((this._sPARQL == value))
            {
                return;
            }
            if (((this._sPARQL == null) 
                        || (_sPARQL.Equals(value) != true)))
            {
                this._sPARQL = value;
                this.OnPropertyChanged("SPARQL", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool SPARQLSpecified
    {
        get
        {
            return this._sPARQLSpecified;
        }
        set
        {
            this._sPARQLSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether SPARQL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSPARQL()
    {
        return (_sPARQL != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataSourceTypeRDF_StoreSPARQL : EntityBase<DataSourceTypeRDF_StoreSPARQL>
{
    
    #region Private fields
    private string _version;
    
    private string _value;
    
    private bool _versionSpecified;
    
    private bool _valueSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlTextAttribute()]
    public virtual string Value
    {
        get
        {
            return this._value;
        }
        set
        {
            if ((this._value == value))
            {
                return;
            }
            if (((this._value == null) 
                        || (_value.Equals(value) != true)))
            {
                this._value = value;
                this.OnPropertyChanged("Value", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ValueSpecified
    {
        get
        {
            return this._valueSpecified;
        }
        set
        {
            this._valueSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether Value should be serialized
    /// </summary>
    public virtual bool ShouldSerializeValue()
    {
        return !string.IsNullOrEmpty(Value);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataSourceTypeXML : DataStoreType
{
    
    #region Private fields
    private string_Stype _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ItemID", typeof(string_Stype), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("SQL", typeof(SQL_Type), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("XPath", typeof(XPathType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("XQuery", typeof(XQueryType), Order=0)]
    public virtual string_Stype Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XMLPackageTypeReportDesignTemplate : FormDesignType
{
    
    #region Private fields
    private string _targetTemplateID;
    
    private bool _targetTemplateIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string targetTemplateID
    {
        get
        {
            return this._targetTemplateID;
        }
        set
        {
            if ((this._targetTemplateID == value))
            {
                return;
            }
            if (((this._targetTemplateID == null) 
                        || (_targetTemplateID.Equals(value) != true)))
            {
                this._targetTemplateID = value;
                this.OnPropertyChanged("targetTemplateID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool targetTemplateIDSpecified
    {
        get
        {
            return this._targetTemplateIDSpecified;
        }
        set
        {
            this._targetTemplateIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether targetTemplateID should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetTemplateID()
    {
        return !string.IsNullOrEmpty(targetTemplateID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class XMLPackageTypeHelperFile : ExtensionBaseType
{
    
    #region Private fields
    private string _templateID;
    
    private string _targetTemplateID;
    
    private bool _templateIDSpecified;
    
    private bool _targetTemplateIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string templateID
    {
        get
        {
            return this._templateID;
        }
        set
        {
            if ((this._templateID == value))
            {
                return;
            }
            if (((this._templateID == null) 
                        || (_templateID.Equals(value) != true)))
            {
                this._templateID = value;
                this.OnPropertyChanged("templateID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string targetTemplateID
    {
        get
        {
            return this._targetTemplateID;
        }
        set
        {
            if ((this._targetTemplateID == value))
            {
                return;
            }
            if (((this._targetTemplateID == null) 
                        || (_targetTemplateID.Equals(value) != true)))
            {
                this._targetTemplateID = value;
                this.OnPropertyChanged("targetTemplateID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool templateIDSpecified
    {
        get
        {
            return this._templateIDSpecified;
        }
        set
        {
            this._templateIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetTemplateIDSpecified
    {
        get
        {
            return this._targetTemplateIDSpecified;
        }
        set
        {
            this._targetTemplateIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether templateID should be serialized
    /// </summary>
    public virtual bool ShouldSerializetemplateID()
    {
        return !string.IsNullOrEmpty(templateID);
    }
    
    /// <summary>
    /// Test whether targetTemplateID should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetTemplateID()
    {
        return !string.IsNullOrEmpty(targetTemplateID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveFormPackageType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class BasePackageType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeX_completionStatus;
    
    private bool _shouldSerializeX_approvalStatus;
    
    private bool _shouldSerializenewData;
    
    private bool _shouldSerializechangedData;
    
    private bool _shouldSerializeinstanceVersionPrev;
    
    private bool _shouldSerializeinstanceVersion;
    
    private TemplateAdminType _admin;
    
    private string _packageID;
    
    private string _pkgTitle;
    
    private string _baseURI;
    
    private string _filename;
    
    private string _basedOnURI;
    
    private string _lineage;
    
    private string _version;
    
    private string _fullURI;
    
    private string _instanceID;
    
    private System.DateTime _instanceVersion;
    
    private bool instanceVersionFieldSpecified;
    
    private string _instanceVersionURI;
    
    private System.DateTime _instanceVersionPrev;
    
    private bool instanceVersionPrevFieldSpecified;
    
    private string _x_pkgPreviousInstanceVersionURI;
    
    private string _x_prevVersionURI;
    
    private string _x_pkgInstanceURI;
    
    private string _x_pkgInstanceVersionURI;
    
    private BasePackageTypeX_approvalStatus _x_approvalStatus;
    
    private bool x_approvalStatusFieldSpecified;
    
    private BasePackageTypeX_completionStatus _x_completionStatus;
    
    private bool x_completionStatusFieldSpecified;
    
    private bool _changedData;
    
    private bool changedDataFieldSpecified;
    
    private bool _newData;
    
    private bool newDataFieldSpecified;
    
    private bool _adminSpecified;
    
    private bool _packageIDSpecified;
    
    private bool _pkgTitleSpecified;
    
    private bool _baseURISpecified;
    
    private bool _filenameSpecified;
    
    private bool _basedOnURISpecified;
    
    private bool _lineageSpecified;
    
    private bool _versionSpecified;
    
    private bool _fullURISpecified;
    
    private bool _instanceIDSpecified;
    
    private bool _instanceVersionURISpecified;
    
    private bool _x_pkgPreviousInstanceVersionURISpecified;
    
    private bool _x_prevVersionURISpecified;
    
    private bool _x_pkgInstanceURISpecified;
    
    private bool _x_pkgInstanceVersionURISpecified;
    #endregion
    
    /// <summary>
    /// Admin contains information about a package, including a description of the package contents and purpose (PackageDescription), information about the registry that contains the package file (RegistryData), and information about the package file characteristics (TemplateFile).
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual TemplateAdminType Admin
    {
        get
        {
            return this._admin;
        }
        set
        {
            if ((this._admin == value))
            {
                return;
            }
            if (((this._admin == null) 
                        || (_admin.Equals(value) != true)))
            {
                this._admin = value;
                this.OnPropertyChanged("Admin", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string packageID
    {
        get
        {
            return this._packageID;
        }
        set
        {
            if ((this._packageID == value))
            {
                return;
            }
            if (((this._packageID == null) 
                        || (_packageID.Equals(value) != true)))
            {
                this._packageID = value;
                this.OnPropertyChanged("packageID", value);
            }
        }
    }
    
    /// <summary>
    /// NEW Feb 2019
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string pkgTitle
    {
        get
        {
            return this._pkgTitle;
        }
        set
        {
            if ((this._pkgTitle == value))
            {
                return;
            }
            if (((this._pkgTitle == null) 
                        || (_pkgTitle.Equals(value) != true)))
            {
                this._pkgTitle = value;
                this.OnPropertyChanged("pkgTitle", value);
            }
        }
    }
    
    /// <summary>
    /// @baseURI is required in the SDCPackage element but is optional elsewhere.  It identifies the organization that is responsible for designing and maintaining the Package contents.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string baseURI
    {
        get
        {
            return this._baseURI;
        }
        set
        {
            if ((this._baseURI == value))
            {
                return;
            }
            if (((this._baseURI == null) 
                        || (_baseURI.Equals(value) != true)))
            {
                this._baseURI = value;
                this.OnPropertyChanged("baseURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: filename to use when the current package instance is saved as a file.
    /// For package containing responses, the filename may include the pkgInstanceVersionURI,
    /// but the naming convention may be use-case-specific.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string filename
    {
        get
        {
            return this._filename;
        }
        set
        {
            if ((this._filename == value))
            {
                return;
            }
            if (((this._filename == null) 
                        || (_filename.Equals(value) != true)))
            {
                this._filename = value;
                this.OnPropertyChanged("filename", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: URI used to identify the package that that this package is based upon.  In most cases, this should be a standard package that is modified and/or extended by the current package.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string basedOnURI
    {
        get
        {
            return this._basedOnURI;
        }
        set
        {
            if ((this._basedOnURI == value))
            {
                return;
            }
            if (((this._basedOnURI == null) 
                        || (_basedOnURI.Equals(value) != true)))
            {
                this._basedOnURI = value;
                this.OnPropertyChanged("basedOnURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: A text identifier that is used to group multiple versions of a single package.  The lineage is constant for all versions of a single kind of package.
    /// 
    /// When appended to @baseURI, it can be used to retrieve all versions of one particular package.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string lineage
    {
        get
        {
            return this._lineage;
        }
        set
        {
            if ((this._lineage == value))
            {
                return;
            }
            if (((this._lineage == null) 
                        || (_lineage.Equals(value) != true)))
            {
                this._lineage = value;
                this.OnPropertyChanged("lineage", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: @version contains the version text for the current package.  It is designed to be used in conjunction with @baseURI and @lineage.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("version", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: The full URI that uniquely identifies the current package.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string fullURI
    {
        get
        {
            return this._fullURI;
        }
        set
        {
            if ((this._fullURI == value))
            {
                return;
            }
            if (((this._fullURI == null) 
                        || (_fullURI.Equals(value) != true)))
            {
                this._fullURI = value;
                this.OnPropertyChanged("fullURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique string used to identify a unique instance of a form. Used for tracking form responses across time and across multiple episodes of editing by end-users.  This string does not change for each edit session of a package instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string instanceID
    {
        get
        {
            return this._instanceID;
        }
        set
        {
            if ((this._instanceID == value))
            {
                return;
            }
            if (((this._instanceID == null) 
                        || (_instanceID.Equals(value) != true)))
            {
                this._instanceID = value;
                this.OnPropertyChanged("instanceID", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Timestamp used to identify a unique instance of a package.  Used for tracking form responses across time and across multiple episodes of editing by end-users.  This field must change for each edit session of a form instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime instanceVersion
    {
        get
        {
            return this._instanceVersion;
        }
        set
        {
            if ((_instanceVersion.Equals(value) != true))
            {
                this._instanceVersion = value;
                this.OnPropertyChanged("instanceVersion", value);
            }
            _shouldSerializeinstanceVersion = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool instanceVersionSpecified
    {
        get
        {
            return this.instanceVersionFieldSpecified;
        }
        set
        {
            if ((instanceVersionFieldSpecified.Equals(value) != true))
            {
                this.instanceVersionFieldSpecified = value;
                this.OnPropertyChanged("instanceVersionSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Globally-unique URI used to identify a unique instance of a Pkg with saved FDF-R responses.  It is used for tracking Pkg responses across time and across multiple episodes of editing by end-users.  The instanceVersionURI must change for each edit/save session of a Pkg instance (defined by instanceVersion).
    /// 
    /// The instanceVersionURI should be formatted similarly to the fullURI but must include values for instanceID and instanceVersion.  The instanceVersion value is the release date/time for the new version, in W3C datetime format.
    /// 
    /// An example instanceVersionURI is:
    /// instanceVersionURI="_baseURI=cap.org&_lineage=Lung.Bmk.227&_version=1.001.011.RC1 &_instanceID=Abc1dee2fg987&_instanceVersion=2019-07-16T19:20:30+01:00&_docType=sdcFDFR "
    /// 
    /// It is possible to create a shorter URI without the _baseURI, _lineage and _version parameters, as long as the URI is able to globally and uniquely identify and retrieve the instance and version of the Pkg that was transmitted:
    /// instanceVersionURI="_instanceID=Abc1dee2fg987&_instanceVersion=2019-07-16T19:20:30+01:00&_docType=sdcFDFR"
    /// 
    /// Note that the FR webservice endpoint URI is not provided in the instanceVersionURI.  The FR endpoint and its security settings may be found in the SDC Package that contains the FDF-R, at SDCPackage/SubmissionRule.  An FR may also be provided in a custom FDF Property if desired.
    /// 
    /// The docType for instanceVersionURI is sdcFDFR for a single FDF-R transaction.  The docType for for a Pkg with multiple FDF-R and/or other content is sdcPkg.  The specific order of components shown in the URI examples is not required, but the component order shown above is suggested for consistency and readability.
    /// 
    /// The instanceVersionURI is not required, and is not allowed in an FDF.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string instanceVersionURI
    {
        get
        {
            return this._instanceVersionURI;
        }
        set
        {
            if ((this._instanceVersionURI == value))
            {
                return;
            }
            if (((this._instanceVersionURI == null) 
                        || (_instanceVersionURI.Equals(value) != true)))
            {
                this._instanceVersionURI = value;
                this.OnPropertyChanged("instanceVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique dateTime used to identify the immediate previous instance of a package.  Used for tracking form responses across time and across multiple episodes of editing by end-users.  This field must change for each edit session of a form instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual System.DateTime instanceVersionPrev
    {
        get
        {
            return this._instanceVersionPrev;
        }
        set
        {
            if ((_instanceVersionPrev.Equals(value) != true))
            {
                this._instanceVersionPrev = value;
                this.OnPropertyChanged("instanceVersionPrev", value);
            }
            _shouldSerializeinstanceVersionPrev = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool instanceVersionPrevSpecified
    {
        get
        {
            return this.instanceVersionPrevFieldSpecified;
        }
        set
        {
            if ((instanceVersionPrevFieldSpecified.Equals(value) != true))
            {
                this.instanceVersionPrevFieldSpecified = value;
                this.OnPropertyChanged("instanceVersionPrevSpecified", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify the immediate previous instance of a package containing responses.  This is the @pkgnstanceVersionURI that represents the instance of the package that the user opened up before beginning a new cycle of edit/save.  This attribute is used for tracking package responses across time and across multiple episodes of editing by end-users.  This URI must change for each edit session of a package instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgPreviousInstanceVersionURI
    {
        get
        {
            return this._x_pkgPreviousInstanceVersionURI;
        }
        set
        {
            if ((this._x_pkgPreviousInstanceVersionURI == value))
            {
                return;
            }
            if (((this._x_pkgPreviousInstanceVersionURI == null) 
                        || (_x_pkgPreviousInstanceVersionURI.Equals(value) != true)))
            {
                this._x_pkgPreviousInstanceVersionURI = value;
                this.OnPropertyChanged("X_pkgPreviousInstanceVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: The full URI used to identify the package that is the immediate previous version of the current package
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_prevVersionURI
    {
        get
        {
            return this._x_prevVersionURI;
        }
        set
        {
            if ((this._x_prevVersionURI == value))
            {
                return;
            }
            if (((this._x_prevVersionURI == null) 
                        || (_x_prevVersionURI.Equals(value) != true)))
            {
                this._x_prevVersionURI = value;
                this.OnPropertyChanged("X_prevVersionURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a package.  Used for tracking form responses across time and across multiple episodes of editing by end-users.  This URI does not change for each edit session of a package instance.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgInstanceURI
    {
        get
        {
            return this._x_pkgInstanceURI;
        }
        set
        {
            if ((this._x_pkgInstanceURI == value))
            {
                return;
            }
            if (((this._x_pkgInstanceURI == null) 
                        || (_x_pkgInstanceURI.Equals(value) != true)))
            {
                this._x_pkgInstanceURI = value;
                this.OnPropertyChanged("X_pkgInstanceURI", value);
            }
        }
    }
    
    /// <summary>
    /// NEW: Unique URI used to identify a unique instance of a package's saved responses.  It is used for tracking package responses across time and across multiple episodes of editing by end-users.  This URI must change for each edit/save session of a package instance.  It may be e.g., a new GUID, or a repeat of the pkgInstanceID followed by a version number.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string X_pkgInstanceVersionURI
    {
        get
        {
            return this._x_pkgInstanceVersionURI;
        }
        set
        {
            if ((this._x_pkgInstanceVersionURI == value))
            {
                return;
            }
            if (((this._x_pkgInstanceVersionURI == null) 
                        || (_x_pkgInstanceVersionURI.Equals(value) != true)))
            {
                this._x_pkgInstanceVersionURI = value;
                this.OnPropertyChanged("X_pkgInstanceVersionURI", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual BasePackageTypeX_approvalStatus X_approvalStatus
    {
        get
        {
            return this._x_approvalStatus;
        }
        set
        {
            if ((_x_approvalStatus.Equals(value) != true))
            {
                this._x_approvalStatus = value;
                this.OnPropertyChanged("X_approvalStatus", value);
            }
            _shouldSerializeX_approvalStatus = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool X_approvalStatusSpecified
    {
        get
        {
            return this.x_approvalStatusFieldSpecified;
        }
        set
        {
            if ((x_approvalStatusFieldSpecified.Equals(value) != true))
            {
                this.x_approvalStatusFieldSpecified = value;
                this.OnPropertyChanged("X_approvalStatusSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual BasePackageTypeX_completionStatus X_completionStatus
    {
        get
        {
            return this._x_completionStatus;
        }
        set
        {
            if ((_x_completionStatus.Equals(value) != true))
            {
                this._x_completionStatus = value;
                this.OnPropertyChanged("X_completionStatus", value);
            }
            _shouldSerializeX_completionStatus = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool X_completionStatusSpecified
    {
        get
        {
            return this.x_completionStatusFieldSpecified;
        }
        set
        {
            if ((x_completionStatusFieldSpecified.Equals(value) != true))
            {
                this.x_completionStatusFieldSpecified = value;
                this.OnPropertyChanged("X_completionStatusSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool changedData
    {
        get
        {
            return this._changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                this._changedData = value;
                this.OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool changedDataSpecified
    {
        get
        {
            return this.changedDataFieldSpecified;
        }
        set
        {
            if ((changedDataFieldSpecified.Equals(value) != true))
            {
                this.changedDataFieldSpecified = value;
                this.OnPropertyChanged("changedDataSpecified", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual bool newData
    {
        get
        {
            return this._newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                this._newData = value;
                this.OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual bool newDataSpecified
    {
        get
        {
            return this.newDataFieldSpecified;
        }
        set
        {
            if ((newDataFieldSpecified.Equals(value) != true))
            {
                this.newDataFieldSpecified = value;
                this.OnPropertyChanged("newDataSpecified", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AdminSpecified
    {
        get
        {
            return this._adminSpecified;
        }
        set
        {
            this._adminSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool packageIDSpecified
    {
        get
        {
            return this._packageIDSpecified;
        }
        set
        {
            this._packageIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool pkgTitleSpecified
    {
        get
        {
            return this._pkgTitleSpecified;
        }
        set
        {
            this._pkgTitleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool baseURISpecified
    {
        get
        {
            return this._baseURISpecified;
        }
        set
        {
            this._baseURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool filenameSpecified
    {
        get
        {
            return this._filenameSpecified;
        }
        set
        {
            this._filenameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool basedOnURISpecified
    {
        get
        {
            return this._basedOnURISpecified;
        }
        set
        {
            this._basedOnURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool lineageSpecified
    {
        get
        {
            return this._lineageSpecified;
        }
        set
        {
            this._lineageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fullURISpecified
    {
        get
        {
            return this._fullURISpecified;
        }
        set
        {
            this._fullURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceIDSpecified
    {
        get
        {
            return this._instanceIDSpecified;
        }
        set
        {
            this._instanceIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool instanceVersionURISpecified
    {
        get
        {
            return this._instanceVersionURISpecified;
        }
        set
        {
            this._instanceVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgPreviousInstanceVersionURISpecified
    {
        get
        {
            return this._x_pkgPreviousInstanceVersionURISpecified;
        }
        set
        {
            this._x_pkgPreviousInstanceVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_prevVersionURISpecified
    {
        get
        {
            return this._x_prevVersionURISpecified;
        }
        set
        {
            this._x_prevVersionURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgInstanceURISpecified
    {
        get
        {
            return this._x_pkgInstanceURISpecified;
        }
        set
        {
            this._x_pkgInstanceURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_pkgInstanceVersionURISpecified
    {
        get
        {
            return this._x_pkgInstanceVersionURISpecified;
        }
        set
        {
            this._x_pkgInstanceVersionURISpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether instanceVersion should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersion()
    {
        if (_shouldSerializeinstanceVersion)
        {
            return true;
        }
        return (_instanceVersion != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether instanceVersionPrev should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersionPrev()
    {
        if (_shouldSerializeinstanceVersionPrev)
        {
            return true;
        }
        return (_instanceVersionPrev != default(System.DateTime));
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
    
    /// <summary>
    /// Test whether X_approvalStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_approvalStatus()
    {
        if (_shouldSerializeX_approvalStatus)
        {
            return true;
        }
        return (_x_approvalStatus != default(BasePackageTypeX_approvalStatus));
    }
    
    /// <summary>
    /// Test whether X_completionStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_completionStatus()
    {
        if (_shouldSerializeX_completionStatus)
        {
            return true;
        }
        return (_x_completionStatus != default(BasePackageTypeX_completionStatus));
    }
    
    /// <summary>
    /// Test whether Admin should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAdmin()
    {
        return (_admin != null);
    }
    
    /// <summary>
    /// Test whether packageID should be serialized
    /// </summary>
    public virtual bool ShouldSerializepackageID()
    {
        return !string.IsNullOrEmpty(packageID);
    }
    
    /// <summary>
    /// Test whether pkgTitle should be serialized
    /// </summary>
    public virtual bool ShouldSerializepkgTitle()
    {
        return !string.IsNullOrEmpty(pkgTitle);
    }
    
    /// <summary>
    /// Test whether baseURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebaseURI()
    {
        return !string.IsNullOrEmpty(baseURI);
    }
    
    /// <summary>
    /// Test whether filename should be serialized
    /// </summary>
    public virtual bool ShouldSerializefilename()
    {
        return !string.IsNullOrEmpty(filename);
    }
    
    /// <summary>
    /// Test whether basedOnURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializebasedOnURI()
    {
        return !string.IsNullOrEmpty(basedOnURI);
    }
    
    /// <summary>
    /// Test whether lineage should be serialized
    /// </summary>
    public virtual bool ShouldSerializelineage()
    {
        return !string.IsNullOrEmpty(lineage);
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether fullURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializefullURI()
    {
        return !string.IsNullOrEmpty(fullURI);
    }
    
    /// <summary>
    /// Test whether instanceID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceID()
    {
        return !string.IsNullOrEmpty(instanceID);
    }
    
    /// <summary>
    /// Test whether instanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceVersionURI()
    {
        return !string.IsNullOrEmpty(instanceVersionURI);
    }
    
    /// <summary>
    /// Test whether X_pkgPreviousInstanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgPreviousInstanceVersionURI()
    {
        return !string.IsNullOrEmpty(X_pkgPreviousInstanceVersionURI);
    }
    
    /// <summary>
    /// Test whether X_prevVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_prevVersionURI()
    {
        return !string.IsNullOrEmpty(X_prevVersionURI);
    }
    
    /// <summary>
    /// Test whether X_pkgInstanceURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgInstanceURI()
    {
        return !string.IsNullOrEmpty(X_pkgInstanceURI);
    }
    
    /// <summary>
    /// Test whether X_pkgInstanceVersionURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_pkgInstanceVersionURI()
    {
        return !string.IsNullOrEmpty(X_pkgInstanceVersionURI);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum BasePackageTypeX_approvalStatus
{
    
    inProcess,
    
    preliminary,
    
    approved,
    
    retracted,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public enum BasePackageTypeX_completionStatus
{
    
    pending,
    
    incomplete,
    
    complete,
    
    cancelled,
    
    retracted,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute("SDCPackage", Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class RetrieveFormPackageType : BasePackageType
{
    
    #region Private fields
    private List<SubmissionRuleType> _submissionRule;
    
    private List<ComplianceRuleType> _complianceRule;
    
    private ExtensionBaseType _item;
    
    private List<RetrieveFormPackageType> _sDCPackage;
    
    private bool _submissionRuleSpecified;
    
    private bool _complianceRuleSpecified;
    
    private bool _itemSpecified;
    
    private bool _sDCPackageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("SubmissionRule", Order=0)]
    public virtual List<SubmissionRuleType> SubmissionRule
    {
        get
        {
            return this._submissionRule;
        }
        set
        {
            if ((this._submissionRule == value))
            {
                return;
            }
            if (((this._submissionRule == null) 
                        || (_submissionRule.Equals(value) != true)))
            {
                this._submissionRule = value;
                this.OnPropertyChanged("SubmissionRule", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ComplianceRule", Order=1)]
    public virtual List<ComplianceRuleType> ComplianceRule
    {
        get
        {
            return this._complianceRule;
        }
        set
        {
            if ((this._complianceRule == value))
            {
                return;
            }
            if (((this._complianceRule == null) 
                        || (_complianceRule.Equals(value) != true)))
            {
                this._complianceRule = value;
                this.OnPropertyChanged("ComplianceRule", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("FormURL", typeof(LinkType), Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("HTMLPackage", typeof(HTMLPackageType), Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("XMLPackage", typeof(XMLPackageType), Order=2)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("SDCPackage", Order=3)]
    public virtual List<RetrieveFormPackageType> SDCPackage
    {
        get
        {
            return this._sDCPackage;
        }
        set
        {
            if ((this._sDCPackage == value))
            {
                return;
            }
            if (((this._sDCPackage == null) 
                        || (_sDCPackage.Equals(value) != true)))
            {
                this._sDCPackage = value;
                this.OnPropertyChanged("SDCPackage", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool SubmissionRuleSpecified
    {
        get
        {
            return this._submissionRuleSpecified;
        }
        set
        {
            this._submissionRuleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ComplianceRuleSpecified
    {
        get
        {
            return this._complianceRuleSpecified;
        }
        set
        {
            this._complianceRuleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SDCPackageSpecified
    {
        get
        {
            return this._sDCPackageSpecified;
        }
        set
        {
            this._sDCPackageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether SubmissionRule should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSubmissionRule()
    {
        return SubmissionRule != null && SubmissionRule.Count > 0;
    }
    
    /// <summary>
    /// Test whether ComplianceRule should be serialized
    /// </summary>
    public virtual bool ShouldSerializeComplianceRule()
    {
        return ComplianceRule != null && ComplianceRule.Count > 0;
    }
    
    /// <summary>
    /// Test whether SDCPackage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSDCPackage()
    {
        return SDCPackage != null && SDCPackage.Count > 0;
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// information about where to submit a completed form
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class SubmissionRuleType : ExtensionBaseType
{
    
    #region Private fields
    private List<DestinationType> _destination;
    
    private string_Stype _ruleDescription;
    
    private string _formID;
    
    private string _ruleID;
    
    private bool _destinationSpecified;
    
    private bool _ruleDescriptionSpecified;
    
    private bool _formIDSpecified;
    
    private bool _ruleIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Destination", Order=0)]
    public virtual List<DestinationType> Destination
    {
        get
        {
            return this._destination;
        }
        set
        {
            if ((this._destination == value))
            {
                return;
            }
            if (((this._destination == null) 
                        || (_destination.Equals(value) != true)))
            {
                this._destination = value;
                this.OnPropertyChanged("Destination", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype RuleDescription
    {
        get
        {
            return this._ruleDescription;
        }
        set
        {
            if ((this._ruleDescription == value))
            {
                return;
            }
            if (((this._ruleDescription == null) 
                        || (_ruleDescription.Equals(value) != true)))
            {
                this._ruleDescription = value;
                this.OnPropertyChanged("RuleDescription", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formID
    {
        get
        {
            return this._formID;
        }
        set
        {
            if ((this._formID == value))
            {
                return;
            }
            if (((this._formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                this._formID = value;
                this.OnPropertyChanged("formID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string ruleID
    {
        get
        {
            return this._ruleID;
        }
        set
        {
            if ((this._ruleID == value))
            {
                return;
            }
            if (((this._ruleID == null) 
                        || (_ruleID.Equals(value) != true)))
            {
                this._ruleID = value;
                this.OnPropertyChanged("ruleID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool DestinationSpecified
    {
        get
        {
            return this._destinationSpecified;
        }
        set
        {
            this._destinationSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RuleDescriptionSpecified
    {
        get
        {
            return this._ruleDescriptionSpecified;
        }
        set
        {
            this._ruleDescriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formIDSpecified
    {
        get
        {
            return this._formIDSpecified;
        }
        set
        {
            this._formIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ruleIDSpecified
    {
        get
        {
            return this._ruleIDSpecified;
        }
        set
        {
            this._ruleIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Destination should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDestination()
    {
        return Destination != null && Destination.Count > 0;
    }
    
    /// <summary>
    /// Test whether RuleDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRuleDescription()
    {
        return (_ruleDescription != null);
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
    
    /// <summary>
    /// Test whether ruleID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeruleID()
    {
        return !string.IsNullOrEmpty(ruleID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// ***Changed from BaseType to ExtensionBaseType
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DestinationType : ExtensionBaseType
{
    
    #region Private fields
    private anyURI_Stype _endpoint;
    
    private string_Stype _endpointDescription;
    
    private List<string_Stype> _submissionTechnology;
    
    private OrganizationType _organization;
    
    private bool _endpointSpecified;
    
    private bool _endpointDescriptionSpecified;
    
    private bool _submissionTechnologySpecified;
    
    private bool _organizationSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual anyURI_Stype Endpoint
    {
        get
        {
            return this._endpoint;
        }
        set
        {
            if ((this._endpoint == value))
            {
                return;
            }
            if (((this._endpoint == null) 
                        || (_endpoint.Equals(value) != true)))
            {
                this._endpoint = value;
                this.OnPropertyChanged("Endpoint", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype EndpointDescription
    {
        get
        {
            return this._endpointDescription;
        }
        set
        {
            if ((this._endpointDescription == value))
            {
                return;
            }
            if (((this._endpointDescription == null) 
                        || (_endpointDescription.Equals(value) != true)))
            {
                this._endpointDescription = value;
                this.OnPropertyChanged("EndpointDescription", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("SubmissionTechnology", Order=2)]
    public virtual List<string_Stype> SubmissionTechnology
    {
        get
        {
            return this._submissionTechnology;
        }
        set
        {
            if ((this._submissionTechnology == value))
            {
                return;
            }
            if (((this._submissionTechnology == null) 
                        || (_submissionTechnology.Equals(value) != true)))
            {
                this._submissionTechnology = value;
                this.OnPropertyChanged("SubmissionTechnology", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual OrganizationType Organization
    {
        get
        {
            return this._organization;
        }
        set
        {
            if ((this._organization == value))
            {
                return;
            }
            if (((this._organization == null) 
                        || (_organization.Equals(value) != true)))
            {
                this._organization = value;
                this.OnPropertyChanged("Organization", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool EndpointSpecified
    {
        get
        {
            return this._endpointSpecified;
        }
        set
        {
            this._endpointSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EndpointDescriptionSpecified
    {
        get
        {
            return this._endpointDescriptionSpecified;
        }
        set
        {
            this._endpointDescriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SubmissionTechnologySpecified
    {
        get
        {
            return this._submissionTechnologySpecified;
        }
        set
        {
            this._submissionTechnologySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OrganizationSpecified
    {
        get
        {
            return this._organizationSpecified;
        }
        set
        {
            this._organizationSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether SubmissionTechnology should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSubmissionTechnology()
    {
        return SubmissionTechnology != null && SubmissionTechnology.Count > 0;
    }
    
    /// <summary>
    /// Test whether Endpoint should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEndpoint()
    {
        return (_endpoint != null);
    }
    
    /// <summary>
    /// Test whether EndpointDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEndpointDescription()
    {
        return (_endpointDescription != null);
    }
    
    /// <summary>
    /// Test whether Organization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOrganization()
    {
        return (_organization != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// General information about how information in a particular form package must be handled. This may include, e.g., security, completeness, transmission, and validation criteria.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ComplianceRuleType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _description;
    
    private List<OrganizationType> _complianceOrganization;
    
    private string _ruleID;
    
    private string _formID;
    
    private bool _descriptionSpecified;
    
    private bool _complianceOrganizationSpecified;
    
    private bool _ruleIDSpecified;
    
    private bool _formIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ComplianceOrganization", Order=1)]
    public virtual List<OrganizationType> ComplianceOrganization
    {
        get
        {
            return this._complianceOrganization;
        }
        set
        {
            if ((this._complianceOrganization == value))
            {
                return;
            }
            if (((this._complianceOrganization == null) 
                        || (_complianceOrganization.Equals(value) != true)))
            {
                this._complianceOrganization = value;
                this.OnPropertyChanged("ComplianceOrganization", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string ruleID
    {
        get
        {
            return this._ruleID;
        }
        set
        {
            if ((this._ruleID == value))
            {
                return;
            }
            if (((this._ruleID == null) 
                        || (_ruleID.Equals(value) != true)))
            {
                this._ruleID = value;
                this.OnPropertyChanged("ruleID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
    public virtual string formID
    {
        get
        {
            return this._formID;
        }
        set
        {
            if ((this._formID == value))
            {
                return;
            }
            if (((this._formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                this._formID = value;
                this.OnPropertyChanged("formID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ComplianceOrganizationSpecified
    {
        get
        {
            return this._complianceOrganizationSpecified;
        }
        set
        {
            this._complianceOrganizationSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ruleIDSpecified
    {
        get
        {
            return this._ruleIDSpecified;
        }
        set
        {
            this._ruleIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool formIDSpecified
    {
        get
        {
            return this._formIDSpecified;
        }
        set
        {
            this._formIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ComplianceOrganization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeComplianceOrganization()
    {
        return ComplianceOrganization != null && ComplianceOrganization.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (_description != null);
    }
    
    /// <summary>
    /// Test whether ruleID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeruleID()
    {
        return !string.IsNullOrEmpty(ruleID);
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides a structure to record status information about a file, template or package stored in a registry.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RegisteredItemStateType : ExtensionBaseType
{
    
    #region Private fields
    private AcceptabilityType _acceptability;
    
    private string_Stype _administrativeStatus;
    
    private string_Stype _administrativeNote;
    
    private string_Stype _registrationStatus;
    
    private date_Stype _registrationStatusDate;
    
    private date_Stype _effectiveDate;
    
    private date_Stype _untilDate;
    
    private string_Stype _previousStatus;
    
    private bool _acceptabilitySpecified;
    
    private bool _administrativeStatusSpecified;
    
    private bool _administrativeNoteSpecified;
    
    private bool _registrationStatusSpecified;
    
    private bool _registrationStatusDateSpecified;
    
    private bool _effectiveDateSpecified;
    
    private bool _untilDateSpecified;
    
    private bool _previousStatusSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual AcceptabilityType Acceptability
    {
        get
        {
            return this._acceptability;
        }
        set
        {
            if ((this._acceptability == value))
            {
                return;
            }
            if (((this._acceptability == null) 
                        || (_acceptability.Equals(value) != true)))
            {
                this._acceptability = value;
                this.OnPropertyChanged("Acceptability", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype AdministrativeStatus
    {
        get
        {
            return this._administrativeStatus;
        }
        set
        {
            if ((this._administrativeStatus == value))
            {
                return;
            }
            if (((this._administrativeStatus == null) 
                        || (_administrativeStatus.Equals(value) != true)))
            {
                this._administrativeStatus = value;
                this.OnPropertyChanged("AdministrativeStatus", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype AdministrativeNote
    {
        get
        {
            return this._administrativeNote;
        }
        set
        {
            if ((this._administrativeNote == value))
            {
                return;
            }
            if (((this._administrativeNote == null) 
                        || (_administrativeNote.Equals(value) != true)))
            {
                this._administrativeNote = value;
                this.OnPropertyChanged("AdministrativeNote", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype RegistrationStatus
    {
        get
        {
            return this._registrationStatus;
        }
        set
        {
            if ((this._registrationStatus == value))
            {
                return;
            }
            if (((this._registrationStatus == null) 
                        || (_registrationStatus.Equals(value) != true)))
            {
                this._registrationStatus = value;
                this.OnPropertyChanged("RegistrationStatus", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual date_Stype RegistrationStatusDate
    {
        get
        {
            return this._registrationStatusDate;
        }
        set
        {
            if ((this._registrationStatusDate == value))
            {
                return;
            }
            if (((this._registrationStatusDate == null) 
                        || (_registrationStatusDate.Equals(value) != true)))
            {
                this._registrationStatusDate = value;
                this.OnPropertyChanged("RegistrationStatusDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual date_Stype EffectiveDate
    {
        get
        {
            return this._effectiveDate;
        }
        set
        {
            if ((this._effectiveDate == value))
            {
                return;
            }
            if (((this._effectiveDate == null) 
                        || (_effectiveDate.Equals(value) != true)))
            {
                this._effectiveDate = value;
                this.OnPropertyChanged("EffectiveDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual date_Stype UntilDate
    {
        get
        {
            return this._untilDate;
        }
        set
        {
            if ((this._untilDate == value))
            {
                return;
            }
            if (((this._untilDate == null) 
                        || (_untilDate.Equals(value) != true)))
            {
                this._untilDate = value;
                this.OnPropertyChanged("UntilDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual string_Stype PreviousStatus
    {
        get
        {
            return this._previousStatus;
        }
        set
        {
            if ((this._previousStatus == value))
            {
                return;
            }
            if (((this._previousStatus == null) 
                        || (_previousStatus.Equals(value) != true)))
            {
                this._previousStatus = value;
                this.OnPropertyChanged("PreviousStatus", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool AcceptabilitySpecified
    {
        get
        {
            return this._acceptabilitySpecified;
        }
        set
        {
            this._acceptabilitySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AdministrativeStatusSpecified
    {
        get
        {
            return this._administrativeStatusSpecified;
        }
        set
        {
            this._administrativeStatusSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AdministrativeNoteSpecified
    {
        get
        {
            return this._administrativeNoteSpecified;
        }
        set
        {
            this._administrativeNoteSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RegistrationStatusSpecified
    {
        get
        {
            return this._registrationStatusSpecified;
        }
        set
        {
            this._registrationStatusSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RegistrationStatusDateSpecified
    {
        get
        {
            return this._registrationStatusDateSpecified;
        }
        set
        {
            this._registrationStatusDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EffectiveDateSpecified
    {
        get
        {
            return this._effectiveDateSpecified;
        }
        set
        {
            this._effectiveDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UntilDateSpecified
    {
        get
        {
            return this._untilDateSpecified;
        }
        set
        {
            this._untilDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PreviousStatusSpecified
    {
        get
        {
            return this._previousStatusSpecified;
        }
        set
        {
            this._previousStatusSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Acceptability should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAcceptability()
    {
        return (_acceptability != null);
    }
    
    /// <summary>
    /// Test whether AdministrativeStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAdministrativeStatus()
    {
        return (_administrativeStatus != null);
    }
    
    /// <summary>
    /// Test whether AdministrativeNote should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAdministrativeNote()
    {
        return (_administrativeNote != null);
    }
    
    /// <summary>
    /// Test whether RegistrationStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRegistrationStatus()
    {
        return (_registrationStatus != null);
    }
    
    /// <summary>
    /// Test whether RegistrationStatusDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRegistrationStatusDate()
    {
        return (_registrationStatusDate != null);
    }
    
    /// <summary>
    /// Test whether EffectiveDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEffectiveDate()
    {
        return (_effectiveDate != null);
    }
    
    /// <summary>
    /// Test whether UntilDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUntilDate()
    {
        return (_untilDate != null);
    }
    
    /// <summary>
    /// Test whether PreviousStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializePreviousStatus()
    {
        return (_previousStatus != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides a structure to record information about a file, template or package stored in a registry.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RegisteredItemType : ExtensionBaseType
{
    
    #region Private fields
    private List<RichTextType> _registeredItemDescription;
    
    private RegisteredItemStateType _state;
    
    private List<ContactType> _contact;
    
    private List<FileType> _referenceDocument;
    
    private bool _registeredItemDescriptionSpecified;
    
    private bool _stateSpecified;
    
    private bool _contactSpecified;
    
    private bool _referenceDocumentSpecified;
    #endregion
    
    /// <summary>
    /// Description of the Registered Item
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("RegisteredItemDescription", Order=0)]
    public virtual List<RichTextType> RegisteredItemDescription
    {
        get
        {
            return this._registeredItemDescription;
        }
        set
        {
            if ((this._registeredItemDescription == value))
            {
                return;
            }
            if (((this._registeredItemDescription == null) 
                        || (_registeredItemDescription.Equals(value) != true)))
            {
                this._registeredItemDescription = value;
                this.OnPropertyChanged("RegisteredItemDescription", value);
            }
        }
    }
    
    /// <summary>
    /// Status of the Registered Item
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RegisteredItemStateType State
    {
        get
        {
            return this._state;
        }
        set
        {
            if ((this._state == value))
            {
                return;
            }
            if (((this._state == null) 
                        || (_state.Equals(value) != true)))
            {
                this._state = value;
                this.OnPropertyChanged("State", value);
            }
        }
    }
    
    /// <summary>
    /// Person(s) and Organization(s) to contact regarding the Registration Status of the Registered Item
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Contact", Order=2)]
    public virtual List<ContactType> Contact
    {
        get
        {
            return this._contact;
        }
        set
        {
            if ((this._contact == value))
            {
                return;
            }
            if (((this._contact == null) 
                        || (_contact.Equals(value) != true)))
            {
                this._contact = value;
                this.OnPropertyChanged("Contact", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ReferenceDocument", Order=3)]
    public virtual List<FileType> ReferenceDocument
    {
        get
        {
            return this._referenceDocument;
        }
        set
        {
            if ((this._referenceDocument == value))
            {
                return;
            }
            if (((this._referenceDocument == null) 
                        || (_referenceDocument.Equals(value) != true)))
            {
                this._referenceDocument = value;
                this.OnPropertyChanged("ReferenceDocument", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool RegisteredItemDescriptionSpecified
    {
        get
        {
            return this._registeredItemDescriptionSpecified;
        }
        set
        {
            this._registeredItemDescriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool StateSpecified
    {
        get
        {
            return this._stateSpecified;
        }
        set
        {
            this._stateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ContactSpecified
    {
        get
        {
            return this._contactSpecified;
        }
        set
        {
            this._contactSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ReferenceDocumentSpecified
    {
        get
        {
            return this._referenceDocumentSpecified;
        }
        set
        {
            this._referenceDocumentSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether RegisteredItemDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRegisteredItemDescription()
    {
        return RegisteredItemDescription != null && RegisteredItemDescription.Count > 0;
    }
    
    /// <summary>
    /// Test whether Contact should be serialized
    /// </summary>
    public virtual bool ShouldSerializeContact()
    {
        return Contact != null && Contact.Count > 0;
    }
    
    /// <summary>
    /// Test whether ReferenceDocument should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReferenceDocument()
    {
        return ReferenceDocument != null && ReferenceDocument.Count > 0;
    }
    
    /// <summary>
    /// Test whether State should be serialized
    /// </summary>
    public virtual bool ShouldSerializeState()
    {
        return (_state != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Information about a file, usually thought of as a binary byte stream
/// stored on disk. A FileType can also represent a "virtual" file, such as an XML
/// module in a larger XML document. Such a virtual file could theoretically be stored
/// as a byte stream, as an independant file on disk or as a database record or set of
/// records, even if this byte stream is never actually persisted as an independant disk
/// file.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class FileType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _fileID;
    
    private anyURI_Stype _fileURI;
    
    private string_Stype _displayName;
    
    private string_Stype _title;
    
    private VersionType _version;
    
    private string_Stype _fileName;
    
    private string_Stype _fileExtension;
    
    private string_Stype _fileClass;
    
    private positiveInteger_Stype _fileSizeKB;
    
    private List<string_Stype> _description;
    
    private string_Stype _copyright;
    
    private string_Stype _termsofUse;
    
    private FileUsageType _usage;
    
    private FileDatesType _dates;
    
    private ContactsType _contacts;
    
    private List<ApprovalType> _approval;
    
    private FileHashType _fileHash;
    
    private List<LanguageType> _language;
    
    private AssociatedFilesType _associatedFiles;
    
    private ProvenanceType _provenance;
    
    private List<SubmissionRuleType> _defaultSubmissionRule;
    
    private List<ComplianceRuleType> _defaultComplianceRule;
    
    private bool _fileIDSpecified;
    
    private bool _fileURISpecified;
    
    private bool _displayNameSpecified;
    
    private bool _titleSpecified;
    
    private bool _versionSpecified;
    
    private bool _fileNameSpecified;
    
    private bool _fileExtensionSpecified;
    
    private bool _fileClassSpecified;
    
    private bool _fileSizeKBSpecified;
    
    private bool _descriptionSpecified;
    
    private bool _copyrightSpecified;
    
    private bool _termsofUseSpecified;
    
    private bool _usageSpecified;
    
    private bool _datesSpecified;
    
    private bool _contactsSpecified;
    
    private bool _approvalSpecified;
    
    private bool _fileHashSpecified;
    
    private bool _languageSpecified;
    
    private bool _associatedFilesSpecified;
    
    private bool _provenanceSpecified;
    
    private bool _defaultSubmissionRuleSpecified;
    
    private bool _defaultComplianceRuleSpecified;
    #endregion
    
    /// <summary>
    /// Internal/local File ID, not necessarily in the format
    /// of the FileURI used for all SDC FormDesign items.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype FileID
    {
        get
        {
            return this._fileID;
        }
        set
        {
            if ((this._fileID == value))
            {
                return;
            }
            if (((this._fileID == null) 
                        || (_fileID.Equals(value) != true)))
            {
                this._fileID = value;
                this.OnPropertyChanged("FileID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual anyURI_Stype FileURI
    {
        get
        {
            return this._fileURI;
        }
        set
        {
            if ((this._fileURI == value))
            {
                return;
            }
            if (((this._fileURI == null) 
                        || (_fileURI.Equals(value) != true)))
            {
                this._fileURI = value;
                this.OnPropertyChanged("FileURI", value);
            }
        }
    }
    
    /// <summary>
    /// Text to be displayed that encapulates the file
    /// contents. This may be the same as the internal Title of the
    /// file.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype DisplayName
    {
        get
        {
            return this._displayName;
        }
        set
        {
            if ((this._displayName == value))
            {
                return;
            }
            if (((this._displayName == null) 
                        || (_displayName.Equals(value) != true)))
            {
                this._displayName = value;
                this.OnPropertyChanged("DisplayName", value);
            }
        }
    }
    
    /// <summary>
    /// Official title of the file.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype Title
    {
        get
        {
            return this._title;
        }
        set
        {
            if ((this._title == value))
            {
                return;
            }
            if (((this._title == null) 
                        || (_title.Equals(value) != true)))
            {
                this._title = value;
                this.OnPropertyChanged("Title", value);
            }
        }
    }
    
    /// <summary>
    /// File version
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual VersionType Version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("Version", value);
            }
        }
    }
    
    /// <summary>
    /// The name of the file as saved on disk or other persistant storage.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual string_Stype FileName
    {
        get
        {
            return this._fileName;
        }
        set
        {
            if ((this._fileName == value))
            {
                return;
            }
            if (((this._fileName == null) 
                        || (_fileName.Equals(value) != true)))
            {
                this._fileName = value;
                this.OnPropertyChanged("FileName", value);
            }
        }
    }
    
    /// <summary>
    /// The file type extension that describes the file's
    /// internal format. This is usually the 3-4 character text that appears
    /// after the last period in the file name, e.g., txt, docx,
    /// etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual string_Stype FileExtension
    {
        get
        {
            return this._fileExtension;
        }
        set
        {
            if ((this._fileExtension == value))
            {
                return;
            }
            if (((this._fileExtension == null) 
                        || (_fileExtension.Equals(value) != true)))
            {
                this._fileExtension = value;
                this.OnPropertyChanged("FileExtension", value);
            }
        }
    }
    
    /// <summary>
    /// A short description of the class of file, such as "FormDesign XML"
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual string_Stype FileClass
    {
        get
        {
            return this._fileClass;
        }
        set
        {
            if ((this._fileClass == value))
            {
                return;
            }
            if (((this._fileClass == null) 
                        || (_fileClass.Equals(value) != true)))
            {
                this._fileClass = value;
                this.OnPropertyChanged("FileClass", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual positiveInteger_Stype FileSizeKB
    {
        get
        {
            return this._fileSizeKB;
        }
        set
        {
            if ((this._fileSizeKB == value))
            {
                return;
            }
            if (((this._fileSizeKB == null) 
                        || (_fileSizeKB.Equals(value) != true)))
            {
                this._fileSizeKB = value;
                this.OnPropertyChanged("FileSizeKB", value);
            }
        }
    }
    
    /// <summary>
    /// Any additional information about the template or file. The type of information should be specified in the @type
    /// attribute.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Description", Order=9)]
    public virtual List<string_Stype> Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=10)]
    public virtual string_Stype Copyright
    {
        get
        {
            return this._copyright;
        }
        set
        {
            if ((this._copyright == value))
            {
                return;
            }
            if (((this._copyright == null) 
                        || (_copyright.Equals(value) != true)))
            {
                this._copyright = value;
                this.OnPropertyChanged("Copyright", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=11)]
    public virtual string_Stype TermsofUse
    {
        get
        {
            return this._termsofUse;
        }
        set
        {
            if ((this._termsofUse == value))
            {
                return;
            }
            if (((this._termsofUse == null) 
                        || (_termsofUse.Equals(value) != true)))
            {
                this._termsofUse = value;
                this.OnPropertyChanged("TermsofUse", value);
            }
        }
    }
    
    /// <summary>
    /// Guidance for when this file should be used, and when it should not be used.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=12)]
    public virtual FileUsageType Usage
    {
        get
        {
            return this._usage;
        }
        set
        {
            if ((this._usage == value))
            {
                return;
            }
            if (((this._usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                this._usage = value;
                this.OnPropertyChanged("Usage", value);
            }
        }
    }
    
    /// <summary>
    /// Various dates associated with the file release, versioning and usage.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=13)]
    public virtual FileDatesType Dates
    {
        get
        {
            return this._dates;
        }
        set
        {
            if ((this._dates == value))
            {
                return;
            }
            if (((this._dates == null) 
                        || (_dates.Equals(value) != true)))
            {
                this._dates = value;
                this.OnPropertyChanged("Dates", value);
            }
        }
    }
    
    /// <summary>
    /// People and Organizations associated with the file.
    /// Specify the type of Contact in the @type attribute. Examples of
    /// @type include Curator, Author, and Authority.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=14)]
    public virtual ContactsType Contacts
    {
        get
        {
            return this._contacts;
        }
        set
        {
            if ((this._contacts == value))
            {
                return;
            }
            if (((this._contacts == null) 
                        || (_contacts.Equals(value) != true)))
            {
                this._contacts = value;
                this.OnPropertyChanged("Contacts", value);
            }
        }
    }
    
    /// <summary>
    /// Documentation of review and acceptance of the file for production usage.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Approval", Order=15)]
    public virtual List<ApprovalType> Approval
    {
        get
        {
            return this._approval;
        }
        set
        {
            if ((this._approval == value))
            {
                return;
            }
            if (((this._approval == null) 
                        || (_approval.Equals(value) != true)))
            {
                this._approval = value;
                this.OnPropertyChanged("Approval", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=16)]
    public virtual FileHashType FileHash
    {
        get
        {
            return this._fileHash;
        }
        set
        {
            if ((this._fileHash == value))
            {
                return;
            }
            if (((this._fileHash == null) 
                        || (_fileHash.Equals(value) != true)))
            {
                this._fileHash = value;
                this.OnPropertyChanged("FileHash", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Language", Order=17)]
    public virtual List<LanguageType> Language
    {
        get
        {
            return this._language;
        }
        set
        {
            if ((this._language == value))
            {
                return;
            }
            if (((this._language == null) 
                        || (_language.Equals(value) != true)))
            {
                this._language = value;
                this.OnPropertyChanged("Language", value);
            }
        }
    }
    
    /// <summary>
    /// Link to any associated files, such as schemas, reference documents, manuals, etc.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=18)]
    public virtual AssociatedFilesType AssociatedFiles
    {
        get
        {
            return this._associatedFiles;
        }
        set
        {
            if ((this._associatedFiles == value))
            {
                return;
            }
            if (((this._associatedFiles == null) 
                        || (_associatedFiles.Equals(value) != true)))
            {
                this._associatedFiles = value;
                this.OnPropertyChanged("AssociatedFiles", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=19)]
    public virtual ProvenanceType Provenance
    {
        get
        {
            return this._provenance;
        }
        set
        {
            if ((this._provenance == value))
            {
                return;
            }
            if (((this._provenance == null) 
                        || (_provenance.Equals(value) != true)))
            {
                this._provenance = value;
                this.OnPropertyChanged("Provenance", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("DefaultSubmissionRule", Order=20)]
    public virtual List<SubmissionRuleType> DefaultSubmissionRule
    {
        get
        {
            return this._defaultSubmissionRule;
        }
        set
        {
            if ((this._defaultSubmissionRule == value))
            {
                return;
            }
            if (((this._defaultSubmissionRule == null) 
                        || (_defaultSubmissionRule.Equals(value) != true)))
            {
                this._defaultSubmissionRule = value;
                this.OnPropertyChanged("DefaultSubmissionRule", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("DefaultComplianceRule", Order=21)]
    public virtual List<ComplianceRuleType> DefaultComplianceRule
    {
        get
        {
            return this._defaultComplianceRule;
        }
        set
        {
            if ((this._defaultComplianceRule == value))
            {
                return;
            }
            if (((this._defaultComplianceRule == null) 
                        || (_defaultComplianceRule.Equals(value) != true)))
            {
                this._defaultComplianceRule = value;
                this.OnPropertyChanged("DefaultComplianceRule", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool FileIDSpecified
    {
        get
        {
            return this._fileIDSpecified;
        }
        set
        {
            this._fileIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileURISpecified
    {
        get
        {
            return this._fileURISpecified;
        }
        set
        {
            this._fileURISpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DisplayNameSpecified
    {
        get
        {
            return this._displayNameSpecified;
        }
        set
        {
            this._displayNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TitleSpecified
    {
        get
        {
            return this._titleSpecified;
        }
        set
        {
            this._titleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool VersionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileNameSpecified
    {
        get
        {
            return this._fileNameSpecified;
        }
        set
        {
            this._fileNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileExtensionSpecified
    {
        get
        {
            return this._fileExtensionSpecified;
        }
        set
        {
            this._fileExtensionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileClassSpecified
    {
        get
        {
            return this._fileClassSpecified;
        }
        set
        {
            this._fileClassSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileSizeKBSpecified
    {
        get
        {
            return this._fileSizeKBSpecified;
        }
        set
        {
            this._fileSizeKBSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CopyrightSpecified
    {
        get
        {
            return this._copyrightSpecified;
        }
        set
        {
            this._copyrightSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TermsofUseSpecified
    {
        get
        {
            return this._termsofUseSpecified;
        }
        set
        {
            this._termsofUseSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return this._usageSpecified;
        }
        set
        {
            this._usageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DatesSpecified
    {
        get
        {
            return this._datesSpecified;
        }
        set
        {
            this._datesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ContactsSpecified
    {
        get
        {
            return this._contactsSpecified;
        }
        set
        {
            this._contactsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ApprovalSpecified
    {
        get
        {
            return this._approvalSpecified;
        }
        set
        {
            this._approvalSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FileHashSpecified
    {
        get
        {
            return this._fileHashSpecified;
        }
        set
        {
            this._fileHashSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool LanguageSpecified
    {
        get
        {
            return this._languageSpecified;
        }
        set
        {
            this._languageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool AssociatedFilesSpecified
    {
        get
        {
            return this._associatedFilesSpecified;
        }
        set
        {
            this._associatedFilesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ProvenanceSpecified
    {
        get
        {
            return this._provenanceSpecified;
        }
        set
        {
            this._provenanceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DefaultSubmissionRuleSpecified
    {
        get
        {
            return this._defaultSubmissionRuleSpecified;
        }
        set
        {
            this._defaultSubmissionRuleSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DefaultComplianceRuleSpecified
    {
        get
        {
            return this._defaultComplianceRuleSpecified;
        }
        set
        {
            this._defaultComplianceRuleSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return Description != null && Description.Count > 0;
    }
    
    /// <summary>
    /// Test whether Approval should be serialized
    /// </summary>
    public virtual bool ShouldSerializeApproval()
    {
        return Approval != null && Approval.Count > 0;
    }
    
    /// <summary>
    /// Test whether Language should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLanguage()
    {
        return Language != null && Language.Count > 0;
    }
    
    /// <summary>
    /// Test whether DefaultSubmissionRule should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDefaultSubmissionRule()
    {
        return DefaultSubmissionRule != null && DefaultSubmissionRule.Count > 0;
    }
    
    /// <summary>
    /// Test whether DefaultComplianceRule should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDefaultComplianceRule()
    {
        return DefaultComplianceRule != null && DefaultComplianceRule.Count > 0;
    }
    
    /// <summary>
    /// Test whether FileID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileID()
    {
        return (_fileID != null);
    }
    
    /// <summary>
    /// Test whether FileURI should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileURI()
    {
        return (_fileURI != null);
    }
    
    /// <summary>
    /// Test whether DisplayName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDisplayName()
    {
        return (_displayName != null);
    }
    
    /// <summary>
    /// Test whether Title should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTitle()
    {
        return (_title != null);
    }
    
    /// <summary>
    /// Test whether Version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersion()
    {
        return (_version != null);
    }
    
    /// <summary>
    /// Test whether FileName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileName()
    {
        return (_fileName != null);
    }
    
    /// <summary>
    /// Test whether FileExtension should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileExtension()
    {
        return (_fileExtension != null);
    }
    
    /// <summary>
    /// Test whether FileClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileClass()
    {
        return (_fileClass != null);
    }
    
    /// <summary>
    /// Test whether FileSizeKB should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileSizeKB()
    {
        return (_fileSizeKB != null);
    }
    
    /// <summary>
    /// Test whether Copyright should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCopyright()
    {
        return (_copyright != null);
    }
    
    /// <summary>
    /// Test whether TermsofUse should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTermsofUse()
    {
        return (_termsofUse != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
    
    /// <summary>
    /// Test whether Dates should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDates()
    {
        return (_dates != null);
    }
    
    /// <summary>
    /// Test whether Contacts should be serialized
    /// </summary>
    public virtual bool ShouldSerializeContacts()
    {
        return (_contacts != null);
    }
    
    /// <summary>
    /// Test whether FileHash should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileHash()
    {
        return (_fileHash != null);
    }
    
    /// <summary>
    /// Test whether AssociatedFiles should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAssociatedFiles()
    {
        return (_associatedFiles != null);
    }
    
    /// <summary>
    /// Test whether Provenance should be serialized
    /// </summary>
    public virtual bool ShouldSerializeProvenance()
    {
        return (_provenance != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A generic structure for recording file version metadata.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class VersionType : ExtensionBaseType
{
    
    #region Private fields
    private FileType _versioningReference;
    
    private RichTextType _versionComments;
    
    private VersionTypeChanges _changes;
    
    private string _fullVersion;
    
    private string _versionRegExPattern;
    
    private string _versionLevel1;
    
    private string _versionLevel2;
    
    private string _versionLevel3;
    
    private string _versionLevel4;
    
    private string _versionLevel5;
    
    private bool _versioningReferenceSpecified;
    
    private bool _versionCommentsSpecified;
    
    private bool _changesSpecified;
    
    private bool _fullVersionSpecified;
    
    private bool _versionRegExPatternSpecified;
    
    private bool _versionLevel1Specified;
    
    private bool _versionLevel2Specified;
    
    private bool _versionLevel3Specified;
    
    private bool _versionLevel4Specified;
    
    private bool _versionLevel5Specified;
    #endregion
    
    /// <summary>
    /// Information about the document that describes the versioning methodology nomenclature.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual FileType VersioningReference
    {
        get
        {
            return this._versioningReference;
        }
        set
        {
            if ((this._versioningReference == value))
            {
                return;
            }
            if (((this._versioningReference == null) 
                        || (_versioningReference.Equals(value) != true)))
            {
                this._versioningReference = value;
                this.OnPropertyChanged("VersioningReference", value);
            }
        }
    }
    
    /// <summary>
    /// Comments about the changes in this version
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RichTextType VersionComments
    {
        get
        {
            return this._versionComments;
        }
        set
        {
            if ((this._versionComments == value))
            {
                return;
            }
            if (((this._versionComments == null) 
                        || (_versionComments.Equals(value) != true)))
            {
                this._versionComments = value;
                this.OnPropertyChanged("VersionComments", value);
            }
        }
    }
    
    /// <summary>
    /// Itemized list of changes in the new version
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual VersionTypeChanges Changes
    {
        get
        {
            return this._changes;
        }
        set
        {
            if ((this._changes == value))
            {
                return;
            }
            if (((this._changes == null) 
                        || (_changes.Equals(value) != true)))
            {
                this._changes = value;
                this.OnPropertyChanged("Changes", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string fullVersion
    {
        get
        {
            return this._fullVersion;
        }
        set
        {
            if ((this._fullVersion == value))
            {
                return;
            }
            if (((this._fullVersion == null) 
                        || (_fullVersion.Equals(value) != true)))
            {
                this._fullVersion = value;
                this.OnPropertyChanged("fullVersion", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string versionRegExPattern
    {
        get
        {
            return this._versionRegExPattern;
        }
        set
        {
            if ((this._versionRegExPattern == value))
            {
                return;
            }
            if (((this._versionRegExPattern == null) 
                        || (_versionRegExPattern.Equals(value) != true)))
            {
                this._versionRegExPattern = value;
                this.OnPropertyChanged("versionRegExPattern", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("versionLevel.1")]
    public virtual string versionLevel1
    {
        get
        {
            return this._versionLevel1;
        }
        set
        {
            if ((this._versionLevel1 == value))
            {
                return;
            }
            if (((this._versionLevel1 == null) 
                        || (_versionLevel1.Equals(value) != true)))
            {
                this._versionLevel1 = value;
                this.OnPropertyChanged("versionLevel1", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("versionLevel.2")]
    public virtual string versionLevel2
    {
        get
        {
            return this._versionLevel2;
        }
        set
        {
            if ((this._versionLevel2 == value))
            {
                return;
            }
            if (((this._versionLevel2 == null) 
                        || (_versionLevel2.Equals(value) != true)))
            {
                this._versionLevel2 = value;
                this.OnPropertyChanged("versionLevel2", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("versionLevel.3")]
    public virtual string versionLevel3
    {
        get
        {
            return this._versionLevel3;
        }
        set
        {
            if ((this._versionLevel3 == value))
            {
                return;
            }
            if (((this._versionLevel3 == null) 
                        || (_versionLevel3.Equals(value) != true)))
            {
                this._versionLevel3 = value;
                this.OnPropertyChanged("versionLevel3", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("versionLevel.4")]
    public virtual string versionLevel4
    {
        get
        {
            return this._versionLevel4;
        }
        set
        {
            if ((this._versionLevel4 == value))
            {
                return;
            }
            if (((this._versionLevel4 == null) 
                        || (_versionLevel4.Equals(value) != true)))
            {
                this._versionLevel4 = value;
                this.OnPropertyChanged("versionLevel4", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute("versionLevel.5")]
    public virtual string versionLevel5
    {
        get
        {
            return this._versionLevel5;
        }
        set
        {
            if ((this._versionLevel5 == value))
            {
                return;
            }
            if (((this._versionLevel5 == null) 
                        || (_versionLevel5.Equals(value) != true)))
            {
                this._versionLevel5 = value;
                this.OnPropertyChanged("versionLevel5", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool VersioningReferenceSpecified
    {
        get
        {
            return this._versioningReferenceSpecified;
        }
        set
        {
            this._versioningReferenceSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool VersionCommentsSpecified
    {
        get
        {
            return this._versionCommentsSpecified;
        }
        set
        {
            this._versionCommentsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangesSpecified
    {
        get
        {
            return this._changesSpecified;
        }
        set
        {
            this._changesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool fullVersionSpecified
    {
        get
        {
            return this._fullVersionSpecified;
        }
        set
        {
            this._fullVersionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionRegExPatternSpecified
    {
        get
        {
            return this._versionRegExPatternSpecified;
        }
        set
        {
            this._versionRegExPatternSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionLevel1Specified
    {
        get
        {
            return this._versionLevel1Specified;
        }
        set
        {
            this._versionLevel1Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionLevel2Specified
    {
        get
        {
            return this._versionLevel2Specified;
        }
        set
        {
            this._versionLevel2Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionLevel3Specified
    {
        get
        {
            return this._versionLevel3Specified;
        }
        set
        {
            this._versionLevel3Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionLevel4Specified
    {
        get
        {
            return this._versionLevel4Specified;
        }
        set
        {
            this._versionLevel4Specified = value;
        }
    }
    
    [XmlIgnore()]
    public bool versionLevel5Specified
    {
        get
        {
            return this._versionLevel5Specified;
        }
        set
        {
            this._versionLevel5Specified = value;
        }
    }
    
    /// <summary>
    /// Test whether VersioningReference should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersioningReference()
    {
        return (_versioningReference != null);
    }
    
    /// <summary>
    /// Test whether VersionComments should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersionComments()
    {
        return (_versionComments != null);
    }
    
    /// <summary>
    /// Test whether Changes should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChanges()
    {
        return (_changes != null);
    }
    
    /// <summary>
    /// Test whether fullVersion should be serialized
    /// </summary>
    public virtual bool ShouldSerializefullVersion()
    {
        return !string.IsNullOrEmpty(fullVersion);
    }
    
    /// <summary>
    /// Test whether versionRegExPattern should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionRegExPattern()
    {
        return !string.IsNullOrEmpty(versionRegExPattern);
    }
    
    /// <summary>
    /// Test whether versionLevel1 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionLevel1()
    {
        return !string.IsNullOrEmpty(versionLevel1);
    }
    
    /// <summary>
    /// Test whether versionLevel2 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionLevel2()
    {
        return !string.IsNullOrEmpty(versionLevel2);
    }
    
    /// <summary>
    /// Test whether versionLevel3 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionLevel3()
    {
        return !string.IsNullOrEmpty(versionLevel3);
    }
    
    /// <summary>
    /// Test whether versionLevel4 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionLevel4()
    {
        return !string.IsNullOrEmpty(versionLevel4);
    }
    
    /// <summary>
    /// Test whether versionLevel5 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversionLevel5()
    {
        return !string.IsNullOrEmpty(versionLevel5);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A generic structure for recording file version metadata.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class VersionTypeChanges : ExtensionBaseType
{
    
    #region Private fields
    private List<ChangeLogType> _change;
    
    private bool _changeSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Change", Order=0)]
    public virtual List<ChangeLogType> Change
    {
        get
        {
            return this._change;
        }
        set
        {
            if ((this._change == value))
            {
                return;
            }
            if (((this._change == null) 
                        || (_change.Equals(value) != true)))
            {
                this._change = value;
                this.OnPropertyChanged("Change", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ChangeSpecified
    {
        get
        {
            return this._changeSpecified;
        }
        set
        {
            this._changeSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Change should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChange()
    {
        return Change != null && Change.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Inforamtion about changes to file or part of a
/// file.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChangeLogType : ExtensionBaseType
{
    
    #region Private fields
    private ChangedFieldType _changedField;
    
    private DataTypes_SType _changedTo;
    
    private DataTypes_SType _changedFrom;
    
    private List<string_Stype> _changeType;
    
    private ReplacedIDsType _replaces;
    
    private dateTime_Stype _changeDate;
    
    private string_Stype _changeDescription;
    
    private ContactsType _editors;
    
    private ChangeTrackingType _changeTracking;
    
    private bool _changedFieldSpecified;
    
    private bool _changedToSpecified;
    
    private bool _changedFromSpecified;
    
    private bool _changeTypeSpecified;
    
    private bool _replacesSpecified;
    
    private bool _changeDateSpecified;
    
    private bool _changeDescriptionSpecified;
    
    private bool _editorsSpecified;
    
    private bool _changeTrackingSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ChangedFieldType ChangedField
    {
        get
        {
            return this._changedField;
        }
        set
        {
            if ((this._changedField == value))
            {
                return;
            }
            if (((this._changedField == null) 
                        || (_changedField.Equals(value) != true)))
            {
                this._changedField = value;
                this.OnPropertyChanged("ChangedField", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual DataTypes_SType ChangedTo
    {
        get
        {
            return this._changedTo;
        }
        set
        {
            if ((this._changedTo == value))
            {
                return;
            }
            if (((this._changedTo == null) 
                        || (_changedTo.Equals(value) != true)))
            {
                this._changedTo = value;
                this.OnPropertyChanged("ChangedTo", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual DataTypes_SType ChangedFrom
    {
        get
        {
            return this._changedFrom;
        }
        set
        {
            if ((this._changedFrom == value))
            {
                return;
            }
            if (((this._changedFrom == null) 
                        || (_changedFrom.Equals(value) != true)))
            {
                this._changedFrom = value;
                this.OnPropertyChanged("ChangedFrom", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ChangeType", Order=3)]
    public virtual List<string_Stype> ChangeType
    {
        get
        {
            return this._changeType;
        }
        set
        {
            if ((this._changeType == value))
            {
                return;
            }
            if (((this._changeType == null) 
                        || (_changeType.Equals(value) != true)))
            {
                this._changeType = value;
                this.OnPropertyChanged("ChangeType", value);
            }
        }
    }
    
    /// <summary>
    /// The retired/deprecated item that is being replaced.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual ReplacedIDsType Replaces
    {
        get
        {
            return this._replaces;
        }
        set
        {
            if ((this._replaces == value))
            {
                return;
            }
            if (((this._replaces == null) 
                        || (_replaces.Equals(value) != true)))
            {
                this._replaces = value;
                this.OnPropertyChanged("Replaces", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual dateTime_Stype ChangeDate
    {
        get
        {
            return this._changeDate;
        }
        set
        {
            if ((this._changeDate == value))
            {
                return;
            }
            if (((this._changeDate == null) 
                        || (_changeDate.Equals(value) != true)))
            {
                this._changeDate = value;
                this.OnPropertyChanged("ChangeDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual string_Stype ChangeDescription
    {
        get
        {
            return this._changeDescription;
        }
        set
        {
            if ((this._changeDescription == value))
            {
                return;
            }
            if (((this._changeDescription == null) 
                        || (_changeDescription.Equals(value) != true)))
            {
                this._changeDescription = value;
                this.OnPropertyChanged("ChangeDescription", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual ContactsType Editors
    {
        get
        {
            return this._editors;
        }
        set
        {
            if ((this._editors == value))
            {
                return;
            }
            if (((this._editors == null) 
                        || (_editors.Equals(value) != true)))
            {
                this._editors = value;
                this.OnPropertyChanged("Editors", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=8)]
    public virtual ChangeTrackingType ChangeTracking
    {
        get
        {
            return this._changeTracking;
        }
        set
        {
            if ((this._changeTracking == value))
            {
                return;
            }
            if (((this._changeTracking == null) 
                        || (_changeTracking.Equals(value) != true)))
            {
                this._changeTracking = value;
                this.OnPropertyChanged("ChangeTracking", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ChangedFieldSpecified
    {
        get
        {
            return this._changedFieldSpecified;
        }
        set
        {
            this._changedFieldSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangedToSpecified
    {
        get
        {
            return this._changedToSpecified;
        }
        set
        {
            this._changedToSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangedFromSpecified
    {
        get
        {
            return this._changedFromSpecified;
        }
        set
        {
            this._changedFromSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangeTypeSpecified
    {
        get
        {
            return this._changeTypeSpecified;
        }
        set
        {
            this._changeTypeSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ReplacesSpecified
    {
        get
        {
            return this._replacesSpecified;
        }
        set
        {
            this._replacesSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangeDateSpecified
    {
        get
        {
            return this._changeDateSpecified;
        }
        set
        {
            this._changeDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangeDescriptionSpecified
    {
        get
        {
            return this._changeDescriptionSpecified;
        }
        set
        {
            this._changeDescriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EditorsSpecified
    {
        get
        {
            return this._editorsSpecified;
        }
        set
        {
            this._editorsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ChangeTrackingSpecified
    {
        get
        {
            return this._changeTrackingSpecified;
        }
        set
        {
            this._changeTrackingSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ChangeType should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeType()
    {
        return ChangeType != null && ChangeType.Count > 0;
    }
    
    /// <summary>
    /// Test whether ChangedField should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedField()
    {
        return (_changedField != null);
    }
    
    /// <summary>
    /// Test whether ChangedTo should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedTo()
    {
        return (_changedTo != null);
    }
    
    /// <summary>
    /// Test whether ChangedFrom should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangedFrom()
    {
        return (_changedFrom != null);
    }
    
    /// <summary>
    /// Test whether Replaces should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReplaces()
    {
        return (_replaces != null);
    }
    
    /// <summary>
    /// Test whether ChangeDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeDate()
    {
        return (_changeDate != null);
    }
    
    /// <summary>
    /// Test whether ChangeDescription should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeDescription()
    {
        return (_changeDescription != null);
    }
    
    /// <summary>
    /// Test whether Editors should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEditors()
    {
        return (_editors != null);
    }
    
    /// <summary>
    /// Test whether ChangeTracking should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeTracking()
    {
        return (_changeTracking != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChangedFieldType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("TargetItemID", typeof(TargetItemIDType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("TargetItemName", typeof(TargetItemNameType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("TargetItemXPath", typeof(TargetItemXPathType), Order=0)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TargetItemNameType : BaseType
{
    
    #region Private fields
    private string _val;
    
    private string _targetItemText;
    
    private string _targetProperty;
    
    private bool _valSpecified;
    
    private bool _targetItemTextSpecified;
    
    private bool _targetPropertySpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="NCName")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    /// <summary>
    /// Displayed text on the targetted item.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string targetItemText
    {
        get
        {
            return this._targetItemText;
        }
        set
        {
            if ((this._targetItemText == value))
            {
                return;
            }
            if (((this._targetItemText == null) 
                        || (_targetItemText.Equals(value) != true)))
            {
                this._targetItemText = value;
                this.OnPropertyChanged("targetItemText", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string targetProperty
    {
        get
        {
            return this._targetProperty;
        }
        set
        {
            if ((this._targetProperty == value))
            {
                return;
            }
            if (((this._targetProperty == null) 
                        || (_targetProperty.Equals(value) != true)))
            {
                this._targetProperty = value;
                this.OnPropertyChanged("targetProperty", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetItemTextSpecified
    {
        get
        {
            return this._targetItemTextSpecified;
        }
        set
        {
            this._targetItemTextSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool targetPropertySpecified
    {
        get
        {
            return this._targetPropertySpecified;
        }
        set
        {
            this._targetPropertySpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
    
    /// <summary>
    /// Test whether targetItemText should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetItemText()
    {
        return !string.IsNullOrEmpty(targetItemText);
    }
    
    /// <summary>
    /// Test whether targetProperty should be serialized
    /// </summary>
    public virtual bool ShouldSerializetargetProperty()
    {
        return !string.IsNullOrEmpty(targetProperty);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ReplacedIDsType : BaseType
{
    
    #region Private fields
    private List<anyURI_Stype> _replacedID;
    
    private bool _replacedIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ReplacedID", Order=0)]
    public virtual List<anyURI_Stype> ReplacedID
    {
        get
        {
            return this._replacedID;
        }
        set
        {
            if ((this._replacedID == value))
            {
                return;
            }
            if (((this._replacedID == null) 
                        || (_replacedID.Equals(value) != true)))
            {
                this._replacedID = value;
                this.OnPropertyChanged("ReplacedID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ReplacedIDSpecified
    {
        get
        {
            return this._replacedIDSpecified;
        }
        set
        {
            this._replacedIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ReplacedID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReplacedID()
    {
        return ReplacedID != null && ReplacedID.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ContactsType : ExtensionBaseType
{
    
    #region Private fields
    private List<ContactType> _contact;
    
    private bool _contactSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Contact", Order=0)]
    public virtual List<ContactType> Contact
    {
        get
        {
            return this._contact;
        }
        set
        {
            if ((this._contact == value))
            {
                return;
            }
            if (((this._contact == null) 
                        || (_contact.Equals(value) != true)))
            {
                this._contact = value;
                this.OnPropertyChanged("Contact", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ContactSpecified
    {
        get
        {
            return this._contactSpecified;
        }
        set
        {
            this._contactSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Contact should be serialized
    /// </summary>
    public virtual bool ShouldSerializeContact()
    {
        return Contact != null && Contact.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChangeTrackingType : BaseType
{
    
    #region Private fields
    private List<string_Stype> _changeTrackingID;
    
    private bool _changeTrackingIDSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ChangeTrackingID", Order=0)]
    public virtual List<string_Stype> ChangeTrackingID
    {
        get
        {
            return this._changeTrackingID;
        }
        set
        {
            if ((this._changeTrackingID == value))
            {
                return;
            }
            if (((this._changeTrackingID == null) 
                        || (_changeTrackingID.Equals(value) != true)))
            {
                this._changeTrackingID = value;
                this.OnPropertyChanged("ChangeTrackingID", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ChangeTrackingIDSpecified
    {
        get
        {
            return this._changeTrackingIDSpecified;
        }
        set
        {
            this._changeTrackingIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ChangeTrackingID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeChangeTrackingID()
    {
        return ChangeTrackingID != null && ChangeTrackingID.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class FileUsageType : ExtensionBaseType
{
    
    #region Private fields
    private List<CodingType> _included;
    
    private List<CodingType> _excluded;
    
    private List<string_Stype> _description;
    
    private bool _includedSpecified;
    
    private bool _excludedSpecified;
    
    private bool _descriptionSpecified;
    #endregion
    
    /// <summary>
    /// Reasons to use the file
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Included", Order=0)]
    public virtual List<CodingType> Included
    {
        get
        {
            return this._included;
        }
        set
        {
            if ((this._included == value))
            {
                return;
            }
            if (((this._included == null) 
                        || (_included.Equals(value) != true)))
            {
                this._included = value;
                this.OnPropertyChanged("Included", value);
            }
        }
    }
    
    /// <summary>
    /// Reasons to not use the file
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Excluded", Order=1)]
    public virtual List<CodingType> Excluded
    {
        get
        {
            return this._excluded;
        }
        set
        {
            if ((this._excluded == value))
            {
                return;
            }
            if (((this._excluded == null) 
                        || (_excluded.Equals(value) != true)))
            {
                this._excluded = value;
                this.OnPropertyChanged("Excluded", value);
            }
        }
    }
    
    /// <summary>
    /// Non-coded text describing usage criteria.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Description", Order=2)]
    public virtual List<string_Stype> Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool IncludedSpecified
    {
        get
        {
            return this._includedSpecified;
        }
        set
        {
            this._includedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ExcludedSpecified
    {
        get
        {
            return this._excludedSpecified;
        }
        set
        {
            this._excludedSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Included should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIncluded()
    {
        return Included != null && Included.Count > 0;
    }
    
    /// <summary>
    /// Test whether Excluded should be serialized
    /// </summary>
    public virtual bool ShouldSerializeExcluded()
    {
        return Excluded != null && Excluded.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return Description != null && Description.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// List of standard kinds of dates that may apply to a file or its usage.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class FileDatesType : ExtensionBaseType
{
    
    #region Private fields
    private dateTime_Stype _fileDate;
    
    private List<dateTime_Stype> _previousRevisionDate;
    
    private dateTime_Stype _releaseDate;
    
    private dateTime_Stype _effectiveDate;
    
    private dateTime_Stype _firstReleaseDate;
    
    private dateTime_Stype _usageStartDate;
    
    private dateTime_Stype _retirementDate;
    
    private List<dateTime_Stype> _otherDate;
    
    private bool _fileDateSpecified;
    
    private bool _previousRevisionDateSpecified;
    
    private bool _releaseDateSpecified;
    
    private bool _effectiveDateSpecified;
    
    private bool _firstReleaseDateSpecified;
    
    private bool _usageStartDateSpecified;
    
    private bool _retirementDateSpecified;
    
    private bool _otherDateSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual dateTime_Stype FileDate
    {
        get
        {
            return this._fileDate;
        }
        set
        {
            if ((this._fileDate == value))
            {
                return;
            }
            if (((this._fileDate == null) 
                        || (_fileDate.Equals(value) != true)))
            {
                this._fileDate = value;
                this.OnPropertyChanged("FileDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("PreviousRevisionDate", Order=1)]
    public virtual List<dateTime_Stype> PreviousRevisionDate
    {
        get
        {
            return this._previousRevisionDate;
        }
        set
        {
            if ((this._previousRevisionDate == value))
            {
                return;
            }
            if (((this._previousRevisionDate == null) 
                        || (_previousRevisionDate.Equals(value) != true)))
            {
                this._previousRevisionDate = value;
                this.OnPropertyChanged("PreviousRevisionDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual dateTime_Stype ReleaseDate
    {
        get
        {
            return this._releaseDate;
        }
        set
        {
            if ((this._releaseDate == value))
            {
                return;
            }
            if (((this._releaseDate == null) 
                        || (_releaseDate.Equals(value) != true)))
            {
                this._releaseDate = value;
                this.OnPropertyChanged("ReleaseDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual dateTime_Stype EffectiveDate
    {
        get
        {
            return this._effectiveDate;
        }
        set
        {
            if ((this._effectiveDate == value))
            {
                return;
            }
            if (((this._effectiveDate == null) 
                        || (_effectiveDate.Equals(value) != true)))
            {
                this._effectiveDate = value;
                this.OnPropertyChanged("EffectiveDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual dateTime_Stype FirstReleaseDate
    {
        get
        {
            return this._firstReleaseDate;
        }
        set
        {
            if ((this._firstReleaseDate == value))
            {
                return;
            }
            if (((this._firstReleaseDate == null) 
                        || (_firstReleaseDate.Equals(value) != true)))
            {
                this._firstReleaseDate = value;
                this.OnPropertyChanged("FirstReleaseDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual dateTime_Stype UsageStartDate
    {
        get
        {
            return this._usageStartDate;
        }
        set
        {
            if ((this._usageStartDate == value))
            {
                return;
            }
            if (((this._usageStartDate == null) 
                        || (_usageStartDate.Equals(value) != true)))
            {
                this._usageStartDate = value;
                this.OnPropertyChanged("UsageStartDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual dateTime_Stype RetirementDate
    {
        get
        {
            return this._retirementDate;
        }
        set
        {
            if ((this._retirementDate == value))
            {
                return;
            }
            if (((this._retirementDate == null) 
                        || (_retirementDate.Equals(value) != true)))
            {
                this._retirementDate = value;
                this.OnPropertyChanged("RetirementDate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("OtherDate", Order=7)]
    public virtual List<dateTime_Stype> OtherDate
    {
        get
        {
            return this._otherDate;
        }
        set
        {
            if ((this._otherDate == value))
            {
                return;
            }
            if (((this._otherDate == null) 
                        || (_otherDate.Equals(value) != true)))
            {
                this._otherDate = value;
                this.OnPropertyChanged("OtherDate", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool FileDateSpecified
    {
        get
        {
            return this._fileDateSpecified;
        }
        set
        {
            this._fileDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool PreviousRevisionDateSpecified
    {
        get
        {
            return this._previousRevisionDateSpecified;
        }
        set
        {
            this._previousRevisionDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ReleaseDateSpecified
    {
        get
        {
            return this._releaseDateSpecified;
        }
        set
        {
            this._releaseDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool EffectiveDateSpecified
    {
        get
        {
            return this._effectiveDateSpecified;
        }
        set
        {
            this._effectiveDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FirstReleaseDateSpecified
    {
        get
        {
            return this._firstReleaseDateSpecified;
        }
        set
        {
            this._firstReleaseDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool UsageStartDateSpecified
    {
        get
        {
            return this._usageStartDateSpecified;
        }
        set
        {
            this._usageStartDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RetirementDateSpecified
    {
        get
        {
            return this._retirementDateSpecified;
        }
        set
        {
            this._retirementDateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool OtherDateSpecified
    {
        get
        {
            return this._otherDateSpecified;
        }
        set
        {
            this._otherDateSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PreviousRevisionDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializePreviousRevisionDate()
    {
        return PreviousRevisionDate != null && PreviousRevisionDate.Count > 0;
    }
    
    /// <summary>
    /// Test whether OtherDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOtherDate()
    {
        return OtherDate != null && OtherDate.Count > 0;
    }
    
    /// <summary>
    /// Test whether FileDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileDate()
    {
        return (_fileDate != null);
    }
    
    /// <summary>
    /// Test whether ReleaseDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReleaseDate()
    {
        return (_releaseDate != null);
    }
    
    /// <summary>
    /// Test whether EffectiveDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEffectiveDate()
    {
        return (_effectiveDate != null);
    }
    
    /// <summary>
    /// Test whether FirstReleaseDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFirstReleaseDate()
    {
        return (_firstReleaseDate != null);
    }
    
    /// <summary>
    /// Test whether UsageStartDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsageStartDate()
    {
        return (_usageStartDate != null);
    }
    
    /// <summary>
    /// Test whether RetirementDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRetirementDate()
    {
        return (_retirementDate != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ApprovalType : ExtensionBaseType
{
    
    #region Private fields
    private List<ContactType> _approvalContact;
    
    private List<string_Stype> _description;
    
    private bool _approvalContactSpecified;
    
    private bool _descriptionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ApprovalContact", Order=0)]
    public virtual List<ContactType> ApprovalContact
    {
        get
        {
            return this._approvalContact;
        }
        set
        {
            if ((this._approvalContact == value))
            {
                return;
            }
            if (((this._approvalContact == null) 
                        || (_approvalContact.Equals(value) != true)))
            {
                this._approvalContact = value;
                this.OnPropertyChanged("ApprovalContact", value);
            }
        }
    }
    
    /// <summary>
    /// Non-structured text describing file approval.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute("Description", Order=1)]
    public virtual List<string_Stype> Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ApprovalContactSpecified
    {
        get
        {
            return this._approvalContactSpecified;
        }
        set
        {
            this._approvalContactSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ApprovalContact should be serialized
    /// </summary>
    public virtual bool ShouldSerializeApprovalContact()
    {
        return ApprovalContact != null && ApprovalContact.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return Description != null && Description.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A generic structure for recording languages.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class LanguageType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _language;
    
    private LanguageCodeISO6393_Type _languageCodeISO6393;
    
    private bool _languageSpecified;
    
    private bool _languageCodeISO6393Specified;
    #endregion
    
    /// <summary>
    /// The language used for text in SDC templates.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Language
    {
        get
        {
            return this._language;
        }
        set
        {
            if ((this._language == value))
            {
                return;
            }
            if (((this._language == null) 
                        || (_language.Equals(value) != true)))
            {
                this._language = value;
                this.OnPropertyChanged("Language", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("LanguageCode.ISO.639.3", Order=1)]
    public virtual LanguageCodeISO6393_Type LanguageCodeISO6393
    {
        get
        {
            return this._languageCodeISO6393;
        }
        set
        {
            if ((this._languageCodeISO6393 == value))
            {
                return;
            }
            if (((this._languageCodeISO6393 == null) 
                        || (_languageCodeISO6393.Equals(value) != true)))
            {
                this._languageCodeISO6393 = value;
                this.OnPropertyChanged("LanguageCodeISO6393", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool LanguageSpecified
    {
        get
        {
            return this._languageSpecified;
        }
        set
        {
            this._languageSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool LanguageCodeISO6393Specified
    {
        get
        {
            return this._languageCodeISO6393Specified;
        }
        set
        {
            this._languageCodeISO6393Specified = value;
        }
    }
    
    /// <summary>
    /// Test whether Language should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLanguage()
    {
        return (_language != null);
    }
    
    /// <summary>
    /// Test whether LanguageCodeISO6393 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLanguageCodeISO6393()
    {
        return (_languageCodeISO6393 != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class AssociatedFilesType : ExtensionBaseType
{
    
    #region Private fields
    private List<FileType> _file;
    
    private bool _fileSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("File", Order=0)]
    public virtual List<FileType> File
    {
        get
        {
            return this._file;
        }
        set
        {
            if ((this._file == value))
            {
                return;
            }
            if (((this._file == null) 
                        || (_file.Equals(value) != true)))
            {
                this._file = value;
                this.OnPropertyChanged("File", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool FileSpecified
    {
        get
        {
            return this._fileSpecified;
        }
        set
        {
            this._fileSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether File should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFile()
    {
        return File != null && File.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ProvenanceType : ExtensionBaseType
{
    
    #region Private fields
    private List<FileType> _replacedFile;
    
    private bool _replacedFileSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("ReplacedFile", Order=0)]
    public virtual List<FileType> ReplacedFile
    {
        get
        {
            return this._replacedFile;
        }
        set
        {
            if ((this._replacedFile == value))
            {
                return;
            }
            if (((this._replacedFile == null) 
                        || (_replacedFile.Equals(value) != true)))
            {
                this._replacedFile = value;
                this.OnPropertyChanged("ReplacedFile", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ReplacedFileSpecified
    {
        get
        {
            return this._replacedFileSpecified;
        }
        set
        {
            this._replacedFileSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ReplacedFile should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReplacedFile()
    {
        return ReplacedFile != null && ReplacedFile.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides information about an Applications Programming Interface (API)
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InterfaceType : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _identifer;
    
    private string_Stype _interfaceName;
    
    private string_Stype _description;
    
    private string_Stype _uRL;
    
    private string_Stype _version;
    
    private InterfaceTypeFields _fields;
    
    private InterfaceTypeDocumentation _documentation;
    
    private bool _identiferSpecified;
    
    private bool _interfaceNameSpecified;
    
    private bool _descriptionSpecified;
    
    private bool _uRLSpecified;
    
    private bool _versionSpecified;
    
    private bool _fieldsSpecified;
    
    private bool _documentationSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Identifer
    {
        get
        {
            return this._identifer;
        }
        set
        {
            if ((this._identifer == value))
            {
                return;
            }
            if (((this._identifer == null) 
                        || (_identifer.Equals(value) != true)))
            {
                this._identifer = value;
                this.OnPropertyChanged("Identifer", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype InterfaceName
    {
        get
        {
            return this._interfaceName;
        }
        set
        {
            if ((this._interfaceName == value))
            {
                return;
            }
            if (((this._interfaceName == null) 
                        || (_interfaceName.Equals(value) != true)))
            {
                this._interfaceName = value;
                this.OnPropertyChanged("InterfaceName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype Description
    {
        get
        {
            return this._description;
        }
        set
        {
            if ((this._description == value))
            {
                return;
            }
            if (((this._description == null) 
                        || (_description.Equals(value) != true)))
            {
                this._description = value;
                this.OnPropertyChanged("Description", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual string_Stype URL
    {
        get
        {
            return this._uRL;
        }
        set
        {
            if ((this._uRL == value))
            {
                return;
            }
            if (((this._uRL == null) 
                        || (_uRL.Equals(value) != true)))
            {
                this._uRL = value;
                this.OnPropertyChanged("URL", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual string_Stype Version
    {
        get
        {
            return this._version;
        }
        set
        {
            if ((this._version == value))
            {
                return;
            }
            if (((this._version == null) 
                        || (_version.Equals(value) != true)))
            {
                this._version = value;
                this.OnPropertyChanged("Version", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual InterfaceTypeFields Fields
    {
        get
        {
            return this._fields;
        }
        set
        {
            if ((this._fields == value))
            {
                return;
            }
            if (((this._fields == null) 
                        || (_fields.Equals(value) != true)))
            {
                this._fields = value;
                this.OnPropertyChanged("Fields", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual InterfaceTypeDocumentation Documentation
    {
        get
        {
            return this._documentation;
        }
        set
        {
            if ((this._documentation == value))
            {
                return;
            }
            if (((this._documentation == null) 
                        || (_documentation.Equals(value) != true)))
            {
                this._documentation = value;
                this.OnPropertyChanged("Documentation", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool IdentiferSpecified
    {
        get
        {
            return this._identiferSpecified;
        }
        set
        {
            this._identiferSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool InterfaceNameSpecified
    {
        get
        {
            return this._interfaceNameSpecified;
        }
        set
        {
            this._interfaceNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return this._descriptionSpecified;
        }
        set
        {
            this._descriptionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool URLSpecified
    {
        get
        {
            return this._uRLSpecified;
        }
        set
        {
            this._uRLSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool VersionSpecified
    {
        get
        {
            return this._versionSpecified;
        }
        set
        {
            this._versionSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool FieldsSpecified
    {
        get
        {
            return this._fieldsSpecified;
        }
        set
        {
            this._fieldsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool DocumentationSpecified
    {
        get
        {
            return this._documentationSpecified;
        }
        set
        {
            this._documentationSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Identifer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIdentifer()
    {
        return (_identifer != null);
    }
    
    /// <summary>
    /// Test whether InterfaceName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeInterfaceName()
    {
        return (_interfaceName != null);
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (_description != null);
    }
    
    /// <summary>
    /// Test whether URL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeURL()
    {
        return (_uRL != null);
    }
    
    /// <summary>
    /// Test whether Version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeVersion()
    {
        return (_version != null);
    }
    
    /// <summary>
    /// Test whether Fields should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFields()
    {
        return (_fields != null);
    }
    
    /// <summary>
    /// Test whether Documentation should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDocumentation()
    {
        return (_documentation != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides information about an Applications Programming Interface (API)
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InterfaceTypeFields : BaseType
{
    
    #region Private fields
    private List<InterfaceTypeFieldsField> _field;
    
    private bool _fieldSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Field", Order=0)]
    public virtual List<InterfaceTypeFieldsField> Field
    {
        get
        {
            return this._field;
        }
        set
        {
            if ((this._field == value))
            {
                return;
            }
            if (((this._field == null) 
                        || (_field.Equals(value) != true)))
            {
                this._field = value;
                this.OnPropertyChanged("Field", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool FieldSpecified
    {
        get
        {
            return this._fieldSpecified;
        }
        set
        {
            this._fieldSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Field should be serialized
    /// </summary>
    public virtual bool ShouldSerializeField()
    {
        return Field != null && Field.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InterfaceTypeFieldsField : ExtensionBaseType
{
    
    #region Private fields
    private string_Stype _getter;
    
    private string_Stype _setter;
    
    private string_Stype _action;
    
    private bool _getterSpecified;
    
    private bool _setterSpecified;
    
    private bool _actionSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual string_Stype Getter
    {
        get
        {
            return this._getter;
        }
        set
        {
            if ((this._getter == value))
            {
                return;
            }
            if (((this._getter == null) 
                        || (_getter.Equals(value) != true)))
            {
                this._getter = value;
                this.OnPropertyChanged("Getter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual string_Stype Setter
    {
        get
        {
            return this._setter;
        }
        set
        {
            if ((this._setter == value))
            {
                return;
            }
            if (((this._setter == null) 
                        || (_setter.Equals(value) != true)))
            {
                this._setter = value;
                this.OnPropertyChanged("Setter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual string_Stype Action
    {
        get
        {
            return this._action;
        }
        set
        {
            if ((this._action == value))
            {
                return;
            }
            if (((this._action == null) 
                        || (_action.Equals(value) != true)))
            {
                this._action = value;
                this.OnPropertyChanged("Action", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool GetterSpecified
    {
        get
        {
            return this._getterSpecified;
        }
        set
        {
            this._getterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SetterSpecified
    {
        get
        {
            return this._setterSpecified;
        }
        set
        {
            this._setterSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ActionSpecified
    {
        get
        {
            return this._actionSpecified;
        }
        set
        {
            this._actionSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Getter should be serialized
    /// </summary>
    public virtual bool ShouldSerializeGetter()
    {
        return (_getter != null);
    }
    
    /// <summary>
    /// Test whether Setter should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSetter()
    {
        return (_setter != null);
    }
    
    /// <summary>
    /// Test whether Action should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAction()
    {
        return (_action != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides information about an Applications Programming Interface (API)
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class InterfaceTypeDocumentation : BaseType
{
    
    #region Private fields
    private List<FileType> _file;
    
    private bool _fileSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("File", Order=0)]
    public virtual List<FileType> File
    {
        get
        {
            return this._file;
        }
        set
        {
            if ((this._file == value))
            {
                return;
            }
            if (((this._file == null) 
                        || (_file.Equals(value) != true)))
            {
                this._file = value;
                this.OnPropertyChanged("File", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool FileSpecified
    {
        get
        {
            return this._fileSpecified;
        }
        set
        {
            this._fileSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether File should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFile()
    {
        return File != null && File.Count > 0;
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides a structure to record information about a registry.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RegistrySummaryType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType[] _items;
    
    private ItemsChoiceType2[] _itemsElementName;
    
    private bool _itemsSpecified;
    
    private bool _itemsElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("Contact", typeof(ContactType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("Manual", typeof(FileType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ReferenceStandardIdentifier", typeof(string_Stype), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("RegistryInterface", typeof(InterfaceType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("RegistryName", typeof(string_Stype), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("RegistryPurpose", typeof(FileType), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("ServiceLevelAgreement", typeof(FileType), Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public virtual BaseType[] Items
    {
        get
        {
            return this._items;
        }
        set
        {
            if ((this._items == value))
            {
                return;
            }
            if (((this._items == null) 
                        || (_items.Equals(value) != true)))
            {
                this._items = value;
                this.OnPropertyChanged("Items", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemsChoiceType2[] ItemsElementName
    {
        get
        {
            return this._itemsElementName;
        }
        set
        {
            if ((this._itemsElementName == value))
            {
                return;
            }
            if (((this._itemsElementName == null) 
                        || (_itemsElementName.Equals(value) != true)))
            {
                this._itemsElementName = value;
                this.OnPropertyChanged("ItemsElementName", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemsSpecified
    {
        get
        {
            return this._itemsSpecified;
        }
        set
        {
            this._itemsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemsElementNameSpecified
    {
        get
        {
            return this._itemsElementNameSpecified;
        }
        set
        {
            this._itemsElementNameSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemsChoiceType2
{
    
    Contact,
    
    Manual,
    
    ReferenceStandardIdentifier,
    
    RegistryInterface,
    
    RegistryName,
    
    RegistryPurpose,
    
    ServiceLevelAgreement,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// This type provides data about the current and original registries that host the template or package, and also provides information about the status of the template/package within the current registry.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class RegistryType : ExtensionBaseType
{
    
    #region Private fields
    private RegistrySummaryType _originalRegistry;
    
    private RegistrySummaryType _currentRegistry;
    
    private RegisteredItemType _registrationStatus;
    
    private bool _originalRegistrySpecified;
    
    private bool _currentRegistrySpecified;
    
    private bool _registrationStatusSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual RegistrySummaryType OriginalRegistry
    {
        get
        {
            return this._originalRegistry;
        }
        set
        {
            if ((this._originalRegistry == value))
            {
                return;
            }
            if (((this._originalRegistry == null) 
                        || (_originalRegistry.Equals(value) != true)))
            {
                this._originalRegistry = value;
                this.OnPropertyChanged("OriginalRegistry", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual RegistrySummaryType CurrentRegistry
    {
        get
        {
            return this._currentRegistry;
        }
        set
        {
            if ((this._currentRegistry == value))
            {
                return;
            }
            if (((this._currentRegistry == null) 
                        || (_currentRegistry.Equals(value) != true)))
            {
                this._currentRegistry = value;
                this.OnPropertyChanged("CurrentRegistry", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual RegisteredItemType RegistrationStatus
    {
        get
        {
            return this._registrationStatus;
        }
        set
        {
            if ((this._registrationStatus == value))
            {
                return;
            }
            if (((this._registrationStatus == null) 
                        || (_registrationStatus.Equals(value) != true)))
            {
                this._registrationStatus = value;
                this.OnPropertyChanged("RegistrationStatus", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool OriginalRegistrySpecified
    {
        get
        {
            return this._originalRegistrySpecified;
        }
        set
        {
            this._originalRegistrySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool CurrentRegistrySpecified
    {
        get
        {
            return this._currentRegistrySpecified;
        }
        set
        {
            this._currentRegistrySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool RegistrationStatusSpecified
    {
        get
        {
            return this._registrationStatusSpecified;
        }
        set
        {
            this._registrationStatusSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether OriginalRegistry should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOriginalRegistry()
    {
        return (_originalRegistry != null);
    }
    
    /// <summary>
    /// Test whether CurrentRegistry should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCurrentRegistry()
    {
        return (_currentRegistry != null);
    }
    
    /// <summary>
    /// Test whether RegistrationStatus should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRegistrationStatus()
    {
        return (_registrationStatus != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// NEW:
/// SDC datatypes in Simple (S) format, based mostly on W3C specifications.  Uses baseAttributes and Extension capability to enhance the list of Data Types.        **CHECK for ERRORS and completeness**
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypesDateTime_SType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeItemElementName;
    
    private bool _shouldSerializeItem;
    
    private object _item;
    
    private ItemChoiceType3 _itemElementName;
    
    private bool _itemSpecified;
    
    private bool _itemElementNameSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("List000", typeof(object), Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("date", typeof(date_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTime", typeof(dateTimeStamp_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("dateTimeStamp", typeof(dateTimeStamp_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("duration", typeof(duration_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gDay", typeof(gDay_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonth", typeof(gMonth_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonthDay", typeof(gMonthDay_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYear", typeof(gYear_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYearMonth", typeof(gMonth_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public virtual object Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            _shouldSerializeItem = true;
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public virtual ItemChoiceType3 ItemElementName
    {
        get
        {
            return this._itemElementName;
        }
        set
        {
            if ((_itemElementName.Equals(value) != true))
            {
                this._itemElementName = value;
                this.OnPropertyChanged("ItemElementName", value);
            }
            _shouldSerializeItemElementName = true;
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ItemElementNameSpecified
    {
        get
        {
            return this._itemElementNameSpecified;
        }
        set
        {
            this._itemElementNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        if (_shouldSerializeItem)
        {
            return true;
        }
        return (_item != default(object));
    }
    
    /// <summary>
    /// Test whether ItemElementName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItemElementName()
    {
        if (_shouldSerializeItemElementName)
        {
            return true;
        }
        return (_itemElementName != default(ItemChoiceType3));
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016", IncludeInSchema=false)]
public enum ItemChoiceType3
{
    
    List000,
    
    date,
    
    dateTime,
    
    dateTimeStamp,
    
    duration,
    
    gDay,
    
    gMonth,
    
    gMonthDay,
    
    gYear,
    
    gYearMonth,
    
    time,
    
    yearMonthDuration,
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// NEW:
/// SDC datatypes for Data Entry (DE), based mostly on W3C specifications. Uses baseAttributes  and Extension capability to enhance the list of Data Types. Includes additonal metadata to specify data input restrictions for data entry forms, and to aid in validation of IHE RFD SubmitForm responses in XML instance documents.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypesDateTime_DEType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("dateTime", typeof(dateTimeStamp_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("duration", typeof(duration_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gMonthDay", typeof(gMonthDay_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYear", typeof(gYear_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("gYearMonth", typeof(gMonth_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_DEtype), IsNullable=true, Order=0)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// NEW:
/// SDC datatypes in Simple (S) format, based mostly on W3C specifications.  Uses baseAttributes and Extension capability to enhance the list of Data Types.        **CHECK for ERRORS and completeness**
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypesNumeric_SType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("byte", typeof(byte_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("decimal", typeof(decimal_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("double", typeof(double_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(float_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("int", typeof(int_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(integer_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("long", typeof(long_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("negativeInteger", typeof(negativeInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonNegativeInteger", typeof(nonNegativeInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonPositiveInteger", typeof(nonPositiveInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("positiveInteger", typeof(positiveInteger_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("short", typeof(short_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedByte", typeof(unsignedByte_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedInt", typeof(unsignedInt_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedLong", typeof(unsignedLong_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedShort", typeof(unsignedShort_Stype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_Stype), IsNullable=true, Order=0)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// NEW:
/// SDC datatypes for Data Entry (DE), based mostly on W3C specifications. Uses baseAttributes  and Extension capability to enhance the list of Data Types. Includes additonal metadata to specify data input restrictions for data entry forms, and to aid in validation of IHE RFD SubmitForm responses in XML instance documents.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class DataTypesNumeric_DEType : ExtensionBaseType
{
    
    #region Private fields
    private BaseType _item;
    
    private bool _itemSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute("byte", typeof(byte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("decimal", typeof(decimal_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("double", typeof(double_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(float_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("hexBinary", typeof(hexBinary_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("int", typeof(int_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(integer_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("long", typeof(long_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("negativeInteger", typeof(negativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonNegativeInteger", typeof(nonNegativeInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("nonPositiveInteger", typeof(nonPositiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("positiveInteger", typeof(positiveInteger_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("short", typeof(short_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("time", typeof(time_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedByte", typeof(unsignedByte_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedInt", typeof(unsignedInt_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedLong", typeof(unsignedLong_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("unsignedShort", typeof(unsignedShort_DEtype), IsNullable=true, Order=0)]
    [System.Xml.Serialization.XmlElementAttribute("yearMonthDuration", typeof(yearMonthDuration_DEtype), IsNullable=true, Order=0)]
    public virtual BaseType Item
    {
        get
        {
            return this._item;
        }
        set
        {
            if ((this._item == value))
            {
                return;
            }
            if (((this._item == null) 
                        || (_item.Equals(value) != true)))
            {
                this._item = value;
                this.OnPropertyChanged("Item", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ItemSpecified
    {
        get
        {
            return this._itemSpecified;
        }
        set
        {
            this._itemSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// A structure to describe a single change in an XML document
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class ChangeType : ExtensionBaseType
{
    
    #region Private fields
    private TargetItemIDType _targetItemID;
    
    private TargetItemNameType _targetItemName;
    
    private TargetItemXPathType _targetItemXPath;
    
    private DataTypes_SType _newValue;
    
    private bool _targetItemIDSpecified;
    
    private bool _targetItemNameSpecified;
    
    private bool _targetItemXPathSpecified;
    
    private bool _newValueSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual TargetItemIDType TargetItemID
    {
        get
        {
            return this._targetItemID;
        }
        set
        {
            if ((this._targetItemID == value))
            {
                return;
            }
            if (((this._targetItemID == null) 
                        || (_targetItemID.Equals(value) != true)))
            {
                this._targetItemID = value;
                this.OnPropertyChanged("TargetItemID", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual TargetItemNameType TargetItemName
    {
        get
        {
            return this._targetItemName;
        }
        set
        {
            if ((this._targetItemName == value))
            {
                return;
            }
            if (((this._targetItemName == null) 
                        || (_targetItemName.Equals(value) != true)))
            {
                this._targetItemName = value;
                this.OnPropertyChanged("TargetItemName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual TargetItemXPathType TargetItemXPath
    {
        get
        {
            return this._targetItemXPath;
        }
        set
        {
            if ((this._targetItemXPath == value))
            {
                return;
            }
            if (((this._targetItemXPath == null) 
                        || (_targetItemXPath.Equals(value) != true)))
            {
                this._targetItemXPath = value;
                this.OnPropertyChanged("TargetItemXPath", value);
            }
        }
    }
    
    /// <summary>
    /// The new value that the targeted item's content is set to.
    /// </summary>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual DataTypes_SType NewValue
    {
        get
        {
            return this._newValue;
        }
        set
        {
            if ((this._newValue == value))
            {
                return;
            }
            if (((this._newValue == null) 
                        || (_newValue.Equals(value) != true)))
            {
                this._newValue = value;
                this.OnPropertyChanged("NewValue", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool TargetItemIDSpecified
    {
        get
        {
            return this._targetItemIDSpecified;
        }
        set
        {
            this._targetItemIDSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TargetItemNameSpecified
    {
        get
        {
            return this._targetItemNameSpecified;
        }
        set
        {
            this._targetItemNameSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool TargetItemXPathSpecified
    {
        get
        {
            return this._targetItemXPathSpecified;
        }
        set
        {
            this._targetItemXPathSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool NewValueSpecified
    {
        get
        {
            return this._newValueSpecified;
        }
        set
        {
            this._newValueSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether TargetItemID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTargetItemID()
    {
        return (_targetItemID != null);
    }
    
    /// <summary>
    /// Test whether TargetItemName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTargetItemName()
    {
        return (_targetItemName != null);
    }
    
    /// <summary>
    /// Test whether TargetItemXPath should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTargetItemXPath()
    {
        return (_targetItemXPath != null);
    }
    
    /// <summary>
    /// Test whether NewValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeNewValue()
    {
        return (_newValue != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(gYearMonth_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gYearMonth_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// gYearMonth_Stype class constructor
    /// </summary>
    public gYearMonth_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYearMonth")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class gYearMonth_DEtype : gYearMonth_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _minInclusive;
    
    private string _maxInclusive;
    
    private string _minExclusive;
    
    private string _maxExclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _minInclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxExclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// gYearMonth_DEtype class constructor
    /// </summary>
    public gYearMonth_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYearMonth")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYearMonth")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYearMonth")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="gYearMonth")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.Xml.Serialization.XmlIncludeAttribute(typeof(dayTimeDuration_DEtype))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dayTimeDuration_Stype : BaseType
{
    
    #region Private fields
    private bool _shouldSerializequantEnum;
    
    private string _val;
    
    private dtQuantEnum _quantEnum;
    
    private bool _valSpecified;
    
    private bool _quantEnumSpecified;
    #endregion
    
    /// <summary>
    /// dayTimeDuration_Stype class constructor
    /// </summary>
    public dayTimeDuration_Stype()
    {
        this._quantEnum = dtQuantEnum.EQ;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(dtQuantEnum.EQ)]
    public virtual dtQuantEnum quantEnum
    {
        get
        {
            return this._quantEnum;
        }
        set
        {
            if ((_quantEnum.Equals(value) != true))
            {
                this._quantEnum = value;
                this.OnPropertyChanged("quantEnum", value);
            }
            _shouldSerializequantEnum = true;
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool quantEnumSpecified
    {
        get
        {
            return this._quantEnumSpecified;
        }
        set
        {
            this._quantEnumSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether quantEnum should be serialized
    /// </summary>
    public virtual bool ShouldSerializequantEnum()
    {
        if (_shouldSerializequantEnum)
        {
            return true;
        }
        return (_quantEnum != default(dtQuantEnum));
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public partial class dayTimeDuration_DEtype : dayTimeDuration_Stype
{
    
    #region Private fields
    private bool _shouldSerializeallowAPPROX;
    
    private bool _shouldSerializeallowLTE;
    
    private bool _shouldSerializeallowLT;
    
    private bool _shouldSerializeallowGTE;
    
    private bool _shouldSerializeallowGT;
    
    private string _maxExclusive;
    
    private string _minExclusive;
    
    private string _maxInclusive;
    
    private string _minInclusive;
    
    private string _mask;
    
    private bool _allowGT;
    
    private bool _allowGTE;
    
    private bool _allowLT;
    
    private bool _allowLTE;
    
    private bool _allowAPPROX;
    
    private bool _maxExclusiveSpecified;
    
    private bool _minExclusiveSpecified;
    
    private bool _maxInclusiveSpecified;
    
    private bool _minInclusiveSpecified;
    
    private bool _maskSpecified;
    
    private bool _allowGTSpecified;
    
    private bool _allowGTESpecified;
    
    private bool _allowLTSpecified;
    
    private bool _allowLTESpecified;
    
    private bool _allowAPPROXSpecified;
    #endregion
    
    /// <summary>
    /// dayTimeDuration_DEtype class constructor
    /// </summary>
    public dayTimeDuration_DEtype()
    {
        this._allowGT = false;
        this._allowGTE = false;
        this._allowLT = false;
        this._allowLTE = false;
        this._allowAPPROX = false;
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxExclusive
    {
        get
        {
            return this._maxExclusive;
        }
        set
        {
            if ((this._maxExclusive == value))
            {
                return;
            }
            if (((this._maxExclusive == null) 
                        || (_maxExclusive.Equals(value) != true)))
            {
                this._maxExclusive = value;
                this.OnPropertyChanged("maxExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minExclusive
    {
        get
        {
            return this._minExclusive;
        }
        set
        {
            if ((this._minExclusive == value))
            {
                return;
            }
            if (((this._minExclusive == null) 
                        || (_minExclusive.Equals(value) != true)))
            {
                this._minExclusive = value;
                this.OnPropertyChanged("minExclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string maxInclusive
    {
        get
        {
            return this._maxInclusive;
        }
        set
        {
            if ((this._maxInclusive == value))
            {
                return;
            }
            if (((this._maxInclusive == null) 
                        || (_maxInclusive.Equals(value) != true)))
            {
                this._maxInclusive = value;
                this.OnPropertyChanged("maxInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="duration")]
    public virtual string minInclusive
    {
        get
        {
            return this._minInclusive;
        }
        set
        {
            if ((this._minInclusive == value))
            {
                return;
            }
            if (((this._minInclusive == null) 
                        || (_minInclusive.Equals(value) != true)))
            {
                this._minInclusive = value;
                this.OnPropertyChanged("minInclusive", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string mask
    {
        get
        {
            return this._mask;
        }
        set
        {
            if ((this._mask == value))
            {
                return;
            }
            if (((this._mask == null) 
                        || (_mask.Equals(value) != true)))
            {
                this._mask = value;
                this.OnPropertyChanged("mask", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGT
    {
        get
        {
            return this._allowGT;
        }
        set
        {
            if ((_allowGT.Equals(value) != true))
            {
                this._allowGT = value;
                this.OnPropertyChanged("allowGT", value);
            }
            _shouldSerializeallowGT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowGTE
    {
        get
        {
            return this._allowGTE;
        }
        set
        {
            if ((_allowGTE.Equals(value) != true))
            {
                this._allowGTE = value;
                this.OnPropertyChanged("allowGTE", value);
            }
            _shouldSerializeallowGTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLT
    {
        get
        {
            return this._allowLT;
        }
        set
        {
            if ((_allowLT.Equals(value) != true))
            {
                this._allowLT = value;
                this.OnPropertyChanged("allowLT", value);
            }
            _shouldSerializeallowLT = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowLTE
    {
        get
        {
            return this._allowLTE;
        }
        set
        {
            if ((_allowLTE.Equals(value) != true))
            {
                this._allowLTE = value;
                this.OnPropertyChanged("allowLTE", value);
            }
            _shouldSerializeallowLTE = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool allowAPPROX
    {
        get
        {
            return this._allowAPPROX;
        }
        set
        {
            if ((_allowAPPROX.Equals(value) != true))
            {
                this._allowAPPROX = value;
                this.OnPropertyChanged("allowAPPROX", value);
            }
            _shouldSerializeallowAPPROX = true;
        }
    }
    
    [XmlIgnore()]
    public bool maxExclusiveSpecified
    {
        get
        {
            return this._maxExclusiveSpecified;
        }
        set
        {
            this._maxExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minExclusiveSpecified
    {
        get
        {
            return this._minExclusiveSpecified;
        }
        set
        {
            this._minExclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maxInclusiveSpecified
    {
        get
        {
            return this._maxInclusiveSpecified;
        }
        set
        {
            this._maxInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool minInclusiveSpecified
    {
        get
        {
            return this._minInclusiveSpecified;
        }
        set
        {
            this._minInclusiveSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool maskSpecified
    {
        get
        {
            return this._maskSpecified;
        }
        set
        {
            this._maskSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTSpecified
    {
        get
        {
            return this._allowGTSpecified;
        }
        set
        {
            this._allowGTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowGTESpecified
    {
        get
        {
            return this._allowGTESpecified;
        }
        set
        {
            this._allowGTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTSpecified
    {
        get
        {
            return this._allowLTSpecified;
        }
        set
        {
            this._allowLTSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowLTESpecified
    {
        get
        {
            return this._allowLTESpecified;
        }
        set
        {
            this._allowLTESpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool allowAPPROXSpecified
    {
        get
        {
            return this._allowAPPROXSpecified;
        }
        set
        {
            this._allowAPPROXSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether allowGT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGT()
    {
        if (_shouldSerializeallowGT)
        {
            return true;
        }
        return (_allowGT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowGTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowGTE()
    {
        if (_shouldSerializeallowGTE)
        {
            return true;
        }
        return (_allowGTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLT should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLT()
    {
        if (_shouldSerializeallowLT)
        {
            return true;
        }
        return (_allowLT != default(bool));
    }
    
    /// <summary>
    /// Test whether allowLTE should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowLTE()
    {
        if (_shouldSerializeallowLTE)
        {
            return true;
        }
        return (_allowLTE != default(bool));
    }
    
    /// <summary>
    /// Test whether allowAPPROX should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowAPPROX()
    {
        if (_shouldSerializeallowAPPROX)
        {
            return true;
        }
        return (_allowAPPROX != default(bool));
    }
    
    /// <summary>
    /// Test whether maxExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxExclusive()
    {
        return !string.IsNullOrEmpty(maxExclusive);
    }
    
    /// <summary>
    /// Test whether minExclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminExclusive()
    {
        return !string.IsNullOrEmpty(minExclusive);
    }
    
    /// <summary>
    /// Test whether maxInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializemaxInclusive()
    {
        return !string.IsNullOrEmpty(maxInclusive);
    }
    
    /// <summary>
    /// Test whether minInclusive should be serialized
    /// </summary>
    public virtual bool ShouldSerializeminInclusive()
    {
        return !string.IsNullOrEmpty(minInclusive);
    }
    
    /// <summary>
    /// Test whether mask should be serialized
    /// </summary>
    public virtual bool ShouldSerializemask()
    {
        return !string.IsNullOrEmpty(mask);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

/// <summary>
/// Contains information about a registered package, including a description of the package contents and purpose (PackageDescription), information about the registry that contains the package XML (RegistryData), and information about the package file characteristics (TemplateFile).
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignature : ExtensionBaseType
{
    
    #region Private fields
    private TemplateAdminTypeDigitalSignaturePackageSignature _packageSignature;
    
    private TemplateAdminTypeDigitalSignatureSignatureProperties _signatureProperties;
    
    private bool _packageSignatureSpecified;
    
    private bool _signaturePropertiesSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual TemplateAdminTypeDigitalSignaturePackageSignature PackageSignature
    {
        get
        {
            return this._packageSignature;
        }
        set
        {
            if ((this._packageSignature == value))
            {
                return;
            }
            if (((this._packageSignature == null) 
                        || (_packageSignature.Equals(value) != true)))
            {
                this._packageSignature = value;
                this.OnPropertyChanged("PackageSignature", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual TemplateAdminTypeDigitalSignatureSignatureProperties SignatureProperties
    {
        get
        {
            return this._signatureProperties;
        }
        set
        {
            if ((this._signatureProperties == value))
            {
                return;
            }
            if (((this._signatureProperties == null) 
                        || (_signatureProperties.Equals(value) != true)))
            {
                this._signatureProperties = value;
                this.OnPropertyChanged("SignatureProperties", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool PackageSignatureSpecified
    {
        get
        {
            return this._packageSignatureSpecified;
        }
        set
        {
            this._packageSignatureSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SignaturePropertiesSpecified
    {
        get
        {
            return this._signaturePropertiesSpecified;
        }
        set
        {
            this._signaturePropertiesSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PackageSignature should be serialized
    /// </summary>
    public virtual bool ShouldSerializePackageSignature()
    {
        return (_packageSignature != null);
    }
    
    /// <summary>
    /// Test whether SignatureProperties should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureProperties()
    {
        return (_signatureProperties != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignaturePackageSignature : EntityBase<TemplateAdminTypeDigitalSignaturePackageSignature>
{
    
    #region Private fields
    private byte[] _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignatureProperties : ExtensionBaseType
{
    
    #region Private fields
    private ContactType _signer;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate _signerPublicKeyCertificate;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason _signatureReason;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp _signatureDateTimeStamp;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority _x_CertificateAuthority;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey _x_SignerPublicKey;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm _x_SignatureAlgorithm;
    
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesImage _image;
    
    private bool _signerSpecified;
    
    private bool _signerPublicKeyCertificateSpecified;
    
    private bool _signatureReasonSpecified;
    
    private bool _signatureDateTimeStampSpecified;
    
    private bool _x_CertificateAuthoritySpecified;
    
    private bool _x_SignerPublicKeySpecified;
    
    private bool _x_SignatureAlgorithmSpecified;
    
    private bool _imageSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ContactType Signer
    {
        get
        {
            return this._signer;
        }
        set
        {
            if ((this._signer == value))
            {
                return;
            }
            if (((this._signer == null) 
                        || (_signer.Equals(value) != true)))
            {
                this._signer = value;
                this.OnPropertyChanged("Signer", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate SignerPublicKeyCertificate
    {
        get
        {
            return this._signerPublicKeyCertificate;
        }
        set
        {
            if ((this._signerPublicKeyCertificate == value))
            {
                return;
            }
            if (((this._signerPublicKeyCertificate == null) 
                        || (_signerPublicKeyCertificate.Equals(value) != true)))
            {
                this._signerPublicKeyCertificate = value;
                this.OnPropertyChanged("SignerPublicKeyCertificate", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason SignatureReason
    {
        get
        {
            return this._signatureReason;
        }
        set
        {
            if ((this._signatureReason == value))
            {
                return;
            }
            if (((this._signatureReason == null) 
                        || (_signatureReason.Equals(value) != true)))
            {
                this._signatureReason = value;
                this.OnPropertyChanged("SignatureReason", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp SignatureDateTimeStamp
    {
        get
        {
            return this._signatureDateTimeStamp;
        }
        set
        {
            if ((this._signatureDateTimeStamp == value))
            {
                return;
            }
            if (((this._signatureDateTimeStamp == null) 
                        || (_signatureDateTimeStamp.Equals(value) != true)))
            {
                this._signatureDateTimeStamp = value;
                this.OnPropertyChanged("SignatureDateTimeStamp", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority X_CertificateAuthority
    {
        get
        {
            return this._x_CertificateAuthority;
        }
        set
        {
            if ((this._x_CertificateAuthority == value))
            {
                return;
            }
            if (((this._x_CertificateAuthority == null) 
                        || (_x_CertificateAuthority.Equals(value) != true)))
            {
                this._x_CertificateAuthority = value;
                this.OnPropertyChanged("X_CertificateAuthority", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey X_SignerPublicKey
    {
        get
        {
            return this._x_SignerPublicKey;
        }
        set
        {
            if ((this._x_SignerPublicKey == value))
            {
                return;
            }
            if (((this._x_SignerPublicKey == null) 
                        || (_x_SignerPublicKey.Equals(value) != true)))
            {
                this._x_SignerPublicKey = value;
                this.OnPropertyChanged("X_SignerPublicKey", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm X_SignatureAlgorithm
    {
        get
        {
            return this._x_SignatureAlgorithm;
        }
        set
        {
            if ((this._x_SignatureAlgorithm == value))
            {
                return;
            }
            if (((this._x_SignatureAlgorithm == null) 
                        || (_x_SignatureAlgorithm.Equals(value) != true)))
            {
                this._x_SignatureAlgorithm = value;
                this.OnPropertyChanged("X_SignatureAlgorithm", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute(Order=7)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesImage Image
    {
        get
        {
            return this._image;
        }
        set
        {
            if ((this._image == value))
            {
                return;
            }
            if (((this._image == null) 
                        || (_image.Equals(value) != true)))
            {
                this._image = value;
                this.OnPropertyChanged("Image", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool SignerSpecified
    {
        get
        {
            return this._signerSpecified;
        }
        set
        {
            this._signerSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SignerPublicKeyCertificateSpecified
    {
        get
        {
            return this._signerPublicKeyCertificateSpecified;
        }
        set
        {
            this._signerPublicKeyCertificateSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SignatureReasonSpecified
    {
        get
        {
            return this._signatureReasonSpecified;
        }
        set
        {
            this._signatureReasonSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool SignatureDateTimeStampSpecified
    {
        get
        {
            return this._signatureDateTimeStampSpecified;
        }
        set
        {
            this._signatureDateTimeStampSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_CertificateAuthoritySpecified
    {
        get
        {
            return this._x_CertificateAuthoritySpecified;
        }
        set
        {
            this._x_CertificateAuthoritySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_SignerPublicKeySpecified
    {
        get
        {
            return this._x_SignerPublicKeySpecified;
        }
        set
        {
            this._x_SignerPublicKeySpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool X_SignatureAlgorithmSpecified
    {
        get
        {
            return this._x_SignatureAlgorithmSpecified;
        }
        set
        {
            this._x_SignatureAlgorithmSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ImageSpecified
    {
        get
        {
            return this._imageSpecified;
        }
        set
        {
            this._imageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Signer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSigner()
    {
        return (_signer != null);
    }
    
    /// <summary>
    /// Test whether SignerPublicKeyCertificate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignerPublicKeyCertificate()
    {
        return (_signerPublicKeyCertificate != null);
    }
    
    /// <summary>
    /// Test whether SignatureReason should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureReason()
    {
        return (_signatureReason != null);
    }
    
    /// <summary>
    /// Test whether SignatureDateTimeStamp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureDateTimeStamp()
    {
        return (_signatureDateTimeStamp != null);
    }
    
    /// <summary>
    /// Test whether X_CertificateAuthority should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_CertificateAuthority()
    {
        return (_x_CertificateAuthority != null);
    }
    
    /// <summary>
    /// Test whether X_SignerPublicKey should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_SignerPublicKey()
    {
        return (_x_SignerPublicKey != null);
    }
    
    /// <summary>
    /// Test whether X_SignatureAlgorithm should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_SignatureAlgorithm()
    {
        return (_x_SignatureAlgorithm != null);
    }
    
    /// <summary>
    /// Test whether Image should be serialized
    /// </summary>
    public virtual bool ShouldSerializeImage()
    {
        return (_image != null);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate>
{
    
    #region Private fields
    private byte[] _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason>
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp>
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority>
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey>
{
    
    #region Private fields
    private byte[] _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm>
{
    
    #region Private fields
    private string _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
public partial class TemplateAdminTypeDigitalSignatureSignaturePropertiesImage : EntityBase<TemplateAdminTypeDigitalSignatureSignaturePropertiesImage>
{
    
    #region Private fields
    private byte[] _val;
    
    private bool _valSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="base64Binary")]
    public virtual byte[] val
    {
        get
        {
            return this._val;
        }
        set
        {
            if ((this._val == value))
            {
                return;
            }
            if (((this._val == null) 
                        || (_val.Equals(value) != true)))
            {
                this._val = value;
                this.OnPropertyChanged("val", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return this._valSpecified;
        }
        set
        {
            this._valSpecified = value;
        }
    }
}
}
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Reflection;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Xml;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="urn:ihe:qrph:sdc:2016", IsNullable=false)]
public partial class PredActionType2 : PredGuardType
{
    
    #region Private fields
    private ActionsType _actions;
    
    private List<PredActionType> _else;
    
    private bool _actionsSpecified;
    
    private bool _elseSpecified;
    #endregion
    
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public virtual ActionsType Actions
    {
        get
        {
            return this._actions;
        }
        set
        {
            if ((this._actions == value))
            {
                return;
            }
            if (((this._actions == null) 
                        || (_actions.Equals(value) != true)))
            {
                this._actions = value;
                this.OnPropertyChanged("Actions", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlElementAttribute("Else", Order=1)]
    public virtual List<PredActionType> Else
    {
        get
        {
            return this._else;
        }
        set
        {
            if ((this._else == value))
            {
                return;
            }
            if (((this._else == null) 
                        || (_else.Equals(value) != true)))
            {
                this._else = value;
                this.OnPropertyChanged("Else", value);
            }
        }
    }
    
    [XmlIgnore()]
    public bool ActionsSpecified
    {
        get
        {
            return this._actionsSpecified;
        }
        set
        {
            this._actionsSpecified = value;
        }
    }
    
    [XmlIgnore()]
    public bool ElseSpecified
    {
        get
        {
            return this._elseSpecified;
        }
        set
        {
            this._elseSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Else should be serialized
    /// </summary>
    public virtual bool ShouldSerializeElse()
    {
        return Else != null && Else.Count > 0;
    }
    
    /// <summary>
    /// Test whether Actions should be serialized
    /// </summary>
    public virtual bool ShouldSerializeActions()
    {
        return (_actions != null);
    }
}
}
