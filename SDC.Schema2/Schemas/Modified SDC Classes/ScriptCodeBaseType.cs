// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.1.87.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema2
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Xml;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Programming code or pseudocode that describes a calculation.  THe code returns a value of the data type required by the parent Response field.  To assist with enabling the code in the form, the referenced form items and properties should be referenced by @name under the parameters elemeent.  It is possible to add mulitple calculation expressions to produce equivalent results using different programming languages and URIs.  The @ type attribute may be used to distinguish between them.  An Extension may be used instead of or along with an Expression and Parameters list.  Expressions may populate Responses that are set to @readOnly = "true" to ensure that all responses are calculated and not latered by the user.  Alternatively, the user may change a value created by (or instead of) the Expression.
/// </summary>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeAnyType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetAttrValueScriptType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptCodeBoolType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptBoolFuncActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ActSetBoolAttributeValueCodeType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
[System.SerializableAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
public abstract partial class ScriptCodeBaseType : ExtensionBaseType
{
    
    #region Private fields
    private bool _shouldSerializeallowNull;
    
    private bool _shouldSerializereturnList;
    
    private bool _returnList;
    
    private string _listDelimiter;
    
    private string _objectTypeName;
    
    private string _objectFormat;
    
    private bool _allowNull;
    
    private string _returnVal;
    
    private string _language;
    
    private string _code;
    #endregion
    
    ///// <summary>
    ///// ScriptCodeBaseType class constructor
    ///// </summary>
    //public ScriptCodeBaseType()
    //{
    //    this._returnList = false;
    //    this._listDelimiter = "|";
    //    this._allowNull = true;
    //}
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public virtual bool returnList
    {
        get
        {
            return this._returnList;
        }
        set
        {
            if ((_returnList.Equals(value) != true))
            {
                this._returnList = value;
                this.OnPropertyChanged("returnList", value);
            }
            _shouldSerializereturnList = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute("|")]
    public virtual string listDelimiter
    {
        get
        {
            return this._listDelimiter;
        }
        set
        {
            if ((this._listDelimiter == value))
            {
                return;
            }
            if (((this._listDelimiter == null) 
                        || (_listDelimiter.Equals(value) != true)))
            {
                this._listDelimiter = value;
                this.OnPropertyChanged("listDelimiter", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectTypeName
    {
        get
        {
            return this._objectTypeName;
        }
        set
        {
            if ((this._objectTypeName == value))
            {
                return;
            }
            if (((this._objectTypeName == null) 
                        || (_objectTypeName.Equals(value) != true)))
            {
                this._objectTypeName = value;
                this.OnPropertyChanged("objectTypeName", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string objectFormat
    {
        get
        {
            return this._objectFormat;
        }
        set
        {
            if ((this._objectFormat == value))
            {
                return;
            }
            if (((this._objectFormat == null) 
                        || (_objectFormat.Equals(value) != true)))
            {
                this._objectFormat = value;
                this.OnPropertyChanged("objectFormat", value);
            }
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public virtual bool allowNull
    {
        get
        {
            return this._allowNull;
        }
        set
        {
            if ((_allowNull.Equals(value) != true))
            {
                this._allowNull = value;
                this.OnPropertyChanged("allowNull", value);
            }
            _shouldSerializeallowNull = true;
        }
    }
    
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string returnVal
    {
        get
        {
            return this._returnVal;
        }
        set
        {
            if ((this._returnVal == value))
            {
                return;
            }
            if (((this._returnVal == null) 
                        || (_returnVal.Equals(value) != true)))
            {
                this._returnVal = value;
                this.OnPropertyChanged("returnVal", value);
            }
        }
    }
    
    /// <summary>
    /// Programming language.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string language
    {
        get
        {
            return this._language;
        }
        set
        {
            if ((this._language == value))
            {
                return;
            }
            if (((this._language == null) 
                        || (_language.Equals(value) != true)))
            {
                this._language = value;
                this.OnPropertyChanged("language", value);
            }
        }
    }
    
    /// <summary>
    /// Script contents.
    /// </summary>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public virtual string code
    {
        get
        {
            return this._code;
        }
        set
        {
            if ((this._code == value))
            {
                return;
            }
            if (((this._code == null) 
                        || (_code.Equals(value) != true)))
            {
                this._code = value;
                this.OnPropertyChanged("code", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether returnList should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnList()
    {
        if (_shouldSerializereturnList)
        {
            return true;
        }
        return (_returnList != default(bool));
    }
    
    /// <summary>
    /// Test whether allowNull should be serialized
    /// </summary>
    public virtual bool ShouldSerializeallowNull()
    {
        if (_shouldSerializeallowNull)
        {
            return true;
        }
        return (_allowNull != default(bool));
    }
    
    /// <summary>
    /// Test whether listDelimiter should be serialized
    /// </summary>
    public virtual bool ShouldSerializelistDelimiter()
    {
        return !string.IsNullOrEmpty(listDelimiter);
    }
    
    /// <summary>
    /// Test whether objectTypeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectTypeName()
    {
        return !string.IsNullOrEmpty(objectTypeName);
    }
    
    /// <summary>
    /// Test whether objectFormat should be serialized
    /// </summary>
    public virtual bool ShouldSerializeobjectFormat()
    {
        return !string.IsNullOrEmpty(objectFormat);
    }
    
    /// <summary>
    /// Test whether returnVal should be serialized
    /// </summary>
    public virtual bool ShouldSerializereturnVal()
    {
        return !string.IsNullOrEmpty(returnVal);
    }
    
    /// <summary>
    /// Test whether language should be serialized
    /// </summary>
    public virtual bool ShouldSerializelanguage()
    {
        return !string.IsNullOrEmpty(language);
    }
    
    /// <summary>
    /// Test whether code should be serialized
    /// </summary>
    public virtual bool ShouldSerializecode()
    {
        return !string.IsNullOrEmpty(code);
    }
}
}
#pragma warning restore
